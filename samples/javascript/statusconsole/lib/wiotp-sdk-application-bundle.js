(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g=(g.wiotp||(g.wiotp = {}));g=(g.sdk||(g.sdk = {}));g.application = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
module.exports = require('./lib/axios');
},{"./lib/axios":3}],2:[function(require,module,exports){
(function (process){
'use strict';

var utils = require('./../utils');
var settle = require('./../core/settle');
var buildURL = require('./../helpers/buildURL');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var createError = require('../core/createError');
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if (process.env.NODE_ENV !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = require('./../helpers/cookies');

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

}).call(this,require('_process'))
},{"../core/createError":9,"./../core/settle":12,"./../helpers/btoa":16,"./../helpers/buildURL":17,"./../helpers/cookies":19,"./../helpers/isURLSameOrigin":21,"./../helpers/parseHeaders":23,"./../utils":25,"_process":124}],3:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var defaults = require('./defaults');

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;

},{"./cancel/Cancel":4,"./cancel/CancelToken":5,"./cancel/isCancel":6,"./core/Axios":7,"./defaults":14,"./helpers/bind":15,"./helpers/spread":24,"./utils":25}],4:[function(require,module,exports){
'use strict';

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;

},{}],5:[function(require,module,exports){
'use strict';

var Cancel = require('./Cancel');

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

},{"./Cancel":4}],6:[function(require,module,exports){
'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

},{}],7:[function(require,module,exports){
'use strict';

var defaults = require('./../defaults');
var utils = require('./../utils');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;

},{"./../defaults":14,"./../utils":25,"./InterceptorManager":8,"./dispatchRequest":10}],8:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

},{"./../utils":25}],9:[function(require,module,exports){
'use strict';

var enhanceError = require('./enhanceError');

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

},{"./enhanceError":11}],10:[function(require,module,exports){
'use strict';

var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');
var isAbsoluteURL = require('./../helpers/isAbsoluteURL');
var combineURLs = require('./../helpers/combineURLs');

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};

},{"../cancel/isCancel":6,"../defaults":14,"./../helpers/combineURLs":18,"./../helpers/isAbsoluteURL":20,"./../utils":25,"./transformData":13}],11:[function(require,module,exports){
'use strict';

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};

},{}],12:[function(require,module,exports){
'use strict';

var createError = require('./createError');

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};

},{"./createError":9}],13:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};

},{"./../utils":25}],14:[function(require,module,exports){
(function (process){
'use strict';

var utils = require('./utils');
var normalizeHeaderName = require('./helpers/normalizeHeaderName');

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = require('./adapters/xhr');
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = require('./adapters/http');
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

}).call(this,require('_process'))
},{"./adapters/http":2,"./adapters/xhr":2,"./helpers/normalizeHeaderName":22,"./utils":25,"_process":124}],15:[function(require,module,exports){
'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

},{}],16:[function(require,module,exports){
'use strict';

// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;

},{}],17:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

},{"./../utils":25}],18:[function(require,module,exports){
'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};

},{}],19:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);

},{"./../utils":25}],20:[function(require,module,exports){
'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

},{}],21:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);

},{"./../utils":25}],22:[function(require,module,exports){
'use strict';

var utils = require('../utils');

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

},{"../utils":25}],23:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

},{"./../utils":25}],24:[function(require,module,exports){
'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

},{}],25:[function(require,module,exports){
'use strict';

var bind = require('./helpers/bind');
var isBuffer = require('is-buffer');

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};

},{"./helpers/bind":15,"is-buffer":103}],26:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],27:[function(require,module,exports){
var DuplexStream = require('readable-stream/duplex')
  , util         = require('util')
  , Buffer       = require('safe-buffer').Buffer


function BufferList (callback) {
  if (!(this instanceof BufferList))
    return new BufferList(callback)

  this._bufs  = []
  this.length = 0

  if (typeof callback == 'function') {
    this._callback = callback

    var piper = function piper (err) {
      if (this._callback) {
        this._callback(err)
        this._callback = null
      }
    }.bind(this)

    this.on('pipe', function onPipe (src) {
      src.on('error', piper)
    })
    this.on('unpipe', function onUnpipe (src) {
      src.removeListener('error', piper)
    })
  } else {
    this.append(callback)
  }

  DuplexStream.call(this)
}


util.inherits(BufferList, DuplexStream)


BufferList.prototype._offset = function _offset (offset) {
  var tot = 0, i = 0, _t
  if (offset === 0) return [ 0, 0 ]
  for (; i < this._bufs.length; i++) {
    _t = tot + this._bufs[i].length
    if (offset < _t || i == this._bufs.length - 1)
      return [ i, offset - tot ]
    tot = _t
  }
}


BufferList.prototype.append = function append (buf) {
  var i = 0

  if (Buffer.isBuffer(buf)) {
    this._appendBuffer(buf);
  } else if (Array.isArray(buf)) {
    for (; i < buf.length; i++)
      this.append(buf[i])
  } else if (buf instanceof BufferList) {
    // unwrap argument into individual BufferLists
    for (; i < buf._bufs.length; i++)
      this.append(buf._bufs[i])
  } else if (buf != null) {
    // coerce number arguments to strings, since Buffer(number) does
    // uninitialized memory allocation
    if (typeof buf == 'number')
      buf = buf.toString()

    this._appendBuffer(Buffer.from(buf));
  }

  return this
}


BufferList.prototype._appendBuffer = function appendBuffer (buf) {
  this._bufs.push(buf)
  this.length += buf.length
}


BufferList.prototype._write = function _write (buf, encoding, callback) {
  this._appendBuffer(buf)

  if (typeof callback == 'function')
    callback()
}


BufferList.prototype._read = function _read (size) {
  if (!this.length)
    return this.push(null)

  size = Math.min(size, this.length)
  this.push(this.slice(0, size))
  this.consume(size)
}


BufferList.prototype.end = function end (chunk) {
  DuplexStream.prototype.end.call(this, chunk)

  if (this._callback) {
    this._callback(null, this.slice())
    this._callback = null
  }
}


BufferList.prototype.get = function get (index) {
  return this.slice(index, index + 1)[0]
}


BufferList.prototype.slice = function slice (start, end) {
  if (typeof start == 'number' && start < 0)
    start += this.length
  if (typeof end == 'number' && end < 0)
    end += this.length
  return this.copy(null, 0, start, end)
}


BufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {
  if (typeof srcStart != 'number' || srcStart < 0)
    srcStart = 0
  if (typeof srcEnd != 'number' || srcEnd > this.length)
    srcEnd = this.length
  if (srcStart >= this.length)
    return dst || Buffer.alloc(0)
  if (srcEnd <= 0)
    return dst || Buffer.alloc(0)

  var copy   = !!dst
    , off    = this._offset(srcStart)
    , len    = srcEnd - srcStart
    , bytes  = len
    , bufoff = (copy && dstStart) || 0
    , start  = off[1]
    , l
    , i

  // copy/slice everything
  if (srcStart === 0 && srcEnd == this.length) {
    if (!copy) { // slice, but full concat if multiple buffers
      return this._bufs.length === 1
        ? this._bufs[0]
        : Buffer.concat(this._bufs, this.length)
    }

    // copy, need to copy individual buffers
    for (i = 0; i < this._bufs.length; i++) {
      this._bufs[i].copy(dst, bufoff)
      bufoff += this._bufs[i].length
    }

    return dst
  }

  // easy, cheap case where it's a subset of one of the buffers
  if (bytes <= this._bufs[off[0]].length - start) {
    return copy
      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)
      : this._bufs[off[0]].slice(start, start + bytes)
  }

  if (!copy) // a slice, we need something to copy in to
    dst = Buffer.allocUnsafe(len)

  for (i = off[0]; i < this._bufs.length; i++) {
    l = this._bufs[i].length - start

    if (bytes > l) {
      this._bufs[i].copy(dst, bufoff, start)
    } else {
      this._bufs[i].copy(dst, bufoff, start, start + bytes)
      break
    }

    bufoff += l
    bytes -= l

    if (start)
      start = 0
  }

  return dst
}

BufferList.prototype.shallowSlice = function shallowSlice (start, end) {
  start = start || 0
  end = end || this.length

  if (start < 0)
    start += this.length
  if (end < 0)
    end += this.length

  var startOffset = this._offset(start)
    , endOffset = this._offset(end)
    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)

  if (endOffset[1] == 0)
    buffers.pop()
  else
    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])

  if (startOffset[1] != 0)
    buffers[0] = buffers[0].slice(startOffset[1])

  return new BufferList(buffers)
}

BufferList.prototype.toString = function toString (encoding, start, end) {
  return this.slice(start, end).toString(encoding)
}

BufferList.prototype.consume = function consume (bytes) {
  while (this._bufs.length) {
    if (bytes >= this._bufs[0].length) {
      bytes -= this._bufs[0].length
      this.length -= this._bufs[0].length
      this._bufs.shift()
    } else {
      this._bufs[0] = this._bufs[0].slice(bytes)
      this.length -= bytes
      break
    }
  }
  return this
}


BufferList.prototype.duplicate = function duplicate () {
  var i = 0
    , copy = new BufferList()

  for (; i < this._bufs.length; i++)
    copy.append(this._bufs[i])

  return copy
}


BufferList.prototype.destroy = function destroy () {
  this._bufs.length = 0
  this.length = 0
  this.push(null)
}


;(function () {
  var methods = {
      'readDoubleBE' : 8
    , 'readDoubleLE' : 8
    , 'readFloatBE'  : 4
    , 'readFloatLE'  : 4
    , 'readInt32BE'  : 4
    , 'readInt32LE'  : 4
    , 'readUInt32BE' : 4
    , 'readUInt32LE' : 4
    , 'readInt16BE'  : 2
    , 'readInt16LE'  : 2
    , 'readUInt16BE' : 2
    , 'readUInt16LE' : 2
    , 'readInt8'     : 1
    , 'readUInt8'    : 1
  }

  for (var m in methods) {
    (function (m) {
      BufferList.prototype[m] = function (offset) {
        return this.slice(offset, offset + methods[m])[m](0)
      }
    }(m))
  }
}())


module.exports = BufferList

},{"readable-stream/duplex":129,"safe-buffer":140,"util":148}],28:[function(require,module,exports){
(function (process,global,setImmediate){
/* @preserve
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013-2018 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
/**
 * bluebird build version 3.5.4
 * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each
*/
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_=="function"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_=="function"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
var SomePromiseArray = Promise._SomePromiseArray;
function any(promises) {
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    ret.setHowMany(1);
    ret.setUnwrap();
    ret.init();
    return promise;
}

Promise.any = function (promises) {
    return any(promises);
};

Promise.prototype.any = function () {
    return any(this);
};

};

},{}],2:[function(_dereq_,module,exports){
"use strict";
var firstLineError;
try {throw new Error(); } catch (e) {firstLineError = e;}
var schedule = _dereq_("./schedule");
var Queue = _dereq_("./queue");
var util = _dereq_("./util");

function Async() {
    this._customScheduler = false;
    this._isTickUsed = false;
    this._lateQueue = new Queue(16);
    this._normalQueue = new Queue(16);
    this._haveDrainedQueues = false;
    this._trampolineEnabled = true;
    var self = this;
    this.drainQueues = function () {
        self._drainQueues();
    };
    this._schedule = schedule;
}

Async.prototype.setScheduler = function(fn) {
    var prev = this._schedule;
    this._schedule = fn;
    this._customScheduler = true;
    return prev;
};

Async.prototype.hasCustomScheduler = function() {
    return this._customScheduler;
};

Async.prototype.enableTrampoline = function() {
    this._trampolineEnabled = true;
};

Async.prototype.disableTrampolineIfNecessary = function() {
    if (util.hasDevTools) {
        this._trampolineEnabled = false;
    }
};

Async.prototype.haveItemsQueued = function () {
    return this._isTickUsed || this._haveDrainedQueues;
};


Async.prototype.fatalError = function(e, isNode) {
    if (isNode) {
        process.stderr.write("Fatal " + (e instanceof Error ? e.stack : e) +
            "\n");
        process.exit(2);
    } else {
        this.throwLater(e);
    }
};

Async.prototype.throwLater = function(fn, arg) {
    if (arguments.length === 1) {
        arg = fn;
        fn = function () { throw arg; };
    }
    if (typeof setTimeout !== "undefined") {
        setTimeout(function() {
            fn(arg);
        }, 0);
    } else try {
        this._schedule(function() {
            fn(arg);
        });
    } catch (e) {
        throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
};

function AsyncInvokeLater(fn, receiver, arg) {
    this._lateQueue.push(fn, receiver, arg);
    this._queueTick();
}

function AsyncInvoke(fn, receiver, arg) {
    this._normalQueue.push(fn, receiver, arg);
    this._queueTick();
}

function AsyncSettlePromises(promise) {
    this._normalQueue._pushOne(promise);
    this._queueTick();
}

if (!util.hasDevTools) {
    Async.prototype.invokeLater = AsyncInvokeLater;
    Async.prototype.invoke = AsyncInvoke;
    Async.prototype.settlePromises = AsyncSettlePromises;
} else {
    Async.prototype.invokeLater = function (fn, receiver, arg) {
        if (this._trampolineEnabled) {
            AsyncInvokeLater.call(this, fn, receiver, arg);
        } else {
            this._schedule(function() {
                setTimeout(function() {
                    fn.call(receiver, arg);
                }, 100);
            });
        }
    };

    Async.prototype.invoke = function (fn, receiver, arg) {
        if (this._trampolineEnabled) {
            AsyncInvoke.call(this, fn, receiver, arg);
        } else {
            this._schedule(function() {
                fn.call(receiver, arg);
            });
        }
    };

    Async.prototype.settlePromises = function(promise) {
        if (this._trampolineEnabled) {
            AsyncSettlePromises.call(this, promise);
        } else {
            this._schedule(function() {
                promise._settlePromises();
            });
        }
    };
}

function _drainQueue(queue) {
    while (queue.length() > 0) {
        _drainQueueStep(queue);
    }
}

function _drainQueueStep(queue) {
    var fn = queue.shift();
    if (typeof fn !== "function") {
        fn._settlePromises();
    } else {
        var receiver = queue.shift();
        var arg = queue.shift();
        fn.call(receiver, arg);
    }
}

Async.prototype._drainQueues = function () {
    _drainQueue(this._normalQueue);
    this._reset();
    this._haveDrainedQueues = true;
    _drainQueue(this._lateQueue);
};

Async.prototype._queueTick = function () {
    if (!this._isTickUsed) {
        this._isTickUsed = true;
        this._schedule(this.drainQueues);
    }
};

Async.prototype._reset = function () {
    this._isTickUsed = false;
};

module.exports = Async;
module.exports.firstLineError = firstLineError;

},{"./queue":26,"./schedule":29,"./util":36}],3:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {
var calledBind = false;
var rejectThis = function(_, e) {
    this._reject(e);
};

var targetRejected = function(e, context) {
    context.promiseRejectionQueued = true;
    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
};

var bindingResolved = function(thisArg, context) {
    if (((this._bitField & 50397184) === 0)) {
        this._resolveCallback(context.target);
    }
};

var bindingRejected = function(e, context) {
    if (!context.promiseRejectionQueued) this._reject(e);
};

Promise.prototype.bind = function (thisArg) {
    if (!calledBind) {
        calledBind = true;
        Promise.prototype._propagateFrom = debug.propagateFromFunction();
        Promise.prototype._boundValue = debug.boundValueFunction();
    }
    var maybePromise = tryConvertToPromise(thisArg);
    var ret = new Promise(INTERNAL);
    ret._propagateFrom(this, 1);
    var target = this._target();
    ret._setBoundTo(maybePromise);
    if (maybePromise instanceof Promise) {
        var context = {
            promiseRejectionQueued: false,
            promise: ret,
            target: target,
            bindingPromise: maybePromise
        };
        target._then(INTERNAL, targetRejected, undefined, ret, context);
        maybePromise._then(
            bindingResolved, bindingRejected, undefined, ret, context);
        ret._setOnCancel(maybePromise);
    } else {
        ret._resolveCallback(target);
    }
    return ret;
};

Promise.prototype._setBoundTo = function (obj) {
    if (obj !== undefined) {
        this._bitField = this._bitField | 2097152;
        this._boundTo = obj;
    } else {
        this._bitField = this._bitField & (~2097152);
    }
};

Promise.prototype._isBound = function () {
    return (this._bitField & 2097152) === 2097152;
};

Promise.bind = function (thisArg, value) {
    return Promise.resolve(value).bind(thisArg);
};
};

},{}],4:[function(_dereq_,module,exports){
"use strict";
var old;
if (typeof Promise !== "undefined") old = Promise;
function noConflict() {
    try { if (Promise === bluebird) Promise = old; }
    catch (e) {}
    return bluebird;
}
var bluebird = _dereq_("./promise")();
bluebird.noConflict = noConflict;
module.exports = bluebird;

},{"./promise":22}],5:[function(_dereq_,module,exports){
"use strict";
var cr = Object.create;
if (cr) {
    var callerCache = cr(null);
    var getterCache = cr(null);
    callerCache[" size"] = getterCache[" size"] = 0;
}

module.exports = function(Promise) {
var util = _dereq_("./util");
var canEvaluate = util.canEvaluate;
var isIdentifier = util.isIdentifier;

var getMethodCaller;
var getGetter;
if (!true) {
var makeMethodCaller = function (methodName) {
    return new Function("ensureMethod", "                                    \n\
        return function(obj) {                                               \n\
            'use strict'                                                     \n\
            var len = this.length;                                           \n\
            ensureMethod(obj, 'methodName');                                 \n\
            switch(len) {                                                    \n\
                case 1: return obj.methodName(this[0]);                      \n\
                case 2: return obj.methodName(this[0], this[1]);             \n\
                case 3: return obj.methodName(this[0], this[1], this[2]);    \n\
                case 0: return obj.methodName();                             \n\
                default:                                                     \n\
                    return obj.methodName.apply(obj, this);                  \n\
            }                                                                \n\
        };                                                                   \n\
        ".replace(/methodName/g, methodName))(ensureMethod);
};

var makeGetter = function (propertyName) {
    return new Function("obj", "                                             \n\
        'use strict';                                                        \n\
        return obj.propertyName;                                             \n\
        ".replace("propertyName", propertyName));
};

var getCompiled = function(name, compiler, cache) {
    var ret = cache[name];
    if (typeof ret !== "function") {
        if (!isIdentifier(name)) {
            return null;
        }
        ret = compiler(name);
        cache[name] = ret;
        cache[" size"]++;
        if (cache[" size"] > 512) {
            var keys = Object.keys(cache);
            for (var i = 0; i < 256; ++i) delete cache[keys[i]];
            cache[" size"] = keys.length - 256;
        }
    }
    return ret;
};

getMethodCaller = function(name) {
    return getCompiled(name, makeMethodCaller, callerCache);
};

getGetter = function(name) {
    return getCompiled(name, makeGetter, getterCache);
};
}

function ensureMethod(obj, methodName) {
    var fn;
    if (obj != null) fn = obj[methodName];
    if (typeof fn !== "function") {
        var message = "Object " + util.classString(obj) + " has no method '" +
            util.toString(methodName) + "'";
        throw new Promise.TypeError(message);
    }
    return fn;
}

function caller(obj) {
    var methodName = this.pop();
    var fn = ensureMethod(obj, methodName);
    return fn.apply(obj, this);
}
Promise.prototype.call = function (methodName) {
    var args = [].slice.call(arguments, 1);;
    if (!true) {
        if (canEvaluate) {
            var maybeCaller = getMethodCaller(methodName);
            if (maybeCaller !== null) {
                return this._then(
                    maybeCaller, undefined, undefined, args, undefined);
            }
        }
    }
    args.push(methodName);
    return this._then(caller, undefined, undefined, args, undefined);
};

function namedGetter(obj) {
    return obj[this];
}
function indexedGetter(obj) {
    var index = +this;
    if (index < 0) index = Math.max(0, index + obj.length);
    return obj[index];
}
Promise.prototype.get = function (propertyName) {
    var isIndex = (typeof propertyName === "number");
    var getter;
    if (!isIndex) {
        if (canEvaluate) {
            var maybeGetter = getGetter(propertyName);
            getter = maybeGetter !== null ? maybeGetter : namedGetter;
        } else {
            getter = namedGetter;
        }
    } else {
        getter = indexedGetter;
    }
    return this._then(getter, undefined, undefined, propertyName, undefined);
};
};

},{"./util":36}],6:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, PromiseArray, apiRejection, debug) {
var util = _dereq_("./util");
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;
var async = Promise._async;

Promise.prototype["break"] = Promise.prototype.cancel = function() {
    if (!debug.cancellation()) return this._warn("cancellation is disabled");

    var promise = this;
    var child = promise;
    while (promise._isCancellable()) {
        if (!promise._cancelBy(child)) {
            if (child._isFollowing()) {
                child._followee().cancel();
            } else {
                child._cancelBranched();
            }
            break;
        }

        var parent = promise._cancellationParent;
        if (parent == null || !parent._isCancellable()) {
            if (promise._isFollowing()) {
                promise._followee().cancel();
            } else {
                promise._cancelBranched();
            }
            break;
        } else {
            if (promise._isFollowing()) promise._followee().cancel();
            promise._setWillBeCancelled();
            child = promise;
            promise = parent;
        }
    }
};

Promise.prototype._branchHasCancelled = function() {
    this._branchesRemainingToCancel--;
};

Promise.prototype._enoughBranchesHaveCancelled = function() {
    return this._branchesRemainingToCancel === undefined ||
           this._branchesRemainingToCancel <= 0;
};

Promise.prototype._cancelBy = function(canceller) {
    if (canceller === this) {
        this._branchesRemainingToCancel = 0;
        this._invokeOnCancel();
        return true;
    } else {
        this._branchHasCancelled();
        if (this._enoughBranchesHaveCancelled()) {
            this._invokeOnCancel();
            return true;
        }
    }
    return false;
};

Promise.prototype._cancelBranched = function() {
    if (this._enoughBranchesHaveCancelled()) {
        this._cancel();
    }
};

Promise.prototype._cancel = function() {
    if (!this._isCancellable()) return;
    this._setCancelled();
    async.invoke(this._cancelPromises, this, undefined);
};

Promise.prototype._cancelPromises = function() {
    if (this._length() > 0) this._settlePromises();
};

Promise.prototype._unsetOnCancel = function() {
    this._onCancelField = undefined;
};

Promise.prototype._isCancellable = function() {
    return this.isPending() && !this._isCancelled();
};

Promise.prototype.isCancellable = function() {
    return this.isPending() && !this.isCancelled();
};

Promise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {
    if (util.isArray(onCancelCallback)) {
        for (var i = 0; i < onCancelCallback.length; ++i) {
            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
        }
    } else if (onCancelCallback !== undefined) {
        if (typeof onCancelCallback === "function") {
            if (!internalOnly) {
                var e = tryCatch(onCancelCallback).call(this._boundValue());
                if (e === errorObj) {
                    this._attachExtraTrace(e.e);
                    async.throwLater(e.e);
                }
            }
        } else {
            onCancelCallback._resultCancelled(this);
        }
    }
};

Promise.prototype._invokeOnCancel = function() {
    var onCancelCallback = this._onCancel();
    this._unsetOnCancel();
    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
};

Promise.prototype._invokeInternalOnCancel = function() {
    if (this._isCancellable()) {
        this._doInvokeOnCancel(this._onCancel(), true);
        this._unsetOnCancel();
    }
};

Promise.prototype._resultCancelled = function() {
    this.cancel();
};

};

},{"./util":36}],7:[function(_dereq_,module,exports){
"use strict";
module.exports = function(NEXT_FILTER) {
var util = _dereq_("./util");
var getKeys = _dereq_("./es5").keys;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;

function catchFilter(instances, cb, promise) {
    return function(e) {
        var boundTo = promise._boundValue();
        predicateLoop: for (var i = 0; i < instances.length; ++i) {
            var item = instances[i];

            if (item === Error ||
                (item != null && item.prototype instanceof Error)) {
                if (e instanceof item) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (typeof item === "function") {
                var matchesPredicate = tryCatch(item).call(boundTo, e);
                if (matchesPredicate === errorObj) {
                    return matchesPredicate;
                } else if (matchesPredicate) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (util.isObject(e)) {
                var keys = getKeys(item);
                for (var j = 0; j < keys.length; ++j) {
                    var key = keys[j];
                    if (item[key] != e[key]) {
                        continue predicateLoop;
                    }
                }
                return tryCatch(cb).call(boundTo, e);
            }
        }
        return NEXT_FILTER;
    };
}

return catchFilter;
};

},{"./es5":13,"./util":36}],8:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
var longStackTraces = false;
var contextStack = [];

Promise.prototype._promiseCreated = function() {};
Promise.prototype._pushContext = function() {};
Promise.prototype._popContext = function() {return null;};
Promise._peekContext = Promise.prototype._peekContext = function() {};

function Context() {
    this._trace = new Context.CapturedTrace(peekContext());
}
Context.prototype._pushContext = function () {
    if (this._trace !== undefined) {
        this._trace._promiseCreated = null;
        contextStack.push(this._trace);
    }
};

Context.prototype._popContext = function () {
    if (this._trace !== undefined) {
        var trace = contextStack.pop();
        var ret = trace._promiseCreated;
        trace._promiseCreated = null;
        return ret;
    }
    return null;
};

function createContext() {
    if (longStackTraces) return new Context();
}

function peekContext() {
    var lastIndex = contextStack.length - 1;
    if (lastIndex >= 0) {
        return contextStack[lastIndex];
    }
    return undefined;
}
Context.CapturedTrace = null;
Context.create = createContext;
Context.deactivateLongStackTraces = function() {};
Context.activateLongStackTraces = function() {
    var Promise_pushContext = Promise.prototype._pushContext;
    var Promise_popContext = Promise.prototype._popContext;
    var Promise_PeekContext = Promise._peekContext;
    var Promise_peekContext = Promise.prototype._peekContext;
    var Promise_promiseCreated = Promise.prototype._promiseCreated;
    Context.deactivateLongStackTraces = function() {
        Promise.prototype._pushContext = Promise_pushContext;
        Promise.prototype._popContext = Promise_popContext;
        Promise._peekContext = Promise_PeekContext;
        Promise.prototype._peekContext = Promise_peekContext;
        Promise.prototype._promiseCreated = Promise_promiseCreated;
        longStackTraces = false;
    };
    longStackTraces = true;
    Promise.prototype._pushContext = Context.prototype._pushContext;
    Promise.prototype._popContext = Context.prototype._popContext;
    Promise._peekContext = Promise.prototype._peekContext = peekContext;
    Promise.prototype._promiseCreated = function() {
        var ctx = this._peekContext();
        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;
    };
};
return Context;
};

},{}],9:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, Context) {
var getDomain = Promise._getDomain;
var async = Promise._async;
var Warning = _dereq_("./errors").Warning;
var util = _dereq_("./util");
var es5 = _dereq_("./es5");
var canAttachTrace = util.canAttachTrace;
var unhandledRejectionHandled;
var possiblyUnhandledRejection;
var bluebirdFramePattern =
    /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
var nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
var parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
var stackFramePattern = null;
var formatStack = null;
var indentStackFrames = false;
var printWarning;
var debugging = !!(util.env("BLUEBIRD_DEBUG") != 0 &&
                        (true ||
                         util.env("BLUEBIRD_DEBUG") ||
                         util.env("NODE_ENV") === "development"));

var warnings = !!(util.env("BLUEBIRD_WARNINGS") != 0 &&
    (debugging || util.env("BLUEBIRD_WARNINGS")));

var longStackTraces = !!(util.env("BLUEBIRD_LONG_STACK_TRACES") != 0 &&
    (debugging || util.env("BLUEBIRD_LONG_STACK_TRACES")));

var wForgottenReturn = util.env("BLUEBIRD_W_FORGOTTEN_RETURN") != 0 &&
    (warnings || !!util.env("BLUEBIRD_W_FORGOTTEN_RETURN"));

Promise.prototype.suppressUnhandledRejections = function() {
    var target = this._target();
    target._bitField = ((target._bitField & (~1048576)) |
                      524288);
};

Promise.prototype._ensurePossibleRejectionHandled = function () {
    if ((this._bitField & 524288) !== 0) return;
    this._setRejectionIsUnhandled();
    var self = this;
    setTimeout(function() {
        self._notifyUnhandledRejection();
    }, 1);
};

Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
    fireRejectionEvent("rejectionHandled",
                                  unhandledRejectionHandled, undefined, this);
};

Promise.prototype._setReturnedNonUndefined = function() {
    this._bitField = this._bitField | 268435456;
};

Promise.prototype._returnedNonUndefined = function() {
    return (this._bitField & 268435456) !== 0;
};

Promise.prototype._notifyUnhandledRejection = function () {
    if (this._isRejectionUnhandled()) {
        var reason = this._settledValue();
        this._setUnhandledRejectionIsNotified();
        fireRejectionEvent("unhandledRejection",
                                      possiblyUnhandledRejection, reason, this);
    }
};

Promise.prototype._setUnhandledRejectionIsNotified = function () {
    this._bitField = this._bitField | 262144;
};

Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
    this._bitField = this._bitField & (~262144);
};

Promise.prototype._isUnhandledRejectionNotified = function () {
    return (this._bitField & 262144) > 0;
};

Promise.prototype._setRejectionIsUnhandled = function () {
    this._bitField = this._bitField | 1048576;
};

Promise.prototype._unsetRejectionIsUnhandled = function () {
    this._bitField = this._bitField & (~1048576);
    if (this._isUnhandledRejectionNotified()) {
        this._unsetUnhandledRejectionIsNotified();
        this._notifyUnhandledRejectionIsHandled();
    }
};

Promise.prototype._isRejectionUnhandled = function () {
    return (this._bitField & 1048576) > 0;
};

Promise.prototype._warn = function(message, shouldUseOwnTrace, promise) {
    return warn(message, shouldUseOwnTrace, promise || this);
};

Promise.onPossiblyUnhandledRejection = function (fn) {
    var domain = getDomain();
    possiblyUnhandledRejection =
        typeof fn === "function" ? (domain === null ?
                                            fn : util.domainBind(domain, fn))
                                 : undefined;
};

Promise.onUnhandledRejectionHandled = function (fn) {
    var domain = getDomain();
    unhandledRejectionHandled =
        typeof fn === "function" ? (domain === null ?
                                            fn : util.domainBind(domain, fn))
                                 : undefined;
};

var disableLongStackTraces = function() {};
Promise.longStackTraces = function () {
    if (async.haveItemsQueued() && !config.longStackTraces) {
        throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    if (!config.longStackTraces && longStackTracesIsSupported()) {
        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
        var Promise_dereferenceTrace = Promise.prototype._dereferenceTrace;
        config.longStackTraces = true;
        disableLongStackTraces = function() {
            if (async.haveItemsQueued() && !config.longStackTraces) {
                throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
            }
            Promise.prototype._captureStackTrace = Promise_captureStackTrace;
            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
            Promise.prototype._dereferenceTrace = Promise_dereferenceTrace;
            Context.deactivateLongStackTraces();
            async.enableTrampoline();
            config.longStackTraces = false;
        };
        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
        Promise.prototype._dereferenceTrace = longStackTracesDereferenceTrace;
        Context.activateLongStackTraces();
        async.disableTrampolineIfNecessary();
    }
};

Promise.hasLongStackTraces = function () {
    return config.longStackTraces && longStackTracesIsSupported();
};

var fireDomEvent = (function() {
    try {
        if (typeof CustomEvent === "function") {
            var event = new CustomEvent("CustomEvent");
            util.global.dispatchEvent(event);
            return function(name, event) {
                var eventData = {
                    detail: event,
                    cancelable: true
                };
                es5.defineProperty(
                    eventData, "promise", {value: event.promise});
                es5.defineProperty(eventData, "reason", {value: event.reason});
                var domEvent = new CustomEvent(name.toLowerCase(), eventData);
                return !util.global.dispatchEvent(domEvent);
            };
        } else if (typeof Event === "function") {
            var event = new Event("CustomEvent");
            util.global.dispatchEvent(event);
            return function(name, event) {
                var domEvent = new Event(name.toLowerCase(), {
                    cancelable: true
                });
                domEvent.detail = event;
                es5.defineProperty(domEvent, "promise", {value: event.promise});
                es5.defineProperty(domEvent, "reason", {value: event.reason});
                return !util.global.dispatchEvent(domEvent);
            };
        } else {
            var event = document.createEvent("CustomEvent");
            event.initCustomEvent("testingtheevent", false, true, {});
            util.global.dispatchEvent(event);
            return function(name, event) {
                var domEvent = document.createEvent("CustomEvent");
                domEvent.initCustomEvent(name.toLowerCase(), false, true,
                    event);
                return !util.global.dispatchEvent(domEvent);
            };
        }
    } catch (e) {}
    return function() {
        return false;
    };
})();

var fireGlobalEvent = (function() {
    if (util.isNode) {
        return function() {
            return process.emit.apply(process, arguments);
        };
    } else {
        if (!util.global) {
            return function() {
                return false;
            };
        }
        return function(name) {
            var methodName = "on" + name.toLowerCase();
            var method = util.global[methodName];
            if (!method) return false;
            method.apply(util.global, [].slice.call(arguments, 1));
            return true;
        };
    }
})();

function generatePromiseLifecycleEventObject(name, promise) {
    return {promise: promise};
}

var eventToObjectGenerator = {
    promiseCreated: generatePromiseLifecycleEventObject,
    promiseFulfilled: generatePromiseLifecycleEventObject,
    promiseRejected: generatePromiseLifecycleEventObject,
    promiseResolved: generatePromiseLifecycleEventObject,
    promiseCancelled: generatePromiseLifecycleEventObject,
    promiseChained: function(name, promise, child) {
        return {promise: promise, child: child};
    },
    warning: function(name, warning) {
        return {warning: warning};
    },
    unhandledRejection: function (name, reason, promise) {
        return {reason: reason, promise: promise};
    },
    rejectionHandled: generatePromiseLifecycleEventObject
};

var activeFireEvent = function (name) {
    var globalEventFired = false;
    try {
        globalEventFired = fireGlobalEvent.apply(null, arguments);
    } catch (e) {
        async.throwLater(e);
        globalEventFired = true;
    }

    var domEventFired = false;
    try {
        domEventFired = fireDomEvent(name,
                    eventToObjectGenerator[name].apply(null, arguments));
    } catch (e) {
        async.throwLater(e);
        domEventFired = true;
    }

    return domEventFired || globalEventFired;
};

Promise.config = function(opts) {
    opts = Object(opts);
    if ("longStackTraces" in opts) {
        if (opts.longStackTraces) {
            Promise.longStackTraces();
        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
            disableLongStackTraces();
        }
    }
    if ("warnings" in opts) {
        var warningsOption = opts.warnings;
        config.warnings = !!warningsOption;
        wForgottenReturn = config.warnings;

        if (util.isObject(warningsOption)) {
            if ("wForgottenReturn" in warningsOption) {
                wForgottenReturn = !!warningsOption.wForgottenReturn;
            }
        }
    }
    if ("cancellation" in opts && opts.cancellation && !config.cancellation) {
        if (async.haveItemsQueued()) {
            throw new Error(
                "cannot enable cancellation after promises are in use");
        }
        Promise.prototype._clearCancellationData =
            cancellationClearCancellationData;
        Promise.prototype._propagateFrom = cancellationPropagateFrom;
        Promise.prototype._onCancel = cancellationOnCancel;
        Promise.prototype._setOnCancel = cancellationSetOnCancel;
        Promise.prototype._attachCancellationCallback =
            cancellationAttachCancellationCallback;
        Promise.prototype._execute = cancellationExecute;
        propagateFromFunction = cancellationPropagateFrom;
        config.cancellation = true;
    }
    if ("monitoring" in opts) {
        if (opts.monitoring && !config.monitoring) {
            config.monitoring = true;
            Promise.prototype._fireEvent = activeFireEvent;
        } else if (!opts.monitoring && config.monitoring) {
            config.monitoring = false;
            Promise.prototype._fireEvent = defaultFireEvent;
        }
    }
    return Promise;
};

function defaultFireEvent() { return false; }

Promise.prototype._fireEvent = defaultFireEvent;
Promise.prototype._execute = function(executor, resolve, reject) {
    try {
        executor(resolve, reject);
    } catch (e) {
        return e;
    }
};
Promise.prototype._onCancel = function () {};
Promise.prototype._setOnCancel = function (handler) { ; };
Promise.prototype._attachCancellationCallback = function(onCancel) {
    ;
};
Promise.prototype._captureStackTrace = function () {};
Promise.prototype._attachExtraTrace = function () {};
Promise.prototype._dereferenceTrace = function () {};
Promise.prototype._clearCancellationData = function() {};
Promise.prototype._propagateFrom = function (parent, flags) {
    ;
    ;
};

function cancellationExecute(executor, resolve, reject) {
    var promise = this;
    try {
        executor(resolve, reject, function(onCancel) {
            if (typeof onCancel !== "function") {
                throw new TypeError("onCancel must be a function, got: " +
                                    util.toString(onCancel));
            }
            promise._attachCancellationCallback(onCancel);
        });
    } catch (e) {
        return e;
    }
}

function cancellationAttachCancellationCallback(onCancel) {
    if (!this._isCancellable()) return this;

    var previousOnCancel = this._onCancel();
    if (previousOnCancel !== undefined) {
        if (util.isArray(previousOnCancel)) {
            previousOnCancel.push(onCancel);
        } else {
            this._setOnCancel([previousOnCancel, onCancel]);
        }
    } else {
        this._setOnCancel(onCancel);
    }
}

function cancellationOnCancel() {
    return this._onCancelField;
}

function cancellationSetOnCancel(onCancel) {
    this._onCancelField = onCancel;
}

function cancellationClearCancellationData() {
    this._cancellationParent = undefined;
    this._onCancelField = undefined;
}

function cancellationPropagateFrom(parent, flags) {
    if ((flags & 1) !== 0) {
        this._cancellationParent = parent;
        var branchesRemainingToCancel = parent._branchesRemainingToCancel;
        if (branchesRemainingToCancel === undefined) {
            branchesRemainingToCancel = 0;
        }
        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
    }
    if ((flags & 2) !== 0 && parent._isBound()) {
        this._setBoundTo(parent._boundTo);
    }
}

function bindingPropagateFrom(parent, flags) {
    if ((flags & 2) !== 0 && parent._isBound()) {
        this._setBoundTo(parent._boundTo);
    }
}
var propagateFromFunction = bindingPropagateFrom;

function boundValueFunction() {
    var ret = this._boundTo;
    if (ret !== undefined) {
        if (ret instanceof Promise) {
            if (ret.isFulfilled()) {
                return ret.value();
            } else {
                return undefined;
            }
        }
    }
    return ret;
}

function longStackTracesCaptureStackTrace() {
    this._trace = new CapturedTrace(this._peekContext());
}

function longStackTracesAttachExtraTrace(error, ignoreSelf) {
    if (canAttachTrace(error)) {
        var trace = this._trace;
        if (trace !== undefined) {
            if (ignoreSelf) trace = trace._parent;
        }
        if (trace !== undefined) {
            trace.attachExtraTrace(error);
        } else if (!error.__stackCleaned__) {
            var parsed = parseStackAndMessage(error);
            util.notEnumerableProp(error, "stack",
                parsed.message + "\n" + parsed.stack.join("\n"));
            util.notEnumerableProp(error, "__stackCleaned__", true);
        }
    }
}

function longStackTracesDereferenceTrace() {
    this._trace = undefined;
}

function checkForgottenReturns(returnValue, promiseCreated, name, promise,
                               parent) {
    if (returnValue === undefined && promiseCreated !== null &&
        wForgottenReturn) {
        if (parent !== undefined && parent._returnedNonUndefined()) return;
        if ((promise._bitField & 65535) === 0) return;

        if (name) name = name + " ";
        var handlerLine = "";
        var creatorLine = "";
        if (promiseCreated._trace) {
            var traceLines = promiseCreated._trace.stack.split("\n");
            var stack = cleanStack(traceLines);
            for (var i = stack.length - 1; i >= 0; --i) {
                var line = stack[i];
                if (!nodeFramePattern.test(line)) {
                    var lineMatches = line.match(parseLinePattern);
                    if (lineMatches) {
                        handlerLine  = "at " + lineMatches[1] +
                            ":" + lineMatches[2] + ":" + lineMatches[3] + " ";
                    }
                    break;
                }
            }

            if (stack.length > 0) {
                var firstUserLine = stack[0];
                for (var i = 0; i < traceLines.length; ++i) {

                    if (traceLines[i] === firstUserLine) {
                        if (i > 0) {
                            creatorLine = "\n" + traceLines[i - 1];
                        }
                        break;
                    }
                }

            }
        }
        var msg = "a promise was created in a " + name +
            "handler " + handlerLine + "but was not returned from it, " +
            "see http://goo.gl/rRqMUw" +
            creatorLine;
        promise._warn(msg, true, promiseCreated);
    }
}

function deprecated(name, replacement) {
    var message = name +
        " is deprecated and will be removed in a future version.";
    if (replacement) message += " Use " + replacement + " instead.";
    return warn(message);
}

function warn(message, shouldUseOwnTrace, promise) {
    if (!config.warnings) return;
    var warning = new Warning(message);
    var ctx;
    if (shouldUseOwnTrace) {
        promise._attachExtraTrace(warning);
    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
        ctx.attachExtraTrace(warning);
    } else {
        var parsed = parseStackAndMessage(warning);
        warning.stack = parsed.message + "\n" + parsed.stack.join("\n");
    }

    if (!activeFireEvent("warning", warning)) {
        formatAndLogError(warning, "", true);
    }
}

function reconstructStack(message, stacks) {
    for (var i = 0; i < stacks.length - 1; ++i) {
        stacks[i].push("From previous event:");
        stacks[i] = stacks[i].join("\n");
    }
    if (i < stacks.length) {
        stacks[i] = stacks[i].join("\n");
    }
    return message + "\n" + stacks.join("\n");
}

function removeDuplicateOrEmptyJumps(stacks) {
    for (var i = 0; i < stacks.length; ++i) {
        if (stacks[i].length === 0 ||
            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {
            stacks.splice(i, 1);
            i--;
        }
    }
}

function removeCommonRoots(stacks) {
    var current = stacks[0];
    for (var i = 1; i < stacks.length; ++i) {
        var prev = stacks[i];
        var currentLastIndex = current.length - 1;
        var currentLastLine = current[currentLastIndex];
        var commonRootMeetPoint = -1;

        for (var j = prev.length - 1; j >= 0; --j) {
            if (prev[j] === currentLastLine) {
                commonRootMeetPoint = j;
                break;
            }
        }

        for (var j = commonRootMeetPoint; j >= 0; --j) {
            var line = prev[j];
            if (current[currentLastIndex] === line) {
                current.pop();
                currentLastIndex--;
            } else {
                break;
            }
        }
        current = prev;
    }
}

function cleanStack(stack) {
    var ret = [];
    for (var i = 0; i < stack.length; ++i) {
        var line = stack[i];
        var isTraceLine = "    (No stack trace)" === line ||
            stackFramePattern.test(line);
        var isInternalFrame = isTraceLine && shouldIgnore(line);
        if (isTraceLine && !isInternalFrame) {
            if (indentStackFrames && line.charAt(0) !== " ") {
                line = "    " + line;
            }
            ret.push(line);
        }
    }
    return ret;
}

function stackFramesAsArray(error) {
    var stack = error.stack.replace(/\s+$/g, "").split("\n");
    for (var i = 0; i < stack.length; ++i) {
        var line = stack[i];
        if ("    (No stack trace)" === line || stackFramePattern.test(line)) {
            break;
        }
    }
    if (i > 0 && error.name != "SyntaxError") {
        stack = stack.slice(i);
    }
    return stack;
}

function parseStackAndMessage(error) {
    var stack = error.stack;
    var message = error.toString();
    stack = typeof stack === "string" && stack.length > 0
                ? stackFramesAsArray(error) : ["    (No stack trace)"];
    return {
        message: message,
        stack: error.name == "SyntaxError" ? stack : cleanStack(stack)
    };
}

function formatAndLogError(error, title, isSoft) {
    if (typeof console !== "undefined") {
        var message;
        if (util.isObject(error)) {
            var stack = error.stack;
            message = title + formatStack(stack, error);
        } else {
            message = title + String(error);
        }
        if (typeof printWarning === "function") {
            printWarning(message, isSoft);
        } else if (typeof console.log === "function" ||
            typeof console.log === "object") {
            console.log(message);
        }
    }
}

function fireRejectionEvent(name, localHandler, reason, promise) {
    var localEventFired = false;
    try {
        if (typeof localHandler === "function") {
            localEventFired = true;
            if (name === "rejectionHandled") {
                localHandler(promise);
            } else {
                localHandler(reason, promise);
            }
        }
    } catch (e) {
        async.throwLater(e);
    }

    if (name === "unhandledRejection") {
        if (!activeFireEvent(name, reason, promise) && !localEventFired) {
            formatAndLogError(reason, "Unhandled rejection ");
        }
    } else {
        activeFireEvent(name, promise);
    }
}

function formatNonError(obj) {
    var str;
    if (typeof obj === "function") {
        str = "[function " +
            (obj.name || "anonymous") +
            "]";
    } else {
        str = obj && typeof obj.toString === "function"
            ? obj.toString() : util.toString(obj);
        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
        if (ruselessToString.test(str)) {
            try {
                var newStr = JSON.stringify(obj);
                str = newStr;
            }
            catch(e) {

            }
        }
        if (str.length === 0) {
            str = "(empty array)";
        }
    }
    return ("(<" + snip(str) + ">, no stack trace)");
}

function snip(str) {
    var maxChars = 41;
    if (str.length < maxChars) {
        return str;
    }
    return str.substr(0, maxChars - 3) + "...";
}

function longStackTracesIsSupported() {
    return typeof captureStackTrace === "function";
}

var shouldIgnore = function() { return false; };
var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
function parseLineInfo(line) {
    var matches = line.match(parseLineInfoRegex);
    if (matches) {
        return {
            fileName: matches[1],
            line: parseInt(matches[2], 10)
        };
    }
}

function setBounds(firstLineError, lastLineError) {
    if (!longStackTracesIsSupported()) return;
    var firstStackLines = firstLineError.stack.split("\n");
    var lastStackLines = lastLineError.stack.split("\n");
    var firstIndex = -1;
    var lastIndex = -1;
    var firstFileName;
    var lastFileName;
    for (var i = 0; i < firstStackLines.length; ++i) {
        var result = parseLineInfo(firstStackLines[i]);
        if (result) {
            firstFileName = result.fileName;
            firstIndex = result.line;
            break;
        }
    }
    for (var i = 0; i < lastStackLines.length; ++i) {
        var result = parseLineInfo(lastStackLines[i]);
        if (result) {
            lastFileName = result.fileName;
            lastIndex = result.line;
            break;
        }
    }
    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||
        firstFileName !== lastFileName || firstIndex >= lastIndex) {
        return;
    }

    shouldIgnore = function(line) {
        if (bluebirdFramePattern.test(line)) return true;
        var info = parseLineInfo(line);
        if (info) {
            if (info.fileName === firstFileName &&
                (firstIndex <= info.line && info.line <= lastIndex)) {
                return true;
            }
        }
        return false;
    };
}

function CapturedTrace(parent) {
    this._parent = parent;
    this._promisesCreated = 0;
    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
    captureStackTrace(this, CapturedTrace);
    if (length > 32) this.uncycle();
}
util.inherits(CapturedTrace, Error);
Context.CapturedTrace = CapturedTrace;

CapturedTrace.prototype.uncycle = function() {
    var length = this._length;
    if (length < 2) return;
    var nodes = [];
    var stackToIndex = {};

    for (var i = 0, node = this; node !== undefined; ++i) {
        nodes.push(node);
        node = node._parent;
    }
    length = this._length = i;
    for (var i = length - 1; i >= 0; --i) {
        var stack = nodes[i].stack;
        if (stackToIndex[stack] === undefined) {
            stackToIndex[stack] = i;
        }
    }
    for (var i = 0; i < length; ++i) {
        var currentStack = nodes[i].stack;
        var index = stackToIndex[currentStack];
        if (index !== undefined && index !== i) {
            if (index > 0) {
                nodes[index - 1]._parent = undefined;
                nodes[index - 1]._length = 1;
            }
            nodes[i]._parent = undefined;
            nodes[i]._length = 1;
            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;

            if (index < length - 1) {
                cycleEdgeNode._parent = nodes[index + 1];
                cycleEdgeNode._parent.uncycle();
                cycleEdgeNode._length =
                    cycleEdgeNode._parent._length + 1;
            } else {
                cycleEdgeNode._parent = undefined;
                cycleEdgeNode._length = 1;
            }
            var currentChildLength = cycleEdgeNode._length + 1;
            for (var j = i - 2; j >= 0; --j) {
                nodes[j]._length = currentChildLength;
                currentChildLength++;
            }
            return;
        }
    }
};

CapturedTrace.prototype.attachExtraTrace = function(error) {
    if (error.__stackCleaned__) return;
    this.uncycle();
    var parsed = parseStackAndMessage(error);
    var message = parsed.message;
    var stacks = [parsed.stack];

    var trace = this;
    while (trace !== undefined) {
        stacks.push(cleanStack(trace.stack.split("\n")));
        trace = trace._parent;
    }
    removeCommonRoots(stacks);
    removeDuplicateOrEmptyJumps(stacks);
    util.notEnumerableProp(error, "stack", reconstructStack(message, stacks));
    util.notEnumerableProp(error, "__stackCleaned__", true);
};

var captureStackTrace = (function stackDetection() {
    var v8stackFramePattern = /^\s*at\s*/;
    var v8stackFormatter = function(stack, error) {
        if (typeof stack === "string") return stack;

        if (error.name !== undefined &&
            error.message !== undefined) {
            return error.toString();
        }
        return formatNonError(error);
    };

    if (typeof Error.stackTraceLimit === "number" &&
        typeof Error.captureStackTrace === "function") {
        Error.stackTraceLimit += 6;
        stackFramePattern = v8stackFramePattern;
        formatStack = v8stackFormatter;
        var captureStackTrace = Error.captureStackTrace;

        shouldIgnore = function(line) {
            return bluebirdFramePattern.test(line);
        };
        return function(receiver, ignoreUntil) {
            Error.stackTraceLimit += 6;
            captureStackTrace(receiver, ignoreUntil);
            Error.stackTraceLimit -= 6;
        };
    }
    var err = new Error();

    if (typeof err.stack === "string" &&
        err.stack.split("\n")[0].indexOf("stackDetection@") >= 0) {
        stackFramePattern = /@/;
        formatStack = v8stackFormatter;
        indentStackFrames = true;
        return function captureStackTrace(o) {
            o.stack = new Error().stack;
        };
    }

    var hasStackAfterThrow;
    try { throw new Error(); }
    catch(e) {
        hasStackAfterThrow = ("stack" in e);
    }
    if (!("stack" in err) && hasStackAfterThrow &&
        typeof Error.stackTraceLimit === "number") {
        stackFramePattern = v8stackFramePattern;
        formatStack = v8stackFormatter;
        return function captureStackTrace(o) {
            Error.stackTraceLimit += 6;
            try { throw new Error(); }
            catch(e) { o.stack = e.stack; }
            Error.stackTraceLimit -= 6;
        };
    }

    formatStack = function(stack, error) {
        if (typeof stack === "string") return stack;

        if ((typeof error === "object" ||
            typeof error === "function") &&
            error.name !== undefined &&
            error.message !== undefined) {
            return error.toString();
        }
        return formatNonError(error);
    };

    return null;

})([]);

if (typeof console !== "undefined" && typeof console.warn !== "undefined") {
    printWarning = function (message) {
        console.warn(message);
    };
    if (util.isNode && process.stderr.isTTY) {
        printWarning = function(message, isSoft) {
            var color = isSoft ? "\u001b[33m" : "\u001b[31m";
            console.warn(color + message + "\u001b[0m\n");
        };
    } else if (!util.isNode && typeof (new Error().stack) === "string") {
        printWarning = function(message, isSoft) {
            console.warn("%c" + message,
                        isSoft ? "color: darkorange" : "color: red");
        };
    }
}

var config = {
    warnings: warnings,
    longStackTraces: false,
    cancellation: false,
    monitoring: false
};

if (longStackTraces) Promise.longStackTraces();

return {
    longStackTraces: function() {
        return config.longStackTraces;
    },
    warnings: function() {
        return config.warnings;
    },
    cancellation: function() {
        return config.cancellation;
    },
    monitoring: function() {
        return config.monitoring;
    },
    propagateFromFunction: function() {
        return propagateFromFunction;
    },
    boundValueFunction: function() {
        return boundValueFunction;
    },
    checkForgottenReturns: checkForgottenReturns,
    setBounds: setBounds,
    warn: warn,
    deprecated: deprecated,
    CapturedTrace: CapturedTrace,
    fireDomEvent: fireDomEvent,
    fireGlobalEvent: fireGlobalEvent
};
};

},{"./errors":12,"./es5":13,"./util":36}],10:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
function returner() {
    return this.value;
}
function thrower() {
    throw this.reason;
}

Promise.prototype["return"] =
Promise.prototype.thenReturn = function (value) {
    if (value instanceof Promise) value.suppressUnhandledRejections();
    return this._then(
        returner, undefined, undefined, {value: value}, undefined);
};

Promise.prototype["throw"] =
Promise.prototype.thenThrow = function (reason) {
    return this._then(
        thrower, undefined, undefined, {reason: reason}, undefined);
};

Promise.prototype.catchThrow = function (reason) {
    if (arguments.length <= 1) {
        return this._then(
            undefined, thrower, undefined, {reason: reason}, undefined);
    } else {
        var _reason = arguments[1];
        var handler = function() {throw _reason;};
        return this.caught(reason, handler);
    }
};

Promise.prototype.catchReturn = function (value) {
    if (arguments.length <= 1) {
        if (value instanceof Promise) value.suppressUnhandledRejections();
        return this._then(
            undefined, returner, undefined, {value: value}, undefined);
    } else {
        var _value = arguments[1];
        if (_value instanceof Promise) _value.suppressUnhandledRejections();
        var handler = function() {return _value;};
        return this.caught(value, handler);
    }
};
};

},{}],11:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var PromiseReduce = Promise.reduce;
var PromiseAll = Promise.all;

function promiseAllThis() {
    return PromiseAll(this);
}

function PromiseMapSeries(promises, fn) {
    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
}

Promise.prototype.each = function (fn) {
    return PromiseReduce(this, fn, INTERNAL, 0)
              ._then(promiseAllThis, undefined, undefined, this, undefined);
};

Promise.prototype.mapSeries = function (fn) {
    return PromiseReduce(this, fn, INTERNAL, INTERNAL);
};

Promise.each = function (promises, fn) {
    return PromiseReduce(promises, fn, INTERNAL, 0)
              ._then(promiseAllThis, undefined, undefined, promises, undefined);
};

Promise.mapSeries = PromiseMapSeries;
};


},{}],12:[function(_dereq_,module,exports){
"use strict";
var es5 = _dereq_("./es5");
var Objectfreeze = es5.freeze;
var util = _dereq_("./util");
var inherits = util.inherits;
var notEnumerableProp = util.notEnumerableProp;

function subError(nameProperty, defaultMessage) {
    function SubError(message) {
        if (!(this instanceof SubError)) return new SubError(message);
        notEnumerableProp(this, "message",
            typeof message === "string" ? message : defaultMessage);
        notEnumerableProp(this, "name", nameProperty);
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        } else {
            Error.call(this);
        }
    }
    inherits(SubError, Error);
    return SubError;
}

var _TypeError, _RangeError;
var Warning = subError("Warning", "warning");
var CancellationError = subError("CancellationError", "cancellation error");
var TimeoutError = subError("TimeoutError", "timeout error");
var AggregateError = subError("AggregateError", "aggregate error");
try {
    _TypeError = TypeError;
    _RangeError = RangeError;
} catch(e) {
    _TypeError = subError("TypeError", "type error");
    _RangeError = subError("RangeError", "range error");
}

var methods = ("join pop push shift unshift slice filter forEach some " +
    "every map indexOf lastIndexOf reduce reduceRight sort reverse").split(" ");

for (var i = 0; i < methods.length; ++i) {
    if (typeof Array.prototype[methods[i]] === "function") {
        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
    }
}

es5.defineProperty(AggregateError.prototype, "length", {
    value: 0,
    configurable: false,
    writable: true,
    enumerable: true
});
AggregateError.prototype["isOperational"] = true;
var level = 0;
AggregateError.prototype.toString = function() {
    var indent = Array(level * 4 + 1).join(" ");
    var ret = "\n" + indent + "AggregateError of:" + "\n";
    level++;
    indent = Array(level * 4 + 1).join(" ");
    for (var i = 0; i < this.length; ++i) {
        var str = this[i] === this ? "[Circular AggregateError]" : this[i] + "";
        var lines = str.split("\n");
        for (var j = 0; j < lines.length; ++j) {
            lines[j] = indent + lines[j];
        }
        str = lines.join("\n");
        ret += str + "\n";
    }
    level--;
    return ret;
};

function OperationalError(message) {
    if (!(this instanceof OperationalError))
        return new OperationalError(message);
    notEnumerableProp(this, "name", "OperationalError");
    notEnumerableProp(this, "message", message);
    this.cause = message;
    this["isOperational"] = true;

    if (message instanceof Error) {
        notEnumerableProp(this, "message", message.message);
        notEnumerableProp(this, "stack", message.stack);
    } else if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
    }

}
inherits(OperationalError, Error);

var errorTypes = Error["__BluebirdErrorTypes__"];
if (!errorTypes) {
    errorTypes = Objectfreeze({
        CancellationError: CancellationError,
        TimeoutError: TimeoutError,
        OperationalError: OperationalError,
        RejectionError: OperationalError,
        AggregateError: AggregateError
    });
    es5.defineProperty(Error, "__BluebirdErrorTypes__", {
        value: errorTypes,
        writable: false,
        enumerable: false,
        configurable: false
    });
}

module.exports = {
    Error: Error,
    TypeError: _TypeError,
    RangeError: _RangeError,
    CancellationError: errorTypes.CancellationError,
    OperationalError: errorTypes.OperationalError,
    TimeoutError: errorTypes.TimeoutError,
    AggregateError: errorTypes.AggregateError,
    Warning: Warning
};

},{"./es5":13,"./util":36}],13:[function(_dereq_,module,exports){
var isES5 = (function(){
    "use strict";
    return this === undefined;
})();

if (isES5) {
    module.exports = {
        freeze: Object.freeze,
        defineProperty: Object.defineProperty,
        getDescriptor: Object.getOwnPropertyDescriptor,
        keys: Object.keys,
        names: Object.getOwnPropertyNames,
        getPrototypeOf: Object.getPrototypeOf,
        isArray: Array.isArray,
        isES5: isES5,
        propertyIsWritable: function(obj, prop) {
            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
            return !!(!descriptor || descriptor.writable || descriptor.set);
        }
    };
} else {
    var has = {}.hasOwnProperty;
    var str = {}.toString;
    var proto = {}.constructor.prototype;

    var ObjectKeys = function (o) {
        var ret = [];
        for (var key in o) {
            if (has.call(o, key)) {
                ret.push(key);
            }
        }
        return ret;
    };

    var ObjectGetDescriptor = function(o, key) {
        return {value: o[key]};
    };

    var ObjectDefineProperty = function (o, key, desc) {
        o[key] = desc.value;
        return o;
    };

    var ObjectFreeze = function (obj) {
        return obj;
    };

    var ObjectGetPrototypeOf = function (obj) {
        try {
            return Object(obj).constructor.prototype;
        }
        catch (e) {
            return proto;
        }
    };

    var ArrayIsArray = function (obj) {
        try {
            return str.call(obj) === "[object Array]";
        }
        catch(e) {
            return false;
        }
    };

    module.exports = {
        isArray: ArrayIsArray,
        keys: ObjectKeys,
        names: ObjectKeys,
        defineProperty: ObjectDefineProperty,
        getDescriptor: ObjectGetDescriptor,
        freeze: ObjectFreeze,
        getPrototypeOf: ObjectGetPrototypeOf,
        isES5: isES5,
        propertyIsWritable: function() {
            return true;
        }
    };
}

},{}],14:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var PromiseMap = Promise.map;

Promise.prototype.filter = function (fn, options) {
    return PromiseMap(this, fn, options, INTERNAL);
};

Promise.filter = function (promises, fn, options) {
    return PromiseMap(promises, fn, options, INTERNAL);
};
};

},{}],15:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {
var util = _dereq_("./util");
var CancellationError = Promise.CancellationError;
var errorObj = util.errorObj;
var catchFilter = _dereq_("./catch_filter")(NEXT_FILTER);

function PassThroughHandlerContext(promise, type, handler) {
    this.promise = promise;
    this.type = type;
    this.handler = handler;
    this.called = false;
    this.cancelPromise = null;
}

PassThroughHandlerContext.prototype.isFinallyHandler = function() {
    return this.type === 0;
};

function FinallyHandlerCancelReaction(finallyHandler) {
    this.finallyHandler = finallyHandler;
}

FinallyHandlerCancelReaction.prototype._resultCancelled = function() {
    checkCancel(this.finallyHandler);
};

function checkCancel(ctx, reason) {
    if (ctx.cancelPromise != null) {
        if (arguments.length > 1) {
            ctx.cancelPromise._reject(reason);
        } else {
            ctx.cancelPromise._cancel();
        }
        ctx.cancelPromise = null;
        return true;
    }
    return false;
}

function succeed() {
    return finallyHandler.call(this, this.promise._target()._settledValue());
}
function fail(reason) {
    if (checkCancel(this, reason)) return;
    errorObj.e = reason;
    return errorObj;
}
function finallyHandler(reasonOrValue) {
    var promise = this.promise;
    var handler = this.handler;

    if (!this.called) {
        this.called = true;
        var ret = this.isFinallyHandler()
            ? handler.call(promise._boundValue())
            : handler.call(promise._boundValue(), reasonOrValue);
        if (ret === NEXT_FILTER) {
            return ret;
        } else if (ret !== undefined) {
            promise._setReturnedNonUndefined();
            var maybePromise = tryConvertToPromise(ret, promise);
            if (maybePromise instanceof Promise) {
                if (this.cancelPromise != null) {
                    if (maybePromise._isCancelled()) {
                        var reason =
                            new CancellationError("late cancellation observer");
                        promise._attachExtraTrace(reason);
                        errorObj.e = reason;
                        return errorObj;
                    } else if (maybePromise.isPending()) {
                        maybePromise._attachCancellationCallback(
                            new FinallyHandlerCancelReaction(this));
                    }
                }
                return maybePromise._then(
                    succeed, fail, undefined, this, undefined);
            }
        }
    }

    if (promise.isRejected()) {
        checkCancel(this);
        errorObj.e = reasonOrValue;
        return errorObj;
    } else {
        checkCancel(this);
        return reasonOrValue;
    }
}

Promise.prototype._passThrough = function(handler, type, success, fail) {
    if (typeof handler !== "function") return this.then();
    return this._then(success,
                      fail,
                      undefined,
                      new PassThroughHandlerContext(this, type, handler),
                      undefined);
};

Promise.prototype.lastly =
Promise.prototype["finally"] = function (handler) {
    return this._passThrough(handler,
                             0,
                             finallyHandler,
                             finallyHandler);
};


Promise.prototype.tap = function (handler) {
    return this._passThrough(handler, 1, finallyHandler);
};

Promise.prototype.tapCatch = function (handlerOrPredicate) {
    var len = arguments.length;
    if(len === 1) {
        return this._passThrough(handlerOrPredicate,
                                 1,
                                 undefined,
                                 finallyHandler);
    } else {
         var catchInstances = new Array(len - 1),
            j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (util.isObject(item)) {
                catchInstances[j++] = item;
            } else {
                return Promise.reject(new TypeError(
                    "tapCatch statement predicate: "
                    + "expecting an object but got " + util.classString(item)
                ));
            }
        }
        catchInstances.length = j;
        var handler = arguments[i];
        return this._passThrough(catchFilter(catchInstances, handler, this),
                                 1,
                                 undefined,
                                 finallyHandler);
    }

};

return PassThroughHandlerContext;
};

},{"./catch_filter":7,"./util":36}],16:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise,
                          apiRejection,
                          INTERNAL,
                          tryConvertToPromise,
                          Proxyable,
                          debug) {
var errors = _dereq_("./errors");
var TypeError = errors.TypeError;
var util = _dereq_("./util");
var errorObj = util.errorObj;
var tryCatch = util.tryCatch;
var yieldHandlers = [];

function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
    for (var i = 0; i < yieldHandlers.length; ++i) {
        traceParent._pushContext();
        var result = tryCatch(yieldHandlers[i])(value);
        traceParent._popContext();
        if (result === errorObj) {
            traceParent._pushContext();
            var ret = Promise.reject(errorObj.e);
            traceParent._popContext();
            return ret;
        }
        var maybePromise = tryConvertToPromise(result, traceParent);
        if (maybePromise instanceof Promise) return maybePromise;
    }
    return null;
}

function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
    if (debug.cancellation()) {
        var internal = new Promise(INTERNAL);
        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
        this._promise = internal.lastly(function() {
            return _finallyPromise;
        });
        internal._captureStackTrace();
        internal._setOnCancel(this);
    } else {
        var promise = this._promise = new Promise(INTERNAL);
        promise._captureStackTrace();
    }
    this._stack = stack;
    this._generatorFunction = generatorFunction;
    this._receiver = receiver;
    this._generator = undefined;
    this._yieldHandlers = typeof yieldHandler === "function"
        ? [yieldHandler].concat(yieldHandlers)
        : yieldHandlers;
    this._yieldedPromise = null;
    this._cancellationPhase = false;
}
util.inherits(PromiseSpawn, Proxyable);

PromiseSpawn.prototype._isResolved = function() {
    return this._promise === null;
};

PromiseSpawn.prototype._cleanup = function() {
    this._promise = this._generator = null;
    if (debug.cancellation() && this._finallyPromise !== null) {
        this._finallyPromise._fulfill();
        this._finallyPromise = null;
    }
};

PromiseSpawn.prototype._promiseCancelled = function() {
    if (this._isResolved()) return;
    var implementsReturn = typeof this._generator["return"] !== "undefined";

    var result;
    if (!implementsReturn) {
        var reason = new Promise.CancellationError(
            "generator .return() sentinel");
        Promise.coroutine.returnSentinel = reason;
        this._promise._attachExtraTrace(reason);
        this._promise._pushContext();
        result = tryCatch(this._generator["throw"]).call(this._generator,
                                                         reason);
        this._promise._popContext();
    } else {
        this._promise._pushContext();
        result = tryCatch(this._generator["return"]).call(this._generator,
                                                          undefined);
        this._promise._popContext();
    }
    this._cancellationPhase = true;
    this._yieldedPromise = null;
    this._continue(result);
};

PromiseSpawn.prototype._promiseFulfilled = function(value) {
    this._yieldedPromise = null;
    this._promise._pushContext();
    var result = tryCatch(this._generator.next).call(this._generator, value);
    this._promise._popContext();
    this._continue(result);
};

PromiseSpawn.prototype._promiseRejected = function(reason) {
    this._yieldedPromise = null;
    this._promise._attachExtraTrace(reason);
    this._promise._pushContext();
    var result = tryCatch(this._generator["throw"])
        .call(this._generator, reason);
    this._promise._popContext();
    this._continue(result);
};

PromiseSpawn.prototype._resultCancelled = function() {
    if (this._yieldedPromise instanceof Promise) {
        var promise = this._yieldedPromise;
        this._yieldedPromise = null;
        promise.cancel();
    }
};

PromiseSpawn.prototype.promise = function () {
    return this._promise;
};

PromiseSpawn.prototype._run = function () {
    this._generator = this._generatorFunction.call(this._receiver);
    this._receiver =
        this._generatorFunction = undefined;
    this._promiseFulfilled(undefined);
};

PromiseSpawn.prototype._continue = function (result) {
    var promise = this._promise;
    if (result === errorObj) {
        this._cleanup();
        if (this._cancellationPhase) {
            return promise.cancel();
        } else {
            return promise._rejectCallback(result.e, false);
        }
    }

    var value = result.value;
    if (result.done === true) {
        this._cleanup();
        if (this._cancellationPhase) {
            return promise.cancel();
        } else {
            return promise._resolveCallback(value);
        }
    } else {
        var maybePromise = tryConvertToPromise(value, this._promise);
        if (!(maybePromise instanceof Promise)) {
            maybePromise =
                promiseFromYieldHandler(maybePromise,
                                        this._yieldHandlers,
                                        this._promise);
            if (maybePromise === null) {
                this._promiseRejected(
                    new TypeError(
                        "A value %s was yielded that could not be treated as a promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a\u000a".replace("%s", String(value)) +
                        "From coroutine:\u000a" +
                        this._stack.split("\n").slice(1, -7).join("\n")
                    )
                );
                return;
            }
        }
        maybePromise = maybePromise._target();
        var bitField = maybePromise._bitField;
        ;
        if (((bitField & 50397184) === 0)) {
            this._yieldedPromise = maybePromise;
            maybePromise._proxy(this, null);
        } else if (((bitField & 33554432) !== 0)) {
            Promise._async.invoke(
                this._promiseFulfilled, this, maybePromise._value()
            );
        } else if (((bitField & 16777216) !== 0)) {
            Promise._async.invoke(
                this._promiseRejected, this, maybePromise._reason()
            );
        } else {
            this._promiseCancelled();
        }
    }
};

Promise.coroutine = function (generatorFunction, options) {
    if (typeof generatorFunction !== "function") {
        throw new TypeError("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    var yieldHandler = Object(options).yieldHandler;
    var PromiseSpawn$ = PromiseSpawn;
    var stack = new Error().stack;
    return function () {
        var generator = generatorFunction.apply(this, arguments);
        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,
                                      stack);
        var ret = spawn.promise();
        spawn._generator = generator;
        spawn._promiseFulfilled(undefined);
        return ret;
    };
};

Promise.coroutine.addYieldHandler = function(fn) {
    if (typeof fn !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(fn));
    }
    yieldHandlers.push(fn);
};

Promise.spawn = function (generatorFunction) {
    debug.deprecated("Promise.spawn()", "Promise.coroutine()");
    if (typeof generatorFunction !== "function") {
        return apiRejection("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    var spawn = new PromiseSpawn(generatorFunction, this);
    var ret = spawn.promise();
    spawn._run(Promise.spawn);
    return ret;
};
};

},{"./errors":12,"./util":36}],17:[function(_dereq_,module,exports){
"use strict";
module.exports =
function(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,
         getDomain) {
var util = _dereq_("./util");
var canEvaluate = util.canEvaluate;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;
var reject;

if (!true) {
if (canEvaluate) {
    var thenCallback = function(i) {
        return new Function("value", "holder", "                             \n\
            'use strict';                                                    \n\
            holder.pIndex = value;                                           \n\
            holder.checkFulfillment(this);                                   \n\
            ".replace(/Index/g, i));
    };

    var promiseSetter = function(i) {
        return new Function("promise", "holder", "                           \n\
            'use strict';                                                    \n\
            holder.pIndex = promise;                                         \n\
            ".replace(/Index/g, i));
    };

    var generateHolderClass = function(total) {
        var props = new Array(total);
        for (var i = 0; i < props.length; ++i) {
            props[i] = "this.p" + (i+1);
        }
        var assignment = props.join(" = ") + " = null;";
        var cancellationCode= "var promise;\n" + props.map(function(prop) {
            return "                                                         \n\
                promise = " + prop + ";                                      \n\
                if (promise instanceof Promise) {                            \n\
                    promise.cancel();                                        \n\
                }                                                            \n\
            ";
        }).join("\n");
        var passedArguments = props.join(", ");
        var name = "Holder$" + total;


        var code = "return function(tryCatch, errorObj, Promise, async) {    \n\
            'use strict';                                                    \n\
            function [TheName](fn) {                                         \n\
                [TheProperties]                                              \n\
                this.fn = fn;                                                \n\
                this.asyncNeeded = true;                                     \n\
                this.now = 0;                                                \n\
            }                                                                \n\
                                                                             \n\
            [TheName].prototype._callFunction = function(promise) {          \n\
                promise._pushContext();                                      \n\
                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n\
                promise._popContext();                                       \n\
                if (ret === errorObj) {                                      \n\
                    promise._rejectCallback(ret.e, false);                   \n\
                } else {                                                     \n\
                    promise._resolveCallback(ret);                           \n\
                }                                                            \n\
            };                                                               \n\
                                                                             \n\
            [TheName].prototype.checkFulfillment = function(promise) {       \n\
                var now = ++this.now;                                        \n\
                if (now === [TheTotal]) {                                    \n\
                    if (this.asyncNeeded) {                                  \n\
                        async.invoke(this._callFunction, this, promise);     \n\
                    } else {                                                 \n\
                        this._callFunction(promise);                         \n\
                    }                                                        \n\
                                                                             \n\
                }                                                            \n\
            };                                                               \n\
                                                                             \n\
            [TheName].prototype._resultCancelled = function() {              \n\
                [CancellationCode]                                           \n\
            };                                                               \n\
                                                                             \n\
            return [TheName];                                                \n\
        }(tryCatch, errorObj, Promise, async);                               \n\
        ";

        code = code.replace(/\[TheName\]/g, name)
            .replace(/\[TheTotal\]/g, total)
            .replace(/\[ThePassedArguments\]/g, passedArguments)
            .replace(/\[TheProperties\]/g, assignment)
            .replace(/\[CancellationCode\]/g, cancellationCode);

        return new Function("tryCatch", "errorObj", "Promise", "async", code)
                           (tryCatch, errorObj, Promise, async);
    };

    var holderClasses = [];
    var thenCallbacks = [];
    var promiseSetters = [];

    for (var i = 0; i < 8; ++i) {
        holderClasses.push(generateHolderClass(i + 1));
        thenCallbacks.push(thenCallback(i + 1));
        promiseSetters.push(promiseSetter(i + 1));
    }

    reject = function (reason) {
        this._reject(reason);
    };
}}

Promise.join = function () {
    var last = arguments.length - 1;
    var fn;
    if (last > 0 && typeof arguments[last] === "function") {
        fn = arguments[last];
        if (!true) {
            if (last <= 8 && canEvaluate) {
                var ret = new Promise(INTERNAL);
                ret._captureStackTrace();
                var HolderClass = holderClasses[last - 1];
                var holder = new HolderClass(fn);
                var callbacks = thenCallbacks;

                for (var i = 0; i < last; ++i) {
                    var maybePromise = tryConvertToPromise(arguments[i], ret);
                    if (maybePromise instanceof Promise) {
                        maybePromise = maybePromise._target();
                        var bitField = maybePromise._bitField;
                        ;
                        if (((bitField & 50397184) === 0)) {
                            maybePromise._then(callbacks[i], reject,
                                               undefined, ret, holder);
                            promiseSetters[i](maybePromise, holder);
                            holder.asyncNeeded = false;
                        } else if (((bitField & 33554432) !== 0)) {
                            callbacks[i].call(ret,
                                              maybePromise._value(), holder);
                        } else if (((bitField & 16777216) !== 0)) {
                            ret._reject(maybePromise._reason());
                        } else {
                            ret._cancel();
                        }
                    } else {
                        callbacks[i].call(ret, maybePromise, holder);
                    }
                }

                if (!ret._isFateSealed()) {
                    if (holder.asyncNeeded) {
                        var domain = getDomain();
                        if (domain !== null) {
                            holder.fn = util.domainBind(domain, holder.fn);
                        }
                    }
                    ret._setAsyncGuaranteed();
                    ret._setOnCancel(holder);
                }
                return ret;
            }
        }
    }
    var args = [].slice.call(arguments);;
    if (fn) args.pop();
    var ret = new PromiseArray(args).promise();
    return fn !== undefined ? ret.spread(fn) : ret;
};

};

},{"./util":36}],18:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise,
                          PromiseArray,
                          apiRejection,
                          tryConvertToPromise,
                          INTERNAL,
                          debug) {
var getDomain = Promise._getDomain;
var util = _dereq_("./util");
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;
var async = Promise._async;

function MappingPromiseArray(promises, fn, limit, _filter) {
    this.constructor$(promises);
    this._promise._captureStackTrace();
    var domain = getDomain();
    this._callback = domain === null ? fn : util.domainBind(domain, fn);
    this._preservedValues = _filter === INTERNAL
        ? new Array(this.length())
        : null;
    this._limit = limit;
    this._inFlight = 0;
    this._queue = [];
    async.invoke(this._asyncInit, this, undefined);
}
util.inherits(MappingPromiseArray, PromiseArray);

MappingPromiseArray.prototype._asyncInit = function() {
    this._init$(undefined, -2);
};

MappingPromiseArray.prototype._init = function () {};

MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
    var values = this._values;
    var length = this.length();
    var preservedValues = this._preservedValues;
    var limit = this._limit;

    if (index < 0) {
        index = (index * -1) - 1;
        values[index] = value;
        if (limit >= 1) {
            this._inFlight--;
            this._drainQueue();
            if (this._isResolved()) return true;
        }
    } else {
        if (limit >= 1 && this._inFlight >= limit) {
            values[index] = value;
            this._queue.push(index);
            return false;
        }
        if (preservedValues !== null) preservedValues[index] = value;

        var promise = this._promise;
        var callback = this._callback;
        var receiver = promise._boundValue();
        promise._pushContext();
        var ret = tryCatch(callback).call(receiver, value, index, length);
        var promiseCreated = promise._popContext();
        debug.checkForgottenReturns(
            ret,
            promiseCreated,
            preservedValues !== null ? "Promise.filter" : "Promise.map",
            promise
        );
        if (ret === errorObj) {
            this._reject(ret.e);
            return true;
        }

        var maybePromise = tryConvertToPromise(ret, this._promise);
        if (maybePromise instanceof Promise) {
            maybePromise = maybePromise._target();
            var bitField = maybePromise._bitField;
            ;
            if (((bitField & 50397184) === 0)) {
                if (limit >= 1) this._inFlight++;
                values[index] = maybePromise;
                maybePromise._proxy(this, (index + 1) * -1);
                return false;
            } else if (((bitField & 33554432) !== 0)) {
                ret = maybePromise._value();
            } else if (((bitField & 16777216) !== 0)) {
                this._reject(maybePromise._reason());
                return true;
            } else {
                this._cancel();
                return true;
            }
        }
        values[index] = ret;
    }
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= length) {
        if (preservedValues !== null) {
            this._filter(values, preservedValues);
        } else {
            this._resolve(values);
        }
        return true;
    }
    return false;
};

MappingPromiseArray.prototype._drainQueue = function () {
    var queue = this._queue;
    var limit = this._limit;
    var values = this._values;
    while (queue.length > 0 && this._inFlight < limit) {
        if (this._isResolved()) return;
        var index = queue.pop();
        this._promiseFulfilled(values[index], index);
    }
};

MappingPromiseArray.prototype._filter = function (booleans, values) {
    var len = values.length;
    var ret = new Array(len);
    var j = 0;
    for (var i = 0; i < len; ++i) {
        if (booleans[i]) ret[j++] = values[i];
    }
    ret.length = j;
    this._resolve(ret);
};

MappingPromiseArray.prototype.preservedValues = function () {
    return this._preservedValues;
};

function map(promises, fn, options, _filter) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }

    var limit = 0;
    if (options !== undefined) {
        if (typeof options === "object" && options !== null) {
            if (typeof options.concurrency !== "number") {
                return Promise.reject(
                    new TypeError("'concurrency' must be a number but it is " +
                                    util.classString(options.concurrency)));
            }
            limit = options.concurrency;
        } else {
            return Promise.reject(new TypeError(
                            "options argument must be an object but it is " +
                             util.classString(options)));
        }
    }
    limit = typeof limit === "number" &&
        isFinite(limit) && limit >= 1 ? limit : 0;
    return new MappingPromiseArray(promises, fn, limit, _filter).promise();
}

Promise.prototype.map = function (fn, options) {
    return map(this, fn, options, null);
};

Promise.map = function (promises, fn, options, _filter) {
    return map(promises, fn, options, _filter);
};


};

},{"./util":36}],19:[function(_dereq_,module,exports){
"use strict";
module.exports =
function(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
var util = _dereq_("./util");
var tryCatch = util.tryCatch;

Promise.method = function (fn) {
    if (typeof fn !== "function") {
        throw new Promise.TypeError("expecting a function but got " + util.classString(fn));
    }
    return function () {
        var ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._pushContext();
        var value = tryCatch(fn).apply(this, arguments);
        var promiseCreated = ret._popContext();
        debug.checkForgottenReturns(
            value, promiseCreated, "Promise.method", ret);
        ret._resolveFromSyncValue(value);
        return ret;
    };
};

Promise.attempt = Promise["try"] = function (fn) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._pushContext();
    var value;
    if (arguments.length > 1) {
        debug.deprecated("calling Promise.try with more than 1 argument");
        var arg = arguments[1];
        var ctx = arguments[2];
        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)
                                  : tryCatch(fn).call(ctx, arg);
    } else {
        value = tryCatch(fn)();
    }
    var promiseCreated = ret._popContext();
    debug.checkForgottenReturns(
        value, promiseCreated, "Promise.try", ret);
    ret._resolveFromSyncValue(value);
    return ret;
};

Promise.prototype._resolveFromSyncValue = function (value) {
    if (value === util.errorObj) {
        this._rejectCallback(value.e, false);
    } else {
        this._resolveCallback(value, true);
    }
};
};

},{"./util":36}],20:[function(_dereq_,module,exports){
"use strict";
var util = _dereq_("./util");
var maybeWrapAsError = util.maybeWrapAsError;
var errors = _dereq_("./errors");
var OperationalError = errors.OperationalError;
var es5 = _dereq_("./es5");

function isUntypedError(obj) {
    return obj instanceof Error &&
        es5.getPrototypeOf(obj) === Error.prototype;
}

var rErrorKey = /^(?:name|message|stack|cause)$/;
function wrapAsOperationalError(obj) {
    var ret;
    if (isUntypedError(obj)) {
        ret = new OperationalError(obj);
        ret.name = obj.name;
        ret.message = obj.message;
        ret.stack = obj.stack;
        var keys = es5.keys(obj);
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!rErrorKey.test(key)) {
                ret[key] = obj[key];
            }
        }
        return ret;
    }
    util.markAsOriginatingFromRejection(obj);
    return obj;
}

function nodebackForPromise(promise, multiArgs) {
    return function(err, value) {
        if (promise === null) return;
        if (err) {
            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        } else if (!multiArgs) {
            promise._fulfill(value);
        } else {
            var args = [].slice.call(arguments, 1);;
            promise._fulfill(args);
        }
        promise = null;
    };
}

module.exports = nodebackForPromise;

},{"./errors":12,"./es5":13,"./util":36}],21:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
var util = _dereq_("./util");
var async = Promise._async;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;

function spreadAdapter(val, nodeback) {
    var promise = this;
    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);
    var ret =
        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
}

function successAdapter(val, nodeback) {
    var promise = this;
    var receiver = promise._boundValue();
    var ret = val === undefined
        ? tryCatch(nodeback).call(receiver, null)
        : tryCatch(nodeback).call(receiver, null, val);
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
}
function errorAdapter(reason, nodeback) {
    var promise = this;
    if (!reason) {
        var newReason = new Error(reason + "");
        newReason.cause = reason;
        reason = newReason;
    }
    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
}

Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,
                                                                     options) {
    if (typeof nodeback == "function") {
        var adapter = successAdapter;
        if (options !== undefined && Object(options).spread) {
            adapter = spreadAdapter;
        }
        this._then(
            adapter,
            errorAdapter,
            undefined,
            this,
            nodeback
        );
    }
    return this;
};
};

},{"./util":36}],22:[function(_dereq_,module,exports){
"use strict";
module.exports = function() {
var makeSelfResolutionError = function () {
    return new TypeError("circular promise resolution chain\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
};
var reflectHandler = function() {
    return new Promise.PromiseInspection(this._target());
};
var apiRejection = function(msg) {
    return Promise.reject(new TypeError(msg));
};
function Proxyable() {}
var UNDEFINED_BINDING = {};
var util = _dereq_("./util");

var getDomain;
if (util.isNode) {
    getDomain = function() {
        var ret = process.domain;
        if (ret === undefined) ret = null;
        return ret;
    };
} else {
    getDomain = function() {
        return null;
    };
}
util.notEnumerableProp(Promise, "_getDomain", getDomain);

var es5 = _dereq_("./es5");
var Async = _dereq_("./async");
var async = new Async();
es5.defineProperty(Promise, "_async", {value: async});
var errors = _dereq_("./errors");
var TypeError = Promise.TypeError = errors.TypeError;
Promise.RangeError = errors.RangeError;
var CancellationError = Promise.CancellationError = errors.CancellationError;
Promise.TimeoutError = errors.TimeoutError;
Promise.OperationalError = errors.OperationalError;
Promise.RejectionError = errors.OperationalError;
Promise.AggregateError = errors.AggregateError;
var INTERNAL = function(){};
var APPLY = {};
var NEXT_FILTER = {};
var tryConvertToPromise = _dereq_("./thenables")(Promise, INTERNAL);
var PromiseArray =
    _dereq_("./promise_array")(Promise, INTERNAL,
                               tryConvertToPromise, apiRejection, Proxyable);
var Context = _dereq_("./context")(Promise);
 /*jshint unused:false*/
var createContext = Context.create;
var debug = _dereq_("./debuggability")(Promise, Context);
var CapturedTrace = debug.CapturedTrace;
var PassThroughHandlerContext =
    _dereq_("./finally")(Promise, tryConvertToPromise, NEXT_FILTER);
var catchFilter = _dereq_("./catch_filter")(NEXT_FILTER);
var nodebackForPromise = _dereq_("./nodeback");
var errorObj = util.errorObj;
var tryCatch = util.tryCatch;
function check(self, executor) {
    if (self == null || self.constructor !== Promise) {
        throw new TypeError("the promise constructor cannot be invoked directly\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    if (typeof executor !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(executor));
    }

}

function Promise(executor) {
    if (executor !== INTERNAL) {
        check(this, executor);
    }
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    this._resolveFromExecutor(executor);
    this._promiseCreated();
    this._fireEvent("promiseCreated", this);
}

Promise.prototype.toString = function () {
    return "[object Promise]";
};

Promise.prototype.caught = Promise.prototype["catch"] = function (fn) {
    var len = arguments.length;
    if (len > 1) {
        var catchInstances = new Array(len - 1),
            j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (util.isObject(item)) {
                catchInstances[j++] = item;
            } else {
                return apiRejection("Catch statement predicate: " +
                    "expecting an object but got " + util.classString(item));
            }
        }
        catchInstances.length = j;
        fn = arguments[i];
        return this.then(undefined, catchFilter(catchInstances, fn, this));
    }
    return this.then(undefined, fn);
};

Promise.prototype.reflect = function () {
    return this._then(reflectHandler,
        reflectHandler, undefined, this, undefined);
};

Promise.prototype.then = function (didFulfill, didReject) {
    if (debug.warnings() && arguments.length > 0 &&
        typeof didFulfill !== "function" &&
        typeof didReject !== "function") {
        var msg = ".then() only accepts functions but was passed: " +
                util.classString(didFulfill);
        if (arguments.length > 1) {
            msg += ", " + util.classString(didReject);
        }
        this._warn(msg);
    }
    return this._then(didFulfill, didReject, undefined, undefined, undefined);
};

Promise.prototype.done = function (didFulfill, didReject) {
    var promise =
        this._then(didFulfill, didReject, undefined, undefined, undefined);
    promise._setIsFinal();
};

Promise.prototype.spread = function (fn) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }
    return this.all()._then(fn, undefined, undefined, APPLY, undefined);
};

Promise.prototype.toJSON = function () {
    var ret = {
        isFulfilled: false,
        isRejected: false,
        fulfillmentValue: undefined,
        rejectionReason: undefined
    };
    if (this.isFulfilled()) {
        ret.fulfillmentValue = this.value();
        ret.isFulfilled = true;
    } else if (this.isRejected()) {
        ret.rejectionReason = this.reason();
        ret.isRejected = true;
    }
    return ret;
};

Promise.prototype.all = function () {
    if (arguments.length > 0) {
        this._warn(".all() was passed arguments but it does not take any");
    }
    return new PromiseArray(this).promise();
};

Promise.prototype.error = function (fn) {
    return this.caught(util.originatesFromRejection, fn);
};

Promise.getNewLibraryCopy = module.exports;

Promise.is = function (val) {
    return val instanceof Promise;
};

Promise.fromNode = Promise.fromCallback = function(fn) {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs
                                         : false;
    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
    if (result === errorObj) {
        ret._rejectCallback(result.e, true);
    }
    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();
    return ret;
};

Promise.all = function (promises) {
    return new PromiseArray(promises).promise();
};

Promise.cast = function (obj) {
    var ret = tryConvertToPromise(obj);
    if (!(ret instanceof Promise)) {
        ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._setFulfilled();
        ret._rejectionHandler0 = obj;
    }
    return ret;
};

Promise.resolve = Promise.fulfilled = Promise.cast;

Promise.reject = Promise.rejected = function (reason) {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._rejectCallback(reason, true);
    return ret;
};

Promise.setScheduler = function(fn) {
    if (typeof fn !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(fn));
    }
    return async.setScheduler(fn);
};

Promise.prototype._then = function (
    didFulfill,
    didReject,
    _,    receiver,
    internalData
) {
    var haveInternalData = internalData !== undefined;
    var promise = haveInternalData ? internalData : new Promise(INTERNAL);
    var target = this._target();
    var bitField = target._bitField;

    if (!haveInternalData) {
        promise._propagateFrom(this, 3);
        promise._captureStackTrace();
        if (receiver === undefined &&
            ((this._bitField & 2097152) !== 0)) {
            if (!((bitField & 50397184) === 0)) {
                receiver = this._boundValue();
            } else {
                receiver = target === this ? undefined : this._boundTo;
            }
        }
        this._fireEvent("promiseChained", this, promise);
    }

    var domain = getDomain();
    if (!((bitField & 50397184) === 0)) {
        var handler, value, settler = target._settlePromiseCtx;
        if (((bitField & 33554432) !== 0)) {
            value = target._rejectionHandler0;
            handler = didFulfill;
        } else if (((bitField & 16777216) !== 0)) {
            value = target._fulfillmentHandler0;
            handler = didReject;
            target._unsetRejectionIsUnhandled();
        } else {
            settler = target._settlePromiseLateCancellationObserver;
            value = new CancellationError("late cancellation observer");
            target._attachExtraTrace(value);
            handler = didReject;
        }

        async.invoke(settler, target, {
            handler: domain === null ? handler
                : (typeof handler === "function" &&
                    util.domainBind(domain, handler)),
            promise: promise,
            receiver: receiver,
            value: value
        });
    } else {
        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
    }

    return promise;
};

Promise.prototype._length = function () {
    return this._bitField & 65535;
};

Promise.prototype._isFateSealed = function () {
    return (this._bitField & 117506048) !== 0;
};

Promise.prototype._isFollowing = function () {
    return (this._bitField & 67108864) === 67108864;
};

Promise.prototype._setLength = function (len) {
    this._bitField = (this._bitField & -65536) |
        (len & 65535);
};

Promise.prototype._setFulfilled = function () {
    this._bitField = this._bitField | 33554432;
    this._fireEvent("promiseFulfilled", this);
};

Promise.prototype._setRejected = function () {
    this._bitField = this._bitField | 16777216;
    this._fireEvent("promiseRejected", this);
};

Promise.prototype._setFollowing = function () {
    this._bitField = this._bitField | 67108864;
    this._fireEvent("promiseResolved", this);
};

Promise.prototype._setIsFinal = function () {
    this._bitField = this._bitField | 4194304;
};

Promise.prototype._isFinal = function () {
    return (this._bitField & 4194304) > 0;
};

Promise.prototype._unsetCancelled = function() {
    this._bitField = this._bitField & (~65536);
};

Promise.prototype._setCancelled = function() {
    this._bitField = this._bitField | 65536;
    this._fireEvent("promiseCancelled", this);
};

Promise.prototype._setWillBeCancelled = function() {
    this._bitField = this._bitField | 8388608;
};

Promise.prototype._setAsyncGuaranteed = function() {
    if (async.hasCustomScheduler()) return;
    this._bitField = this._bitField | 134217728;
};

Promise.prototype._receiverAt = function (index) {
    var ret = index === 0 ? this._receiver0 : this[
            index * 4 - 4 + 3];
    if (ret === UNDEFINED_BINDING) {
        return undefined;
    } else if (ret === undefined && this._isBound()) {
        return this._boundValue();
    }
    return ret;
};

Promise.prototype._promiseAt = function (index) {
    return this[
            index * 4 - 4 + 2];
};

Promise.prototype._fulfillmentHandlerAt = function (index) {
    return this[
            index * 4 - 4 + 0];
};

Promise.prototype._rejectionHandlerAt = function (index) {
    return this[
            index * 4 - 4 + 1];
};

Promise.prototype._boundValue = function() {};

Promise.prototype._migrateCallback0 = function (follower) {
    var bitField = follower._bitField;
    var fulfill = follower._fulfillmentHandler0;
    var reject = follower._rejectionHandler0;
    var promise = follower._promise0;
    var receiver = follower._receiverAt(0);
    if (receiver === undefined) receiver = UNDEFINED_BINDING;
    this._addCallbacks(fulfill, reject, promise, receiver, null);
};

Promise.prototype._migrateCallbackAt = function (follower, index) {
    var fulfill = follower._fulfillmentHandlerAt(index);
    var reject = follower._rejectionHandlerAt(index);
    var promise = follower._promiseAt(index);
    var receiver = follower._receiverAt(index);
    if (receiver === undefined) receiver = UNDEFINED_BINDING;
    this._addCallbacks(fulfill, reject, promise, receiver, null);
};

Promise.prototype._addCallbacks = function (
    fulfill,
    reject,
    promise,
    receiver,
    domain
) {
    var index = this._length();

    if (index >= 65535 - 4) {
        index = 0;
        this._setLength(0);
    }

    if (index === 0) {
        this._promise0 = promise;
        this._receiver0 = receiver;
        if (typeof fulfill === "function") {
            this._fulfillmentHandler0 =
                domain === null ? fulfill : util.domainBind(domain, fulfill);
        }
        if (typeof reject === "function") {
            this._rejectionHandler0 =
                domain === null ? reject : util.domainBind(domain, reject);
        }
    } else {
        var base = index * 4 - 4;
        this[base + 2] = promise;
        this[base + 3] = receiver;
        if (typeof fulfill === "function") {
            this[base + 0] =
                domain === null ? fulfill : util.domainBind(domain, fulfill);
        }
        if (typeof reject === "function") {
            this[base + 1] =
                domain === null ? reject : util.domainBind(domain, reject);
        }
    }
    this._setLength(index + 1);
    return index;
};

Promise.prototype._proxy = function (proxyable, arg) {
    this._addCallbacks(undefined, undefined, arg, proxyable, null);
};

Promise.prototype._resolveCallback = function(value, shouldBind) {
    if (((this._bitField & 117506048) !== 0)) return;
    if (value === this)
        return this._rejectCallback(makeSelfResolutionError(), false);
    var maybePromise = tryConvertToPromise(value, this);
    if (!(maybePromise instanceof Promise)) return this._fulfill(value);

    if (shouldBind) this._propagateFrom(maybePromise, 2);

    var promise = maybePromise._target();

    if (promise === this) {
        this._reject(makeSelfResolutionError());
        return;
    }

    var bitField = promise._bitField;
    if (((bitField & 50397184) === 0)) {
        var len = this._length();
        if (len > 0) promise._migrateCallback0(this);
        for (var i = 1; i < len; ++i) {
            promise._migrateCallbackAt(this, i);
        }
        this._setFollowing();
        this._setLength(0);
        this._setFollowee(promise);
    } else if (((bitField & 33554432) !== 0)) {
        this._fulfill(promise._value());
    } else if (((bitField & 16777216) !== 0)) {
        this._reject(promise._reason());
    } else {
        var reason = new CancellationError("late cancellation observer");
        promise._attachExtraTrace(reason);
        this._reject(reason);
    }
};

Promise.prototype._rejectCallback =
function(reason, synchronous, ignoreNonErrorWarnings) {
    var trace = util.ensureErrorObject(reason);
    var hasStack = trace === reason;
    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
        var message = "a promise was rejected with a non-error: " +
            util.classString(reason);
        this._warn(message, true);
    }
    this._attachExtraTrace(trace, synchronous ? hasStack : false);
    this._reject(reason);
};

Promise.prototype._resolveFromExecutor = function (executor) {
    if (executor === INTERNAL) return;
    var promise = this;
    this._captureStackTrace();
    this._pushContext();
    var synchronous = true;
    var r = this._execute(executor, function(value) {
        promise._resolveCallback(value);
    }, function (reason) {
        promise._rejectCallback(reason, synchronous);
    });
    synchronous = false;
    this._popContext();

    if (r !== undefined) {
        promise._rejectCallback(r, true);
    }
};

Promise.prototype._settlePromiseFromHandler = function (
    handler, receiver, value, promise
) {
    var bitField = promise._bitField;
    if (((bitField & 65536) !== 0)) return;
    promise._pushContext();
    var x;
    if (receiver === APPLY) {
        if (!value || typeof value.length !== "number") {
            x = errorObj;
            x.e = new TypeError("cannot .spread() a non-array: " +
                                    util.classString(value));
        } else {
            x = tryCatch(handler).apply(this._boundValue(), value);
        }
    } else {
        x = tryCatch(handler).call(receiver, value);
    }
    var promiseCreated = promise._popContext();
    bitField = promise._bitField;
    if (((bitField & 65536) !== 0)) return;

    if (x === NEXT_FILTER) {
        promise._reject(value);
    } else if (x === errorObj) {
        promise._rejectCallback(x.e, false);
    } else {
        debug.checkForgottenReturns(x, promiseCreated, "",  promise, this);
        promise._resolveCallback(x);
    }
};

Promise.prototype._target = function() {
    var ret = this;
    while (ret._isFollowing()) ret = ret._followee();
    return ret;
};

Promise.prototype._followee = function() {
    return this._rejectionHandler0;
};

Promise.prototype._setFollowee = function(promise) {
    this._rejectionHandler0 = promise;
};

Promise.prototype._settlePromise = function(promise, handler, receiver, value) {
    var isPromise = promise instanceof Promise;
    var bitField = this._bitField;
    var asyncGuaranteed = ((bitField & 134217728) !== 0);
    if (((bitField & 65536) !== 0)) {
        if (isPromise) promise._invokeInternalOnCancel();

        if (receiver instanceof PassThroughHandlerContext &&
            receiver.isFinallyHandler()) {
            receiver.cancelPromise = promise;
            if (tryCatch(handler).call(receiver, value) === errorObj) {
                promise._reject(errorObj.e);
            }
        } else if (handler === reflectHandler) {
            promise._fulfill(reflectHandler.call(receiver));
        } else if (receiver instanceof Proxyable) {
            receiver._promiseCancelled(promise);
        } else if (isPromise || promise instanceof PromiseArray) {
            promise._cancel();
        } else {
            receiver.cancel();
        }
    } else if (typeof handler === "function") {
        if (!isPromise) {
            handler.call(receiver, value, promise);
        } else {
            if (asyncGuaranteed) promise._setAsyncGuaranteed();
            this._settlePromiseFromHandler(handler, receiver, value, promise);
        }
    } else if (receiver instanceof Proxyable) {
        if (!receiver._isResolved()) {
            if (((bitField & 33554432) !== 0)) {
                receiver._promiseFulfilled(value, promise);
            } else {
                receiver._promiseRejected(value, promise);
            }
        }
    } else if (isPromise) {
        if (asyncGuaranteed) promise._setAsyncGuaranteed();
        if (((bitField & 33554432) !== 0)) {
            promise._fulfill(value);
        } else {
            promise._reject(value);
        }
    }
};

Promise.prototype._settlePromiseLateCancellationObserver = function(ctx) {
    var handler = ctx.handler;
    var promise = ctx.promise;
    var receiver = ctx.receiver;
    var value = ctx.value;
    if (typeof handler === "function") {
        if (!(promise instanceof Promise)) {
            handler.call(receiver, value, promise);
        } else {
            this._settlePromiseFromHandler(handler, receiver, value, promise);
        }
    } else if (promise instanceof Promise) {
        promise._reject(value);
    }
};

Promise.prototype._settlePromiseCtx = function(ctx) {
    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
};

Promise.prototype._settlePromise0 = function(handler, value, bitField) {
    var promise = this._promise0;
    var receiver = this._receiverAt(0);
    this._promise0 = undefined;
    this._receiver0 = undefined;
    this._settlePromise(promise, handler, receiver, value);
};

Promise.prototype._clearCallbackDataAtIndex = function(index) {
    var base = index * 4 - 4;
    this[base + 2] =
    this[base + 3] =
    this[base + 0] =
    this[base + 1] = undefined;
};

Promise.prototype._fulfill = function (value) {
    var bitField = this._bitField;
    if (((bitField & 117506048) >>> 16)) return;
    if (value === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._reject(err);
    }
    this._setFulfilled();
    this._rejectionHandler0 = value;

    if ((bitField & 65535) > 0) {
        if (((bitField & 134217728) !== 0)) {
            this._settlePromises();
        } else {
            async.settlePromises(this);
        }
        this._dereferenceTrace();
    }
};

Promise.prototype._reject = function (reason) {
    var bitField = this._bitField;
    if (((bitField & 117506048) >>> 16)) return;
    this._setRejected();
    this._fulfillmentHandler0 = reason;

    if (this._isFinal()) {
        return async.fatalError(reason, util.isNode);
    }

    if ((bitField & 65535) > 0) {
        async.settlePromises(this);
    } else {
        this._ensurePossibleRejectionHandled();
    }
};

Promise.prototype._fulfillPromises = function (len, value) {
    for (var i = 1; i < len; i++) {
        var handler = this._fulfillmentHandlerAt(i);
        var promise = this._promiseAt(i);
        var receiver = this._receiverAt(i);
        this._clearCallbackDataAtIndex(i);
        this._settlePromise(promise, handler, receiver, value);
    }
};

Promise.prototype._rejectPromises = function (len, reason) {
    for (var i = 1; i < len; i++) {
        var handler = this._rejectionHandlerAt(i);
        var promise = this._promiseAt(i);
        var receiver = this._receiverAt(i);
        this._clearCallbackDataAtIndex(i);
        this._settlePromise(promise, handler, receiver, reason);
    }
};

Promise.prototype._settlePromises = function () {
    var bitField = this._bitField;
    var len = (bitField & 65535);

    if (len > 0) {
        if (((bitField & 16842752) !== 0)) {
            var reason = this._fulfillmentHandler0;
            this._settlePromise0(this._rejectionHandler0, reason, bitField);
            this._rejectPromises(len, reason);
        } else {
            var value = this._rejectionHandler0;
            this._settlePromise0(this._fulfillmentHandler0, value, bitField);
            this._fulfillPromises(len, value);
        }
        this._setLength(0);
    }
    this._clearCancellationData();
};

Promise.prototype._settledValue = function() {
    var bitField = this._bitField;
    if (((bitField & 33554432) !== 0)) {
        return this._rejectionHandler0;
    } else if (((bitField & 16777216) !== 0)) {
        return this._fulfillmentHandler0;
    }
};

function deferResolve(v) {this.promise._resolveCallback(v);}
function deferReject(v) {this.promise._rejectCallback(v, false);}

Promise.defer = Promise.pending = function() {
    debug.deprecated("Promise.defer", "new Promise");
    var promise = new Promise(INTERNAL);
    return {
        promise: promise,
        resolve: deferResolve,
        reject: deferReject
    };
};

util.notEnumerableProp(Promise,
                       "_makeSelfResolutionError",
                       makeSelfResolutionError);

_dereq_("./method")(Promise, INTERNAL, tryConvertToPromise, apiRejection,
    debug);
_dereq_("./bind")(Promise, INTERNAL, tryConvertToPromise, debug);
_dereq_("./cancel")(Promise, PromiseArray, apiRejection, debug);
_dereq_("./direct_resolve")(Promise);
_dereq_("./synchronous_inspection")(Promise);
_dereq_("./join")(
    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
Promise.Promise = Promise;
Promise.version = "3.5.4";
_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
_dereq_('./call_get.js')(Promise);
_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
_dereq_('./timers.js')(Promise, INTERNAL, debug);
_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
_dereq_('./nodeify.js')(Promise);
_dereq_('./promisify.js')(Promise, INTERNAL);
_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
_dereq_('./settle.js')(Promise, PromiseArray, debug);
_dereq_('./some.js')(Promise, PromiseArray, apiRejection);
_dereq_('./filter.js')(Promise, INTERNAL);
_dereq_('./each.js')(Promise, INTERNAL);
_dereq_('./any.js')(Promise);
                                                         
    util.toFastProperties(Promise);                                          
    util.toFastProperties(Promise.prototype);                                
    function fillTypes(value) {                                              
        var p = new Promise(INTERNAL);                                       
        p._fulfillmentHandler0 = value;                                      
        p._rejectionHandler0 = value;                                        
        p._promise0 = value;                                                 
        p._receiver0 = value;                                                
    }                                                                        
    // Complete slack tracking, opt out of field-type tracking and           
    // stabilize map                                                         
    fillTypes({a: 1});                                                       
    fillTypes({b: 2});                                                       
    fillTypes({c: 3});                                                       
    fillTypes(1);                                                            
    fillTypes(function(){});                                                 
    fillTypes(undefined);                                                    
    fillTypes(false);                                                        
    fillTypes(new Promise(INTERNAL));                                        
    debug.setBounds(Async.firstLineError, util.lastLineError);               
    return Promise;                                                          

};

},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36}],23:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL, tryConvertToPromise,
    apiRejection, Proxyable) {
var util = _dereq_("./util");
var isArray = util.isArray;

function toResolutionValue(val) {
    switch(val) {
    case -2: return [];
    case -3: return {};
    case -6: return new Map();
    }
}

function PromiseArray(values) {
    var promise = this._promise = new Promise(INTERNAL);
    if (values instanceof Promise) {
        promise._propagateFrom(values, 3);
    }
    promise._setOnCancel(this);
    this._values = values;
    this._length = 0;
    this._totalResolved = 0;
    this._init(undefined, -2);
}
util.inherits(PromiseArray, Proxyable);

PromiseArray.prototype.length = function () {
    return this._length;
};

PromiseArray.prototype.promise = function () {
    return this._promise;
};

PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
    var values = tryConvertToPromise(this._values, this._promise);
    if (values instanceof Promise) {
        values = values._target();
        var bitField = values._bitField;
        ;
        this._values = values;

        if (((bitField & 50397184) === 0)) {
            this._promise._setAsyncGuaranteed();
            return values._then(
                init,
                this._reject,
                undefined,
                this,
                resolveValueIfEmpty
           );
        } else if (((bitField & 33554432) !== 0)) {
            values = values._value();
        } else if (((bitField & 16777216) !== 0)) {
            return this._reject(values._reason());
        } else {
            return this._cancel();
        }
    }
    values = util.asArray(values);
    if (values === null) {
        var err = apiRejection(
            "expecting an array or an iterable object but got " + util.classString(values)).reason();
        this._promise._rejectCallback(err, false);
        return;
    }

    if (values.length === 0) {
        if (resolveValueIfEmpty === -5) {
            this._resolveEmptyArray();
        }
        else {
            this._resolve(toResolutionValue(resolveValueIfEmpty));
        }
        return;
    }
    this._iterate(values);
};

PromiseArray.prototype._iterate = function(values) {
    var len = this.getActualLength(values.length);
    this._length = len;
    this._values = this.shouldCopyValues() ? new Array(len) : this._values;
    var result = this._promise;
    var isResolved = false;
    var bitField = null;
    for (var i = 0; i < len; ++i) {
        var maybePromise = tryConvertToPromise(values[i], result);

        if (maybePromise instanceof Promise) {
            maybePromise = maybePromise._target();
            bitField = maybePromise._bitField;
        } else {
            bitField = null;
        }

        if (isResolved) {
            if (bitField !== null) {
                maybePromise.suppressUnhandledRejections();
            }
        } else if (bitField !== null) {
            if (((bitField & 50397184) === 0)) {
                maybePromise._proxy(this, i);
                this._values[i] = maybePromise;
            } else if (((bitField & 33554432) !== 0)) {
                isResolved = this._promiseFulfilled(maybePromise._value(), i);
            } else if (((bitField & 16777216) !== 0)) {
                isResolved = this._promiseRejected(maybePromise._reason(), i);
            } else {
                isResolved = this._promiseCancelled(i);
            }
        } else {
            isResolved = this._promiseFulfilled(maybePromise, i);
        }
    }
    if (!isResolved) result._setAsyncGuaranteed();
};

PromiseArray.prototype._isResolved = function () {
    return this._values === null;
};

PromiseArray.prototype._resolve = function (value) {
    this._values = null;
    this._promise._fulfill(value);
};

PromiseArray.prototype._cancel = function() {
    if (this._isResolved() || !this._promise._isCancellable()) return;
    this._values = null;
    this._promise._cancel();
};

PromiseArray.prototype._reject = function (reason) {
    this._values = null;
    this._promise._rejectCallback(reason, false);
};

PromiseArray.prototype._promiseFulfilled = function (value, index) {
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
        return true;
    }
    return false;
};

PromiseArray.prototype._promiseCancelled = function() {
    this._cancel();
    return true;
};

PromiseArray.prototype._promiseRejected = function (reason) {
    this._totalResolved++;
    this._reject(reason);
    return true;
};

PromiseArray.prototype._resultCancelled = function() {
    if (this._isResolved()) return;
    var values = this._values;
    this._cancel();
    if (values instanceof Promise) {
        values.cancel();
    } else {
        for (var i = 0; i < values.length; ++i) {
            if (values[i] instanceof Promise) {
                values[i].cancel();
            }
        }
    }
};

PromiseArray.prototype.shouldCopyValues = function () {
    return true;
};

PromiseArray.prototype.getActualLength = function (len) {
    return len;
};

return PromiseArray;
};

},{"./util":36}],24:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var THIS = {};
var util = _dereq_("./util");
var nodebackForPromise = _dereq_("./nodeback");
var withAppended = util.withAppended;
var maybeWrapAsError = util.maybeWrapAsError;
var canEvaluate = util.canEvaluate;
var TypeError = _dereq_("./errors").TypeError;
var defaultSuffix = "Async";
var defaultPromisified = {__isPromisified__: true};
var noCopyProps = [
    "arity",    "length",
    "name",
    "arguments",
    "caller",
    "callee",
    "prototype",
    "__isPromisified__"
];
var noCopyPropsPattern = new RegExp("^(?:" + noCopyProps.join("|") + ")$");

var defaultFilter = function(name) {
    return util.isIdentifier(name) &&
        name.charAt(0) !== "_" &&
        name !== "constructor";
};

function propsFilter(key) {
    return !noCopyPropsPattern.test(key);
}

function isPromisified(fn) {
    try {
        return fn.__isPromisified__ === true;
    }
    catch (e) {
        return false;
    }
}

function hasPromisified(obj, key, suffix) {
    var val = util.getDataPropertyOrDefault(obj, key + suffix,
                                            defaultPromisified);
    return val ? isPromisified(val) : false;
}
function checkValid(ret, suffix, suffixRegexp) {
    for (var i = 0; i < ret.length; i += 2) {
        var key = ret[i];
        if (suffixRegexp.test(key)) {
            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, "");
            for (var j = 0; j < ret.length; j += 2) {
                if (ret[j] === keyWithoutAsyncSuffix) {
                    throw new TypeError("Cannot promisify an API that has normal methods with '%s'-suffix\u000a\u000a    See http://goo.gl/MqrFmX\u000a"
                        .replace("%s", suffix));
                }
            }
        }
    }
}

function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
    var keys = util.inheritedDataKeys(obj);
    var ret = [];
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var value = obj[key];
        var passesDefaultFilter = filter === defaultFilter
            ? true : defaultFilter(key, value, obj);
        if (typeof value === "function" &&
            !isPromisified(value) &&
            !hasPromisified(obj, key, suffix) &&
            filter(key, value, obj, passesDefaultFilter)) {
            ret.push(key, value);
        }
    }
    checkValid(ret, suffix, suffixRegexp);
    return ret;
}

var escapeIdentRegex = function(str) {
    return str.replace(/([$])/, "\\$");
};

var makeNodePromisifiedEval;
if (!true) {
var switchCaseArgumentOrder = function(likelyArgumentCount) {
    var ret = [likelyArgumentCount];
    var min = Math.max(0, likelyArgumentCount - 1 - 3);
    for(var i = likelyArgumentCount - 1; i >= min; --i) {
        ret.push(i);
    }
    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {
        ret.push(i);
    }
    return ret;
};

var argumentSequence = function(argumentCount) {
    return util.filledRange(argumentCount, "_arg", "");
};

var parameterDeclaration = function(parameterCount) {
    return util.filledRange(
        Math.max(parameterCount, 3), "_arg", "");
};

var parameterCount = function(fn) {
    if (typeof fn.length === "number") {
        return Math.max(Math.min(fn.length, 1023 + 1), 0);
    }
    return 0;
};

makeNodePromisifiedEval =
function(callback, receiver, originalName, fn, _, multiArgs) {
    var newParameterCount = Math.max(0, parameterCount(fn) - 1);
    var argumentOrder = switchCaseArgumentOrder(newParameterCount);
    var shouldProxyThis = typeof callback === "string" || receiver === THIS;

    function generateCallForArgumentCount(count) {
        var args = argumentSequence(count).join(", ");
        var comma = count > 0 ? ", " : "";
        var ret;
        if (shouldProxyThis) {
            ret = "ret = callback.call(this, {{args}}, nodeback); break;\n";
        } else {
            ret = receiver === undefined
                ? "ret = callback({{args}}, nodeback); break;\n"
                : "ret = callback.call(receiver, {{args}}, nodeback); break;\n";
        }
        return ret.replace("{{args}}", args).replace(", ", comma);
    }

    function generateArgumentSwitchCase() {
        var ret = "";
        for (var i = 0; i < argumentOrder.length; ++i) {
            ret += "case " + argumentOrder[i] +":" +
                generateCallForArgumentCount(argumentOrder[i]);
        }

        ret += "                                                             \n\
        default:                                                             \n\
            var args = new Array(len + 1);                                   \n\
            var i = 0;                                                       \n\
            for (var i = 0; i < len; ++i) {                                  \n\
               args[i] = arguments[i];                                       \n\
            }                                                                \n\
            args[i] = nodeback;                                              \n\
            [CodeForCall]                                                    \n\
            break;                                                           \n\
        ".replace("[CodeForCall]", (shouldProxyThis
                                ? "ret = callback.apply(this, args);\n"
                                : "ret = callback.apply(receiver, args);\n"));
        return ret;
    }

    var getFunctionCode = typeof callback === "string"
                                ? ("this != null ? this['"+callback+"'] : fn")
                                : "fn";
    var body = "'use strict';                                                \n\
        var ret = function (Parameters) {                                    \n\
            'use strict';                                                    \n\
            var len = arguments.length;                                      \n\
            var promise = new Promise(INTERNAL);                             \n\
            promise._captureStackTrace();                                    \n\
            var nodeback = nodebackForPromise(promise, " + multiArgs + ");   \n\
            var ret;                                                         \n\
            var callback = tryCatch([GetFunctionCode]);                      \n\
            switch(len) {                                                    \n\
                [CodeForSwitchCase]                                          \n\
            }                                                                \n\
            if (ret === errorObj) {                                          \n\
                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n\
            }                                                                \n\
            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n\
            return promise;                                                  \n\
        };                                                                   \n\
        notEnumerableProp(ret, '__isPromisified__', true);                   \n\
        return ret;                                                          \n\
    ".replace("[CodeForSwitchCase]", generateArgumentSwitchCase())
        .replace("[GetFunctionCode]", getFunctionCode);
    body = body.replace("Parameters", parameterDeclaration(newParameterCount));
    return new Function("Promise",
                        "fn",
                        "receiver",
                        "withAppended",
                        "maybeWrapAsError",
                        "nodebackForPromise",
                        "tryCatch",
                        "errorObj",
                        "notEnumerableProp",
                        "INTERNAL",
                        body)(
                    Promise,
                    fn,
                    receiver,
                    withAppended,
                    maybeWrapAsError,
                    nodebackForPromise,
                    util.tryCatch,
                    util.errorObj,
                    util.notEnumerableProp,
                    INTERNAL);
};
}

function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
    var defaultThis = (function() {return this;})();
    var method = callback;
    if (typeof method === "string") {
        callback = fn;
    }
    function promisified() {
        var _receiver = receiver;
        if (receiver === THIS) _receiver = this;
        var promise = new Promise(INTERNAL);
        promise._captureStackTrace();
        var cb = typeof method === "string" && this !== defaultThis
            ? this[method] : callback;
        var fn = nodebackForPromise(promise, multiArgs);
        try {
            cb.apply(_receiver, withAppended(arguments, fn));
        } catch(e) {
            promise._rejectCallback(maybeWrapAsError(e), true, true);
        }
        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();
        return promise;
    }
    util.notEnumerableProp(promisified, "__isPromisified__", true);
    return promisified;
}

var makeNodePromisified = canEvaluate
    ? makeNodePromisifiedEval
    : makeNodePromisifiedClosure;

function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + "$");
    var methods =
        promisifiableMethods(obj, suffix, suffixRegexp, filter);

    for (var i = 0, len = methods.length; i < len; i+= 2) {
        var key = methods[i];
        var fn = methods[i+1];
        var promisifiedKey = key + suffix;
        if (promisifier === makeNodePromisified) {
            obj[promisifiedKey] =
                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
        } else {
            var promisified = promisifier(fn, function() {
                return makeNodePromisified(key, THIS, key,
                                           fn, suffix, multiArgs);
            });
            util.notEnumerableProp(promisified, "__isPromisified__", true);
            obj[promisifiedKey] = promisified;
        }
    }
    util.toFastProperties(obj);
    return obj;
}

function promisify(callback, receiver, multiArgs) {
    return makeNodePromisified(callback, receiver, undefined,
                                callback, null, multiArgs);
}

Promise.promisify = function (fn, options) {
    if (typeof fn !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(fn));
    }
    if (isPromisified(fn)) {
        return fn;
    }
    options = Object(options);
    var receiver = options.context === undefined ? THIS : options.context;
    var multiArgs = !!options.multiArgs;
    var ret = promisify(fn, receiver, multiArgs);
    util.copyDescriptors(fn, ret, propsFilter);
    return ret;
};

Promise.promisifyAll = function (target, options) {
    if (typeof target !== "function" && typeof target !== "object") {
        throw new TypeError("the target of promisifyAll must be an object or a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    options = Object(options);
    var multiArgs = !!options.multiArgs;
    var suffix = options.suffix;
    if (typeof suffix !== "string") suffix = defaultSuffix;
    var filter = options.filter;
    if (typeof filter !== "function") filter = defaultFilter;
    var promisifier = options.promisifier;
    if (typeof promisifier !== "function") promisifier = makeNodePromisified;

    if (!util.isIdentifier(suffix)) {
        throw new RangeError("suffix must be a valid identifier\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }

    var keys = util.inheritedDataKeys(target);
    for (var i = 0; i < keys.length; ++i) {
        var value = target[keys[i]];
        if (keys[i] !== "constructor" &&
            util.isClass(value)) {
            promisifyAll(value.prototype, suffix, filter, promisifier,
                multiArgs);
            promisifyAll(value, suffix, filter, promisifier, multiArgs);
        }
    }

    return promisifyAll(target, suffix, filter, promisifier, multiArgs);
};
};


},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(_dereq_,module,exports){
"use strict";
module.exports = function(
    Promise, PromiseArray, tryConvertToPromise, apiRejection) {
var util = _dereq_("./util");
var isObject = util.isObject;
var es5 = _dereq_("./es5");
var Es6Map;
if (typeof Map === "function") Es6Map = Map;

var mapToEntries = (function() {
    var index = 0;
    var size = 0;

    function extractEntry(value, key) {
        this[index] = value;
        this[index + size] = key;
        index++;
    }

    return function mapToEntries(map) {
        size = map.size;
        index = 0;
        var ret = new Array(map.size * 2);
        map.forEach(extractEntry, ret);
        return ret;
    };
})();

var entriesToMap = function(entries) {
    var ret = new Es6Map();
    var length = entries.length / 2 | 0;
    for (var i = 0; i < length; ++i) {
        var key = entries[length + i];
        var value = entries[i];
        ret.set(key, value);
    }
    return ret;
};

function PropertiesPromiseArray(obj) {
    var isMap = false;
    var entries;
    if (Es6Map !== undefined && obj instanceof Es6Map) {
        entries = mapToEntries(obj);
        isMap = true;
    } else {
        var keys = es5.keys(obj);
        var len = keys.length;
        entries = new Array(len * 2);
        for (var i = 0; i < len; ++i) {
            var key = keys[i];
            entries[i] = obj[key];
            entries[i + len] = key;
        }
    }
    this.constructor$(entries);
    this._isMap = isMap;
    this._init$(undefined, isMap ? -6 : -3);
}
util.inherits(PropertiesPromiseArray, PromiseArray);

PropertiesPromiseArray.prototype._init = function () {};

PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        var val;
        if (this._isMap) {
            val = entriesToMap(this._values);
        } else {
            val = {};
            var keyOffset = this.length();
            for (var i = 0, len = this.length(); i < len; ++i) {
                val[this._values[i + keyOffset]] = this._values[i];
            }
        }
        this._resolve(val);
        return true;
    }
    return false;
};

PropertiesPromiseArray.prototype.shouldCopyValues = function () {
    return false;
};

PropertiesPromiseArray.prototype.getActualLength = function (len) {
    return len >> 1;
};

function props(promises) {
    var ret;
    var castValue = tryConvertToPromise(promises);

    if (!isObject(castValue)) {
        return apiRejection("cannot await properties of a non-object\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    } else if (castValue instanceof Promise) {
        ret = castValue._then(
            Promise.props, undefined, undefined, undefined, undefined);
    } else {
        ret = new PropertiesPromiseArray(castValue).promise();
    }

    if (castValue instanceof Promise) {
        ret._propagateFrom(castValue, 2);
    }
    return ret;
}

Promise.prototype.props = function () {
    return props(this);
};

Promise.props = function (promises) {
    return props(promises);
};
};

},{"./es5":13,"./util":36}],26:[function(_dereq_,module,exports){
"use strict";
function arrayMove(src, srcIndex, dst, dstIndex, len) {
    for (var j = 0; j < len; ++j) {
        dst[j + dstIndex] = src[j + srcIndex];
        src[j + srcIndex] = void 0;
    }
}

function Queue(capacity) {
    this._capacity = capacity;
    this._length = 0;
    this._front = 0;
}

Queue.prototype._willBeOverCapacity = function (size) {
    return this._capacity < size;
};

Queue.prototype._pushOne = function (arg) {
    var length = this.length();
    this._checkCapacity(length + 1);
    var i = (this._front + length) & (this._capacity - 1);
    this[i] = arg;
    this._length = length + 1;
};

Queue.prototype.push = function (fn, receiver, arg) {
    var length = this.length() + 3;
    if (this._willBeOverCapacity(length)) {
        this._pushOne(fn);
        this._pushOne(receiver);
        this._pushOne(arg);
        return;
    }
    var j = this._front + length - 3;
    this._checkCapacity(length);
    var wrapMask = this._capacity - 1;
    this[(j + 0) & wrapMask] = fn;
    this[(j + 1) & wrapMask] = receiver;
    this[(j + 2) & wrapMask] = arg;
    this._length = length;
};

Queue.prototype.shift = function () {
    var front = this._front,
        ret = this[front];

    this[front] = undefined;
    this._front = (front + 1) & (this._capacity - 1);
    this._length--;
    return ret;
};

Queue.prototype.length = function () {
    return this._length;
};

Queue.prototype._checkCapacity = function (size) {
    if (this._capacity < size) {
        this._resizeTo(this._capacity << 1);
    }
};

Queue.prototype._resizeTo = function (capacity) {
    var oldCapacity = this._capacity;
    this._capacity = capacity;
    var front = this._front;
    var length = this._length;
    var moveItemsCount = (front + length) & (oldCapacity - 1);
    arrayMove(this, 0, this, oldCapacity, moveItemsCount);
};

module.exports = Queue;

},{}],27:[function(_dereq_,module,exports){
"use strict";
module.exports = function(
    Promise, INTERNAL, tryConvertToPromise, apiRejection) {
var util = _dereq_("./util");

var raceLater = function (promise) {
    return promise.then(function(array) {
        return race(array, promise);
    });
};

function race(promises, parent) {
    var maybePromise = tryConvertToPromise(promises);

    if (maybePromise instanceof Promise) {
        return raceLater(maybePromise);
    } else {
        promises = util.asArray(promises);
        if (promises === null)
            return apiRejection("expecting an array or an iterable object but got " + util.classString(promises));
    }

    var ret = new Promise(INTERNAL);
    if (parent !== undefined) {
        ret._propagateFrom(parent, 3);
    }
    var fulfill = ret._fulfill;
    var reject = ret._reject;
    for (var i = 0, len = promises.length; i < len; ++i) {
        var val = promises[i];

        if (val === undefined && !(i in promises)) {
            continue;
        }

        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
    }
    return ret;
}

Promise.race = function (promises) {
    return race(promises, undefined);
};

Promise.prototype.race = function () {
    return race(this, undefined);
};

};

},{"./util":36}],28:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise,
                          PromiseArray,
                          apiRejection,
                          tryConvertToPromise,
                          INTERNAL,
                          debug) {
var getDomain = Promise._getDomain;
var util = _dereq_("./util");
var tryCatch = util.tryCatch;

function ReductionPromiseArray(promises, fn, initialValue, _each) {
    this.constructor$(promises);
    var domain = getDomain();
    this._fn = domain === null ? fn : util.domainBind(domain, fn);
    if (initialValue !== undefined) {
        initialValue = Promise.resolve(initialValue);
        initialValue._attachCancellationCallback(this);
    }
    this._initialValue = initialValue;
    this._currentCancellable = null;
    if(_each === INTERNAL) {
        this._eachValues = Array(this._length);
    } else if (_each === 0) {
        this._eachValues = null;
    } else {
        this._eachValues = undefined;
    }
    this._promise._captureStackTrace();
    this._init$(undefined, -5);
}
util.inherits(ReductionPromiseArray, PromiseArray);

ReductionPromiseArray.prototype._gotAccum = function(accum) {
    if (this._eachValues !== undefined && 
        this._eachValues !== null && 
        accum !== INTERNAL) {
        this._eachValues.push(accum);
    }
};

ReductionPromiseArray.prototype._eachComplete = function(value) {
    if (this._eachValues !== null) {
        this._eachValues.push(value);
    }
    return this._eachValues;
};

ReductionPromiseArray.prototype._init = function() {};

ReductionPromiseArray.prototype._resolveEmptyArray = function() {
    this._resolve(this._eachValues !== undefined ? this._eachValues
                                                 : this._initialValue);
};

ReductionPromiseArray.prototype.shouldCopyValues = function () {
    return false;
};

ReductionPromiseArray.prototype._resolve = function(value) {
    this._promise._resolveCallback(value);
    this._values = null;
};

ReductionPromiseArray.prototype._resultCancelled = function(sender) {
    if (sender === this._initialValue) return this._cancel();
    if (this._isResolved()) return;
    this._resultCancelled$();
    if (this._currentCancellable instanceof Promise) {
        this._currentCancellable.cancel();
    }
    if (this._initialValue instanceof Promise) {
        this._initialValue.cancel();
    }
};

ReductionPromiseArray.prototype._iterate = function (values) {
    this._values = values;
    var value;
    var i;
    var length = values.length;
    if (this._initialValue !== undefined) {
        value = this._initialValue;
        i = 0;
    } else {
        value = Promise.resolve(values[0]);
        i = 1;
    }

    this._currentCancellable = value;

    if (!value.isRejected()) {
        for (; i < length; ++i) {
            var ctx = {
                accum: null,
                value: values[i],
                index: i,
                length: length,
                array: this
            };
            value = value._then(gotAccum, undefined, undefined, ctx, undefined);
        }
    }

    if (this._eachValues !== undefined) {
        value = value
            ._then(this._eachComplete, undefined, undefined, this, undefined);
    }
    value._then(completed, completed, undefined, value, this);
};

Promise.prototype.reduce = function (fn, initialValue) {
    return reduce(this, fn, initialValue, null);
};

Promise.reduce = function (promises, fn, initialValue, _each) {
    return reduce(promises, fn, initialValue, _each);
};

function completed(valueOrReason, array) {
    if (this.isFulfilled()) {
        array._resolve(valueOrReason);
    } else {
        array._reject(valueOrReason);
    }
}

function reduce(promises, fn, initialValue, _each) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }
    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
    return array.promise();
}

function gotAccum(accum) {
    this.accum = accum;
    this.array._gotAccum(accum);
    var value = tryConvertToPromise(this.value, this.array._promise);
    if (value instanceof Promise) {
        this.array._currentCancellable = value;
        return value._then(gotValue, undefined, undefined, this, undefined);
    } else {
        return gotValue.call(this, value);
    }
}

function gotValue(value) {
    var array = this.array;
    var promise = array._promise;
    var fn = tryCatch(array._fn);
    promise._pushContext();
    var ret;
    if (array._eachValues !== undefined) {
        ret = fn.call(promise._boundValue(), value, this.index, this.length);
    } else {
        ret = fn.call(promise._boundValue(),
                              this.accum, value, this.index, this.length);
    }
    if (ret instanceof Promise) {
        array._currentCancellable = ret;
    }
    var promiseCreated = promise._popContext();
    debug.checkForgottenReturns(
        ret,
        promiseCreated,
        array._eachValues !== undefined ? "Promise.each" : "Promise.reduce",
        promise
    );
    return ret;
}
};

},{"./util":36}],29:[function(_dereq_,module,exports){
"use strict";
var util = _dereq_("./util");
var schedule;
var noAsyncScheduler = function() {
    throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
};
var NativePromise = util.getNativePromise();
if (util.isNode && typeof MutationObserver === "undefined") {
    var GlobalSetImmediate = global.setImmediate;
    var ProcessNextTick = process.nextTick;
    schedule = util.isRecentNode
                ? function(fn) { GlobalSetImmediate.call(global, fn); }
                : function(fn) { ProcessNextTick.call(process, fn); };
} else if (typeof NativePromise === "function" &&
           typeof NativePromise.resolve === "function") {
    var nativePromise = NativePromise.resolve();
    schedule = function(fn) {
        nativePromise.then(fn);
    };
} else if ((typeof MutationObserver !== "undefined") &&
          !(typeof window !== "undefined" &&
            window.navigator &&
            (window.navigator.standalone || window.cordova))) {
    schedule = (function() {
        var div = document.createElement("div");
        var opts = {attributes: true};
        var toggleScheduled = false;
        var div2 = document.createElement("div");
        var o2 = new MutationObserver(function() {
            div.classList.toggle("foo");
            toggleScheduled = false;
        });
        o2.observe(div2, opts);

        var scheduleToggle = function() {
            if (toggleScheduled) return;
            toggleScheduled = true;
            div2.classList.toggle("foo");
        };

        return function schedule(fn) {
            var o = new MutationObserver(function() {
                o.disconnect();
                fn();
            });
            o.observe(div, opts);
            scheduleToggle();
        };
    })();
} else if (typeof setImmediate !== "undefined") {
    schedule = function (fn) {
        setImmediate(fn);
    };
} else if (typeof setTimeout !== "undefined") {
    schedule = function (fn) {
        setTimeout(fn, 0);
    };
} else {
    schedule = noAsyncScheduler;
}
module.exports = schedule;

},{"./util":36}],30:[function(_dereq_,module,exports){
"use strict";
module.exports =
    function(Promise, PromiseArray, debug) {
var PromiseInspection = Promise.PromiseInspection;
var util = _dereq_("./util");

function SettledPromiseArray(values) {
    this.constructor$(values);
}
util.inherits(SettledPromiseArray, PromiseArray);

SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
    this._values[index] = inspection;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
        return true;
    }
    return false;
};

SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
    var ret = new PromiseInspection();
    ret._bitField = 33554432;
    ret._settledValueField = value;
    return this._promiseResolved(index, ret);
};
SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
    var ret = new PromiseInspection();
    ret._bitField = 16777216;
    ret._settledValueField = reason;
    return this._promiseResolved(index, ret);
};

Promise.settle = function (promises) {
    debug.deprecated(".settle()", ".reflect()");
    return new SettledPromiseArray(promises).promise();
};

Promise.prototype.settle = function () {
    return Promise.settle(this);
};
};

},{"./util":36}],31:[function(_dereq_,module,exports){
"use strict";
module.exports =
function(Promise, PromiseArray, apiRejection) {
var util = _dereq_("./util");
var RangeError = _dereq_("./errors").RangeError;
var AggregateError = _dereq_("./errors").AggregateError;
var isArray = util.isArray;
var CANCELLATION = {};


function SomePromiseArray(values) {
    this.constructor$(values);
    this._howMany = 0;
    this._unwrap = false;
    this._initialized = false;
}
util.inherits(SomePromiseArray, PromiseArray);

SomePromiseArray.prototype._init = function () {
    if (!this._initialized) {
        return;
    }
    if (this._howMany === 0) {
        this._resolve([]);
        return;
    }
    this._init$(undefined, -5);
    var isArrayResolved = isArray(this._values);
    if (!this._isResolved() &&
        isArrayResolved &&
        this._howMany > this._canPossiblyFulfill()) {
        this._reject(this._getRangeError(this.length()));
    }
};

SomePromiseArray.prototype.init = function () {
    this._initialized = true;
    this._init();
};

SomePromiseArray.prototype.setUnwrap = function () {
    this._unwrap = true;
};

SomePromiseArray.prototype.howMany = function () {
    return this._howMany;
};

SomePromiseArray.prototype.setHowMany = function (count) {
    this._howMany = count;
};

SomePromiseArray.prototype._promiseFulfilled = function (value) {
    this._addFulfilled(value);
    if (this._fulfilled() === this.howMany()) {
        this._values.length = this.howMany();
        if (this.howMany() === 1 && this._unwrap) {
            this._resolve(this._values[0]);
        } else {
            this._resolve(this._values);
        }
        return true;
    }
    return false;

};
SomePromiseArray.prototype._promiseRejected = function (reason) {
    this._addRejected(reason);
    return this._checkOutcome();
};

SomePromiseArray.prototype._promiseCancelled = function () {
    if (this._values instanceof Promise || this._values == null) {
        return this._cancel();
    }
    this._addRejected(CANCELLATION);
    return this._checkOutcome();
};

SomePromiseArray.prototype._checkOutcome = function() {
    if (this.howMany() > this._canPossiblyFulfill()) {
        var e = new AggregateError();
        for (var i = this.length(); i < this._values.length; ++i) {
            if (this._values[i] !== CANCELLATION) {
                e.push(this._values[i]);
            }
        }
        if (e.length > 0) {
            this._reject(e);
        } else {
            this._cancel();
        }
        return true;
    }
    return false;
};

SomePromiseArray.prototype._fulfilled = function () {
    return this._totalResolved;
};

SomePromiseArray.prototype._rejected = function () {
    return this._values.length - this.length();
};

SomePromiseArray.prototype._addRejected = function (reason) {
    this._values.push(reason);
};

SomePromiseArray.prototype._addFulfilled = function (value) {
    this._values[this._totalResolved++] = value;
};

SomePromiseArray.prototype._canPossiblyFulfill = function () {
    return this.length() - this._rejected();
};

SomePromiseArray.prototype._getRangeError = function (count) {
    var message = "Input array must contain at least " +
            this._howMany + " items but contains only " + count + " items";
    return new RangeError(message);
};

SomePromiseArray.prototype._resolveEmptyArray = function () {
    this._reject(this._getRangeError(0));
};

function some(promises, howMany) {
    if ((howMany | 0) !== howMany || howMany < 0) {
        return apiRejection("expecting a positive integer\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    ret.setHowMany(howMany);
    ret.init();
    return promise;
}

Promise.some = function (promises, howMany) {
    return some(promises, howMany);
};

Promise.prototype.some = function (howMany) {
    return some(this, howMany);
};

Promise._SomePromiseArray = SomePromiseArray;
};

},{"./errors":12,"./util":36}],32:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
function PromiseInspection(promise) {
    if (promise !== undefined) {
        promise = promise._target();
        this._bitField = promise._bitField;
        this._settledValueField = promise._isFateSealed()
            ? promise._settledValue() : undefined;
    }
    else {
        this._bitField = 0;
        this._settledValueField = undefined;
    }
}

PromiseInspection.prototype._settledValue = function() {
    return this._settledValueField;
};

var value = PromiseInspection.prototype.value = function () {
    if (!this.isFulfilled()) {
        throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    return this._settledValue();
};

var reason = PromiseInspection.prototype.error =
PromiseInspection.prototype.reason = function () {
    if (!this.isRejected()) {
        throw new TypeError("cannot get rejection reason of a non-rejected promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    return this._settledValue();
};

var isFulfilled = PromiseInspection.prototype.isFulfilled = function() {
    return (this._bitField & 33554432) !== 0;
};

var isRejected = PromiseInspection.prototype.isRejected = function () {
    return (this._bitField & 16777216) !== 0;
};

var isPending = PromiseInspection.prototype.isPending = function () {
    return (this._bitField & 50397184) === 0;
};

var isResolved = PromiseInspection.prototype.isResolved = function () {
    return (this._bitField & 50331648) !== 0;
};

PromiseInspection.prototype.isCancelled = function() {
    return (this._bitField & 8454144) !== 0;
};

Promise.prototype.__isCancelled = function() {
    return (this._bitField & 65536) === 65536;
};

Promise.prototype._isCancelled = function() {
    return this._target().__isCancelled();
};

Promise.prototype.isCancelled = function() {
    return (this._target()._bitField & 8454144) !== 0;
};

Promise.prototype.isPending = function() {
    return isPending.call(this._target());
};

Promise.prototype.isRejected = function() {
    return isRejected.call(this._target());
};

Promise.prototype.isFulfilled = function() {
    return isFulfilled.call(this._target());
};

Promise.prototype.isResolved = function() {
    return isResolved.call(this._target());
};

Promise.prototype.value = function() {
    return value.call(this._target());
};

Promise.prototype.reason = function() {
    var target = this._target();
    target._unsetRejectionIsUnhandled();
    return reason.call(target);
};

Promise.prototype._value = function() {
    return this._settledValue();
};

Promise.prototype._reason = function() {
    this._unsetRejectionIsUnhandled();
    return this._settledValue();
};

Promise.PromiseInspection = PromiseInspection;
};

},{}],33:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var util = _dereq_("./util");
var errorObj = util.errorObj;
var isObject = util.isObject;

function tryConvertToPromise(obj, context) {
    if (isObject(obj)) {
        if (obj instanceof Promise) return obj;
        var then = getThen(obj);
        if (then === errorObj) {
            if (context) context._pushContext();
            var ret = Promise.reject(then.e);
            if (context) context._popContext();
            return ret;
        } else if (typeof then === "function") {
            if (isAnyBluebirdPromise(obj)) {
                var ret = new Promise(INTERNAL);
                obj._then(
                    ret._fulfill,
                    ret._reject,
                    undefined,
                    ret,
                    null
                );
                return ret;
            }
            return doThenable(obj, then, context);
        }
    }
    return obj;
}

function doGetThen(obj) {
    return obj.then;
}

function getThen(obj) {
    try {
        return doGetThen(obj);
    } catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

var hasProp = {}.hasOwnProperty;
function isAnyBluebirdPromise(obj) {
    try {
        return hasProp.call(obj, "_promise0");
    } catch (e) {
        return false;
    }
}

function doThenable(x, then, context) {
    var promise = new Promise(INTERNAL);
    var ret = promise;
    if (context) context._pushContext();
    promise._captureStackTrace();
    if (context) context._popContext();
    var synchronous = true;
    var result = util.tryCatch(then).call(x, resolve, reject);
    synchronous = false;

    if (promise && result === errorObj) {
        promise._rejectCallback(result.e, true, true);
        promise = null;
    }

    function resolve(value) {
        if (!promise) return;
        promise._resolveCallback(value);
        promise = null;
    }

    function reject(reason) {
        if (!promise) return;
        promise._rejectCallback(reason, synchronous, true);
        promise = null;
    }
    return ret;
}

return tryConvertToPromise;
};

},{"./util":36}],34:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL, debug) {
var util = _dereq_("./util");
var TimeoutError = Promise.TimeoutError;

function HandleWrapper(handle)  {
    this.handle = handle;
}

HandleWrapper.prototype._resultCancelled = function() {
    clearTimeout(this.handle);
};

var afterValue = function(value) { return delay(+this).thenReturn(value); };
var delay = Promise.delay = function (ms, value) {
    var ret;
    var handle;
    if (value !== undefined) {
        ret = Promise.resolve(value)
                ._then(afterValue, null, null, ms, undefined);
        if (debug.cancellation() && value instanceof Promise) {
            ret._setOnCancel(value);
        }
    } else {
        ret = new Promise(INTERNAL);
        handle = setTimeout(function() { ret._fulfill(); }, +ms);
        if (debug.cancellation()) {
            ret._setOnCancel(new HandleWrapper(handle));
        }
        ret._captureStackTrace();
    }
    ret._setAsyncGuaranteed();
    return ret;
};

Promise.prototype.delay = function (ms) {
    return delay(ms, this);
};

var afterTimeout = function (promise, message, parent) {
    var err;
    if (typeof message !== "string") {
        if (message instanceof Error) {
            err = message;
        } else {
            err = new TimeoutError("operation timed out");
        }
    } else {
        err = new TimeoutError(message);
    }
    util.markAsOriginatingFromRejection(err);
    promise._attachExtraTrace(err);
    promise._reject(err);

    if (parent != null) {
        parent.cancel();
    }
};

function successClear(value) {
    clearTimeout(this.handle);
    return value;
}

function failureClear(reason) {
    clearTimeout(this.handle);
    throw reason;
}

Promise.prototype.timeout = function (ms, message) {
    ms = +ms;
    var ret, parent;

    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
        if (ret.isPending()) {
            afterTimeout(ret, message, parent);
        }
    }, ms));

    if (debug.cancellation()) {
        parent = this.then();
        ret = parent._then(successClear, failureClear,
                            undefined, handleWrapper, undefined);
        ret._setOnCancel(handleWrapper);
    } else {
        ret = this._then(successClear, failureClear,
                            undefined, handleWrapper, undefined);
    }

    return ret;
};

};

},{"./util":36}],35:[function(_dereq_,module,exports){
"use strict";
module.exports = function (Promise, apiRejection, tryConvertToPromise,
    createContext, INTERNAL, debug) {
    var util = _dereq_("./util");
    var TypeError = _dereq_("./errors").TypeError;
    var inherits = _dereq_("./util").inherits;
    var errorObj = util.errorObj;
    var tryCatch = util.tryCatch;
    var NULL = {};

    function thrower(e) {
        setTimeout(function(){throw e;}, 0);
    }

    function castPreservingDisposable(thenable) {
        var maybePromise = tryConvertToPromise(thenable);
        if (maybePromise !== thenable &&
            typeof thenable._isDisposable === "function" &&
            typeof thenable._getDisposer === "function" &&
            thenable._isDisposable()) {
            maybePromise._setDisposable(thenable._getDisposer());
        }
        return maybePromise;
    }
    function dispose(resources, inspection) {
        var i = 0;
        var len = resources.length;
        var ret = new Promise(INTERNAL);
        function iterator() {
            if (i >= len) return ret._fulfill();
            var maybePromise = castPreservingDisposable(resources[i++]);
            if (maybePromise instanceof Promise &&
                maybePromise._isDisposable()) {
                try {
                    maybePromise = tryConvertToPromise(
                        maybePromise._getDisposer().tryDispose(inspection),
                        resources.promise);
                } catch (e) {
                    return thrower(e);
                }
                if (maybePromise instanceof Promise) {
                    return maybePromise._then(iterator, thrower,
                                              null, null, null);
                }
            }
            iterator();
        }
        iterator();
        return ret;
    }

    function Disposer(data, promise, context) {
        this._data = data;
        this._promise = promise;
        this._context = context;
    }

    Disposer.prototype.data = function () {
        return this._data;
    };

    Disposer.prototype.promise = function () {
        return this._promise;
    };

    Disposer.prototype.resource = function () {
        if (this.promise().isFulfilled()) {
            return this.promise().value();
        }
        return NULL;
    };

    Disposer.prototype.tryDispose = function(inspection) {
        var resource = this.resource();
        var context = this._context;
        if (context !== undefined) context._pushContext();
        var ret = resource !== NULL
            ? this.doDispose(resource, inspection) : null;
        if (context !== undefined) context._popContext();
        this._promise._unsetDisposable();
        this._data = null;
        return ret;
    };

    Disposer.isDisposer = function (d) {
        return (d != null &&
                typeof d.resource === "function" &&
                typeof d.tryDispose === "function");
    };

    function FunctionDisposer(fn, promise, context) {
        this.constructor$(fn, promise, context);
    }
    inherits(FunctionDisposer, Disposer);

    FunctionDisposer.prototype.doDispose = function (resource, inspection) {
        var fn = this.data();
        return fn.call(resource, resource, inspection);
    };

    function maybeUnwrapDisposer(value) {
        if (Disposer.isDisposer(value)) {
            this.resources[this.index]._setDisposable(value);
            return value.promise();
        }
        return value;
    }

    function ResourceList(length) {
        this.length = length;
        this.promise = null;
        this[length-1] = null;
    }

    ResourceList.prototype._resultCancelled = function() {
        var len = this.length;
        for (var i = 0; i < len; ++i) {
            var item = this[i];
            if (item instanceof Promise) {
                item.cancel();
            }
        }
    };

    Promise.using = function () {
        var len = arguments.length;
        if (len < 2) return apiRejection(
                        "you must pass at least 2 arguments to Promise.using");
        var fn = arguments[len - 1];
        if (typeof fn !== "function") {
            return apiRejection("expecting a function but got " + util.classString(fn));
        }
        var input;
        var spreadArgs = true;
        if (len === 2 && Array.isArray(arguments[0])) {
            input = arguments[0];
            len = input.length;
            spreadArgs = false;
        } else {
            input = arguments;
            len--;
        }
        var resources = new ResourceList(len);
        for (var i = 0; i < len; ++i) {
            var resource = input[i];
            if (Disposer.isDisposer(resource)) {
                var disposer = resource;
                resource = resource.promise();
                resource._setDisposable(disposer);
            } else {
                var maybePromise = tryConvertToPromise(resource);
                if (maybePromise instanceof Promise) {
                    resource =
                        maybePromise._then(maybeUnwrapDisposer, null, null, {
                            resources: resources,
                            index: i
                    }, undefined);
                }
            }
            resources[i] = resource;
        }

        var reflectedResources = new Array(resources.length);
        for (var i = 0; i < reflectedResources.length; ++i) {
            reflectedResources[i] = Promise.resolve(resources[i]).reflect();
        }

        var resultPromise = Promise.all(reflectedResources)
            .then(function(inspections) {
                for (var i = 0; i < inspections.length; ++i) {
                    var inspection = inspections[i];
                    if (inspection.isRejected()) {
                        errorObj.e = inspection.error();
                        return errorObj;
                    } else if (!inspection.isFulfilled()) {
                        resultPromise.cancel();
                        return;
                    }
                    inspections[i] = inspection.value();
                }
                promise._pushContext();

                fn = tryCatch(fn);
                var ret = spreadArgs
                    ? fn.apply(undefined, inspections) : fn(inspections);
                var promiseCreated = promise._popContext();
                debug.checkForgottenReturns(
                    ret, promiseCreated, "Promise.using", promise);
                return ret;
            });

        var promise = resultPromise.lastly(function() {
            var inspection = new Promise.PromiseInspection(resultPromise);
            return dispose(resources, inspection);
        });
        resources.promise = promise;
        promise._setOnCancel(resources);
        return promise;
    };

    Promise.prototype._setDisposable = function (disposer) {
        this._bitField = this._bitField | 131072;
        this._disposer = disposer;
    };

    Promise.prototype._isDisposable = function () {
        return (this._bitField & 131072) > 0;
    };

    Promise.prototype._getDisposer = function () {
        return this._disposer;
    };

    Promise.prototype._unsetDisposable = function () {
        this._bitField = this._bitField & (~131072);
        this._disposer = undefined;
    };

    Promise.prototype.disposer = function (fn) {
        if (typeof fn === "function") {
            return new FunctionDisposer(fn, this, createContext());
        }
        throw new TypeError();
    };

};

},{"./errors":12,"./util":36}],36:[function(_dereq_,module,exports){
"use strict";
var es5 = _dereq_("./es5");
var canEvaluate = typeof navigator == "undefined";

var errorObj = {e: {}};
var tryCatchTarget;
var globalObject = typeof self !== "undefined" ? self :
    typeof window !== "undefined" ? window :
    typeof global !== "undefined" ? global :
    this !== undefined ? this : null;

function tryCatcher() {
    try {
        var target = tryCatchTarget;
        tryCatchTarget = null;
        return target.apply(this, arguments);
    } catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}

var inherits = function(Child, Parent) {
    var hasProp = {}.hasOwnProperty;

    function T() {
        this.constructor = Child;
        this.constructor$ = Parent;
        for (var propertyName in Parent.prototype) {
            if (hasProp.call(Parent.prototype, propertyName) &&
                propertyName.charAt(propertyName.length-1) !== "$"
           ) {
                this[propertyName + "$"] = Parent.prototype[propertyName];
            }
        }
    }
    T.prototype = Parent.prototype;
    Child.prototype = new T();
    return Child.prototype;
};


function isPrimitive(val) {
    return val == null || val === true || val === false ||
        typeof val === "string" || typeof val === "number";

}

function isObject(value) {
    return typeof value === "function" ||
           typeof value === "object" && value !== null;
}

function maybeWrapAsError(maybeError) {
    if (!isPrimitive(maybeError)) return maybeError;

    return new Error(safeToString(maybeError));
}

function withAppended(target, appendee) {
    var len = target.length;
    var ret = new Array(len + 1);
    var i;
    for (i = 0; i < len; ++i) {
        ret[i] = target[i];
    }
    ret[i] = appendee;
    return ret;
}

function getDataPropertyOrDefault(obj, key, defaultValue) {
    if (es5.isES5) {
        var desc = Object.getOwnPropertyDescriptor(obj, key);

        if (desc != null) {
            return desc.get == null && desc.set == null
                    ? desc.value
                    : defaultValue;
        }
    } else {
        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
    }
}

function notEnumerableProp(obj, name, value) {
    if (isPrimitive(obj)) return obj;
    var descriptor = {
        value: value,
        configurable: true,
        enumerable: false,
        writable: true
    };
    es5.defineProperty(obj, name, descriptor);
    return obj;
}

function thrower(r) {
    throw r;
}

var inheritedDataKeys = (function() {
    var excludedPrototypes = [
        Array.prototype,
        Object.prototype,
        Function.prototype
    ];

    var isExcludedProto = function(val) {
        for (var i = 0; i < excludedPrototypes.length; ++i) {
            if (excludedPrototypes[i] === val) {
                return true;
            }
        }
        return false;
    };

    if (es5.isES5) {
        var getKeys = Object.getOwnPropertyNames;
        return function(obj) {
            var ret = [];
            var visitedKeys = Object.create(null);
            while (obj != null && !isExcludedProto(obj)) {
                var keys;
                try {
                    keys = getKeys(obj);
                } catch (e) {
                    return ret;
                }
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (visitedKeys[key]) continue;
                    visitedKeys[key] = true;
                    var desc = Object.getOwnPropertyDescriptor(obj, key);
                    if (desc != null && desc.get == null && desc.set == null) {
                        ret.push(key);
                    }
                }
                obj = es5.getPrototypeOf(obj);
            }
            return ret;
        };
    } else {
        var hasProp = {}.hasOwnProperty;
        return function(obj) {
            if (isExcludedProto(obj)) return [];
            var ret = [];

            /*jshint forin:false */
            enumeration: for (var key in obj) {
                if (hasProp.call(obj, key)) {
                    ret.push(key);
                } else {
                    for (var i = 0; i < excludedPrototypes.length; ++i) {
                        if (hasProp.call(excludedPrototypes[i], key)) {
                            continue enumeration;
                        }
                    }
                    ret.push(key);
                }
            }
            return ret;
        };
    }

})();

var thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
function isClass(fn) {
    try {
        if (typeof fn === "function") {
            var keys = es5.names(fn.prototype);

            var hasMethods = es5.isES5 && keys.length > 1;
            var hasMethodsOtherThanConstructor = keys.length > 0 &&
                !(keys.length === 1 && keys[0] === "constructor");
            var hasThisAssignmentAndStaticMethods =
                thisAssignmentPattern.test(fn + "") && es5.names(fn).length > 0;

            if (hasMethods || hasMethodsOtherThanConstructor ||
                hasThisAssignmentAndStaticMethods) {
                return true;
            }
        }
        return false;
    } catch (e) {
        return false;
    }
}

function toFastProperties(obj) {
    /*jshint -W027,-W055,-W031*/
    function FakeConstructor() {}
    FakeConstructor.prototype = obj;
    var receiver = new FakeConstructor();
    function ic() {
        return typeof receiver.foo;
    }
    ic();
    ic();
    return obj;
    eval(obj);
}

var rident = /^[a-z$_][a-z$_0-9]*$/i;
function isIdentifier(str) {
    return rident.test(str);
}

function filledRange(count, prefix, suffix) {
    var ret = new Array(count);
    for(var i = 0; i < count; ++i) {
        ret[i] = prefix + i + suffix;
    }
    return ret;
}

function safeToString(obj) {
    try {
        return obj + "";
    } catch (e) {
        return "[no string representation]";
    }
}

function isError(obj) {
    return obj instanceof Error ||
        (obj !== null &&
           typeof obj === "object" &&
           typeof obj.message === "string" &&
           typeof obj.name === "string");
}

function markAsOriginatingFromRejection(e) {
    try {
        notEnumerableProp(e, "isOperational", true);
    }
    catch(ignore) {}
}

function originatesFromRejection(e) {
    if (e == null) return false;
    return ((e instanceof Error["__BluebirdErrorTypes__"].OperationalError) ||
        e["isOperational"] === true);
}

function canAttachTrace(obj) {
    return isError(obj) && es5.propertyIsWritable(obj, "stack");
}

var ensureErrorObject = (function() {
    if (!("stack" in new Error())) {
        return function(value) {
            if (canAttachTrace(value)) return value;
            try {throw new Error(safeToString(value));}
            catch(err) {return err;}
        };
    } else {
        return function(value) {
            if (canAttachTrace(value)) return value;
            return new Error(safeToString(value));
        };
    }
})();

function classString(obj) {
    return {}.toString.call(obj);
}

function copyDescriptors(from, to, filter) {
    var keys = es5.names(from);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (filter(key)) {
            try {
                es5.defineProperty(to, key, es5.getDescriptor(from, key));
            } catch (ignore) {}
        }
    }
}

var asArray = function(v) {
    if (es5.isArray(v)) {
        return v;
    }
    return null;
};

if (typeof Symbol !== "undefined" && Symbol.iterator) {
    var ArrayFrom = typeof Array.from === "function" ? function(v) {
        return Array.from(v);
    } : function(v) {
        var ret = [];
        var it = v[Symbol.iterator]();
        var itResult;
        while (!((itResult = it.next()).done)) {
            ret.push(itResult.value);
        }
        return ret;
    };

    asArray = function(v) {
        if (es5.isArray(v)) {
            return v;
        } else if (v != null && typeof v[Symbol.iterator] === "function") {
            return ArrayFrom(v);
        }
        return null;
    };
}

var isNode = typeof process !== "undefined" &&
        classString(process).toLowerCase() === "[object process]";

var hasEnvVariables = typeof process !== "undefined" &&
    typeof process.env !== "undefined";

function env(key) {
    return hasEnvVariables ? process.env[key] : undefined;
}

function getNativePromise() {
    if (typeof Promise === "function") {
        try {
            var promise = new Promise(function(){});
            if ({}.toString.call(promise) === "[object Promise]") {
                return Promise;
            }
        } catch (e) {}
    }
}

function domainBind(self, cb) {
    return self.bind(cb);
}

var ret = {
    isClass: isClass,
    isIdentifier: isIdentifier,
    inheritedDataKeys: inheritedDataKeys,
    getDataPropertyOrDefault: getDataPropertyOrDefault,
    thrower: thrower,
    isArray: es5.isArray,
    asArray: asArray,
    notEnumerableProp: notEnumerableProp,
    isPrimitive: isPrimitive,
    isObject: isObject,
    isError: isError,
    canEvaluate: canEvaluate,
    errorObj: errorObj,
    tryCatch: tryCatch,
    inherits: inherits,
    withAppended: withAppended,
    maybeWrapAsError: maybeWrapAsError,
    toFastProperties: toFastProperties,
    filledRange: filledRange,
    toString: safeToString,
    canAttachTrace: canAttachTrace,
    ensureErrorObject: ensureErrorObject,
    originatesFromRejection: originatesFromRejection,
    markAsOriginatingFromRejection: markAsOriginatingFromRejection,
    classString: classString,
    copyDescriptors: copyDescriptors,
    hasDevTools: typeof chrome !== "undefined" && chrome &&
                 typeof chrome.loadTimes === "function",
    isNode: isNode,
    hasEnvVariables: hasEnvVariables,
    env: env,
    global: globalObject,
    getNativePromise: getNativePromise,
    domainBind: domainBind
};
ret.isRecentNode = ret.isNode && (function() {
    var version;
    if (process.versions && process.versions.node) {    
        version = process.versions.node.split(".").map(Number);
    } else if (process.version) {
        version = process.version.split(".").map(Number);
    }
    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);
})();

if (ret.isNode) ret.toFastProperties(process);

try {throw new Error(); } catch (e) {ret.lastLineError = e;}
module.exports = ret;

},{"./es5":13}]},{},[4])(4)
});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("timers").setImmediate)
},{"_process":124,"timers":143}],29:[function(require,module,exports){

},{}],30:[function(require,module,exports){
arguments[4][29][0].apply(exports,arguments)
},{"dup":29}],31:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (!events)
    return [];

  var evlistener = events[type];
  if (!evlistener)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],32:[function(require,module,exports){
(function (Buffer){
(function () {
  "use strict";

  function btoa(str) {
    var buffer;

    if (str instanceof Buffer) {
      buffer = str;
    } else {
      buffer = Buffer.from(str.toString(), 'binary');
    }

    return buffer.toString('base64');
  }

  module.exports = btoa;
}());

}).call(this,require("buffer").Buffer)
},{"buffer":33}],33:[function(require,module,exports){
(function (Buffer){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this,require("buffer").Buffer)
},{"base64-js":26,"buffer":33,"ieee754":101}],34:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":103}],35:[function(require,module,exports){
'use strict';

var copy             = require('es5-ext/object/copy')
  , normalizeOptions = require('es5-ext/object/normalize-options')
  , ensureCallable   = require('es5-ext/object/valid-callable')
  , map              = require('es5-ext/object/map')
  , callable         = require('es5-ext/object/valid-callable')
  , validValue       = require('es5-ext/object/valid-value')

  , bind = Function.prototype.bind, defineProperty = Object.defineProperty
  , hasOwnProperty = Object.prototype.hasOwnProperty
  , define;

define = function (name, desc, options) {
	var value = validValue(desc) && callable(desc.value), dgs;
	dgs = copy(desc);
	delete dgs.writable;
	delete dgs.value;
	dgs.get = function () {
		if (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;
		desc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);
		defineProperty(this, name, desc);
		return this[name];
	};
	return dgs;
};

module.exports = function (props/*, options*/) {
	var options = normalizeOptions(arguments[1]);
	if (options.resolveContext != null) ensureCallable(options.resolveContext);
	return map(props, function (desc, name) { return define(name, desc, options); });
};

},{"es5-ext/object/copy":59,"es5-ext/object/map":68,"es5-ext/object/normalize-options":69,"es5-ext/object/valid-callable":74,"es5-ext/object/valid-value":75}],36:[function(require,module,exports){
'use strict';

var assign        = require('es5-ext/object/assign')
  , normalizeOpts = require('es5-ext/object/normalize-options')
  , isCallable    = require('es5-ext/object/is-callable')
  , contains      = require('es5-ext/string/#/contains')

  , d;

d = module.exports = function (dscr, value/*, options*/) {
	var c, e, w, options, desc;
	if ((arguments.length < 2) || (typeof dscr !== 'string')) {
		options = value;
		value = dscr;
		dscr = null;
	} else {
		options = arguments[2];
	}
	if (dscr == null) {
		c = w = true;
		e = false;
	} else {
		c = contains.call(dscr, 'c');
		e = contains.call(dscr, 'e');
		w = contains.call(dscr, 'w');
	}

	desc = { value: value, configurable: c, enumerable: e, writable: w };
	return !options ? desc : assign(normalizeOpts(options), desc);
};

d.gs = function (dscr, get, set/*, options*/) {
	var c, e, options, desc;
	if (typeof dscr !== 'string') {
		options = set;
		set = get;
		get = dscr;
		dscr = null;
	} else {
		options = arguments[3];
	}
	if (get == null) {
		get = undefined;
	} else if (!isCallable(get)) {
		options = get;
		get = set = undefined;
	} else if (set == null) {
		set = undefined;
	} else if (!isCallable(set)) {
		options = set;
		set = undefined;
	}
	if (dscr == null) {
		c = true;
		e = false;
	} else {
		c = contains.call(dscr, 'c');
		e = contains.call(dscr, 'e');
	}

	desc = { get: get, set: set, configurable: c, enumerable: e };
	return !options ? desc : assign(normalizeOpts(options), desc);
};

},{"es5-ext/object/assign":56,"es5-ext/object/is-callable":62,"es5-ext/object/normalize-options":69,"es5-ext/string/#/contains":76}],37:[function(require,module,exports){
(function (process,Buffer){
var stream = require('readable-stream')
var eos = require('end-of-stream')
var inherits = require('inherits')
var shift = require('stream-shift')

var SIGNAL_FLUSH = (Buffer.from && Buffer.from !== Uint8Array.from)
  ? Buffer.from([0])
  : new Buffer([0])

var onuncork = function(self, fn) {
  if (self._corked) self.once('uncork', fn)
  else fn()
}

var autoDestroy = function (self, err) {
  if (self._autoDestroy) self.destroy(err)
}

var destroyer = function(self, end) {
  return function(err) {
    if (err) autoDestroy(self, err.message === 'premature close' ? null : err)
    else if (end && !self._ended) self.end()
  }
}

var end = function(ws, fn) {
  if (!ws) return fn()
  if (ws._writableState && ws._writableState.finished) return fn()
  if (ws._writableState) return ws.end(fn)
  ws.end()
  fn()
}

var toStreams2 = function(rs) {
  return new (stream.Readable)({objectMode:true, highWaterMark:16}).wrap(rs)
}

var Duplexify = function(writable, readable, opts) {
  if (!(this instanceof Duplexify)) return new Duplexify(writable, readable, opts)
  stream.Duplex.call(this, opts)

  this._writable = null
  this._readable = null
  this._readable2 = null

  this._autoDestroy = !opts || opts.autoDestroy !== false
  this._forwardDestroy = !opts || opts.destroy !== false
  this._forwardEnd = !opts || opts.end !== false
  this._corked = 1 // start corked
  this._ondrain = null
  this._drained = false
  this._forwarding = false
  this._unwrite = null
  this._unread = null
  this._ended = false

  this.destroyed = false

  if (writable) this.setWritable(writable)
  if (readable) this.setReadable(readable)
}

inherits(Duplexify, stream.Duplex)

Duplexify.obj = function(writable, readable, opts) {
  if (!opts) opts = {}
  opts.objectMode = true
  opts.highWaterMark = 16
  return new Duplexify(writable, readable, opts)
}

Duplexify.prototype.cork = function() {
  if (++this._corked === 1) this.emit('cork')
}

Duplexify.prototype.uncork = function() {
  if (this._corked && --this._corked === 0) this.emit('uncork')
}

Duplexify.prototype.setWritable = function(writable) {
  if (this._unwrite) this._unwrite()

  if (this.destroyed) {
    if (writable && writable.destroy) writable.destroy()
    return
  }

  if (writable === null || writable === false) {
    this.end()
    return
  }

  var self = this
  var unend = eos(writable, {writable:true, readable:false}, destroyer(this, this._forwardEnd))

  var ondrain = function() {
    var ondrain = self._ondrain
    self._ondrain = null
    if (ondrain) ondrain()
  }

  var clear = function() {
    self._writable.removeListener('drain', ondrain)
    unend()
  }

  if (this._unwrite) process.nextTick(ondrain) // force a drain on stream reset to avoid livelocks

  this._writable = writable
  this._writable.on('drain', ondrain)
  this._unwrite = clear

  this.uncork() // always uncork setWritable
}

Duplexify.prototype.setReadable = function(readable) {
  if (this._unread) this._unread()

  if (this.destroyed) {
    if (readable && readable.destroy) readable.destroy()
    return
  }

  if (readable === null || readable === false) {
    this.push(null)
    this.resume()
    return
  }

  var self = this
  var unend = eos(readable, {writable:false, readable:true}, destroyer(this))

  var onreadable = function() {
    self._forward()
  }

  var onend = function() {
    self.push(null)
  }

  var clear = function() {
    self._readable2.removeListener('readable', onreadable)
    self._readable2.removeListener('end', onend)
    unend()
  }

  this._drained = true
  this._readable = readable
  this._readable2 = readable._readableState ? readable : toStreams2(readable)
  this._readable2.on('readable', onreadable)
  this._readable2.on('end', onend)
  this._unread = clear

  this._forward()
}

Duplexify.prototype._read = function() {
  this._drained = true
  this._forward()
}

Duplexify.prototype._forward = function() {
  if (this._forwarding || !this._readable2 || !this._drained) return
  this._forwarding = true

  var data

  while (this._drained && (data = shift(this._readable2)) !== null) {
    if (this.destroyed) continue
    this._drained = this.push(data)
  }

  this._forwarding = false
}

Duplexify.prototype.destroy = function(err) {
  if (this.destroyed) return
  this.destroyed = true

  var self = this
  process.nextTick(function() {
    self._destroy(err)
  })
}

Duplexify.prototype._destroy = function(err) {
  if (err) {
    var ondrain = this._ondrain
    this._ondrain = null
    if (ondrain) ondrain(err)
    else this.emit('error', err)
  }

  if (this._forwardDestroy) {
    if (this._readable && this._readable.destroy) this._readable.destroy()
    if (this._writable && this._writable.destroy) this._writable.destroy()
  }

  this.emit('close')
}

Duplexify.prototype._write = function(data, enc, cb) {
  if (this.destroyed) return cb()
  if (this._corked) return onuncork(this, this._write.bind(this, data, enc, cb))
  if (data === SIGNAL_FLUSH) return this._finish(cb)
  if (!this._writable) return cb()

  if (this._writable.write(data) === false) this._ondrain = cb
  else cb()
}

Duplexify.prototype._finish = function(cb) {
  var self = this
  this.emit('preend')
  onuncork(this, function() {
    end(self._forwardEnd && self._writable, function() {
      // haxx to not emit prefinish twice
      if (self._writableState.prefinished === false) self._writableState.prefinished = true
      self.emit('prefinish')
      onuncork(self, cb)
    })
  })
}

Duplexify.prototype.end = function(data, enc, cb) {
  if (typeof data === 'function') return this.end(null, null, data)
  if (typeof enc === 'function') return this.end(data, null, enc)
  this._ended = true
  if (data) this.write(data)
  if (!this._writableState.ending) this.write(SIGNAL_FLUSH)
  return stream.Writable.prototype.end.call(this, cb)
}

module.exports = Duplexify

}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":124,"buffer":33,"end-of-stream":38,"inherits":102,"readable-stream":138,"stream-shift":141}],38:[function(require,module,exports){
var once = require('once');

var noop = function() {};

var isRequest = function(stream) {
	return stream.setHeader && typeof stream.abort === 'function';
};

var isChildProcess = function(stream) {
	return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3
};

var eos = function(stream, opts, callback) {
	if (typeof opts === 'function') return eos(stream, null, opts);
	if (!opts) opts = {};

	callback = once(callback || noop);

	var ws = stream._writableState;
	var rs = stream._readableState;
	var readable = opts.readable || (opts.readable !== false && stream.readable);
	var writable = opts.writable || (opts.writable !== false && stream.writable);

	var onlegacyfinish = function() {
		if (!stream.writable) onfinish();
	};

	var onfinish = function() {
		writable = false;
		if (!readable) callback.call(stream);
	};

	var onend = function() {
		readable = false;
		if (!writable) callback.call(stream);
	};

	var onexit = function(exitCode) {
		callback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);
	};

	var onerror = function(err) {
		callback.call(stream, err);
	};

	var onclose = function() {
		if (readable && !(rs && rs.ended)) return callback.call(stream, new Error('premature close'));
		if (writable && !(ws && ws.ended)) return callback.call(stream, new Error('premature close'));
	};

	var onrequest = function() {
		stream.req.on('finish', onfinish);
	};

	if (isRequest(stream)) {
		stream.on('complete', onfinish);
		stream.on('abort', onclose);
		if (stream.req) onrequest();
		else stream.on('request', onrequest);
	} else if (writable && !ws) { // legacy streams
		stream.on('end', onlegacyfinish);
		stream.on('close', onlegacyfinish);
	}

	if (isChildProcess(stream)) stream.on('exit', onexit);

	stream.on('end', onend);
	stream.on('finish', onfinish);
	if (opts.error !== false) stream.on('error', onerror);
	stream.on('close', onclose);

	return function() {
		stream.removeListener('complete', onfinish);
		stream.removeListener('abort', onclose);
		stream.removeListener('request', onrequest);
		if (stream.req) stream.req.removeListener('finish', onfinish);
		stream.removeListener('end', onlegacyfinish);
		stream.removeListener('close', onlegacyfinish);
		stream.removeListener('finish', onfinish);
		stream.removeListener('exit', onexit);
		stream.removeListener('end', onend);
		stream.removeListener('error', onerror);
		stream.removeListener('close', onclose);
	};
};

module.exports = eos;

},{"once":122}],39:[function(require,module,exports){
// Inspired by Google Closure:
// http://closure-library.googlecode.com/svn/docs/
// closure_goog_array_array.js.html#goog.array.clear

"use strict";

var value = require("../../object/valid-value");

module.exports = function () {
	value(this).length = 0;
	return this;
};

},{"../../object/valid-value":75}],40:[function(require,module,exports){
"use strict";

var numberIsNaN       = require("../../number/is-nan")
  , toPosInt          = require("../../number/to-pos-integer")
  , value             = require("../../object/valid-value")
  , indexOf           = Array.prototype.indexOf
  , objHasOwnProperty = Object.prototype.hasOwnProperty
  , abs               = Math.abs
  , floor             = Math.floor;

module.exports = function (searchElement /*, fromIndex*/) {
	var i, length, fromIndex, val;
	if (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);

	length = toPosInt(value(this).length);
	fromIndex = arguments[1];
	if (isNaN(fromIndex)) fromIndex = 0;
	else if (fromIndex >= 0) fromIndex = floor(fromIndex);
	else fromIndex = toPosInt(this.length) - floor(abs(fromIndex));

	for (i = fromIndex; i < length; ++i) {
		if (objHasOwnProperty.call(this, i)) {
			val = this[i];
			if (numberIsNaN(val)) return i; // Jslint: ignore
		}
	}
	return -1;
};

},{"../../number/is-nan":50,"../../number/to-pos-integer":54,"../../object/valid-value":75}],41:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Array.from
	: require("./shim");

},{"./is-implemented":42,"./shim":43}],42:[function(require,module,exports){
"use strict";

module.exports = function () {
	var from = Array.from, arr, result;
	if (typeof from !== "function") return false;
	arr = ["raz", "dwa"];
	result = from(arr);
	return Boolean(result && (result !== arr) && (result[1] === "dwa"));
};

},{}],43:[function(require,module,exports){
"use strict";

var iteratorSymbol = require("es6-symbol").iterator
  , isArguments    = require("../../function/is-arguments")
  , isFunction     = require("../../function/is-function")
  , toPosInt       = require("../../number/to-pos-integer")
  , callable       = require("../../object/valid-callable")
  , validValue     = require("../../object/valid-value")
  , isValue        = require("../../object/is-value")
  , isString       = require("../../string/is-string")
  , isArray        = Array.isArray
  , call           = Function.prototype.call
  , desc           = { configurable: true, enumerable: true, writable: true, value: null }
  , defineProperty = Object.defineProperty;

// eslint-disable-next-line complexity, max-lines-per-function
module.exports = function (arrayLike /*, mapFn, thisArg*/) {
	var mapFn = arguments[1]
	  , thisArg = arguments[2]
	  , Context
	  , i
	  , j
	  , arr
	  , length
	  , code
	  , iterator
	  , result
	  , getIterator
	  , value;

	arrayLike = Object(validValue(arrayLike));

	if (isValue(mapFn)) callable(mapFn);
	if (!this || this === Array || !isFunction(this)) {
		// Result: Plain array
		if (!mapFn) {
			if (isArguments(arrayLike)) {
				// Source: Arguments
				length = arrayLike.length;
				if (length !== 1) return Array.apply(null, arrayLike);
				arr = new Array(1);
				arr[0] = arrayLike[0];
				return arr;
			}
			if (isArray(arrayLike)) {
				// Source: Array
				arr = new Array(length = arrayLike.length);
				for (i = 0; i < length; ++i) arr[i] = arrayLike[i];
				return arr;
			}
		}
		arr = [];
	} else {
		// Result: Non plain array
		Context = this;
	}

	if (!isArray(arrayLike)) {
		if ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {
			// Source: Iterator
			iterator = callable(getIterator).call(arrayLike);
			if (Context) arr = new Context();
			result = iterator.next();
			i = 0;
			while (!result.done) {
				value = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;
				if (Context) {
					desc.value = value;
					defineProperty(arr, i, desc);
				} else {
					arr[i] = value;
				}
				result = iterator.next();
				++i;
			}
			length = i;
		} else if (isString(arrayLike)) {
			// Source: String
			length = arrayLike.length;
			if (Context) arr = new Context();
			for (i = 0, j = 0; i < length; ++i) {
				value = arrayLike[i];
				if (i + 1 < length) {
					code = value.charCodeAt(0);
					// eslint-disable-next-line max-depth
					if (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];
				}
				value = mapFn ? call.call(mapFn, thisArg, value, j) : value;
				if (Context) {
					desc.value = value;
					defineProperty(arr, j, desc);
				} else {
					arr[j] = value;
				}
				++j;
			}
			length = j;
		}
	}
	if (length === undefined) {
		// Source: array or array-like
		length = toPosInt(arrayLike.length);
		if (Context) arr = new Context(length);
		for (i = 0; i < length; ++i) {
			value = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];
			if (Context) {
				desc.value = value;
				defineProperty(arr, i, desc);
			} else {
				arr[i] = value;
			}
		}
	}
	if (Context) {
		desc.value = null;
		arr.length = length;
	}
	return arr;
};

},{"../../function/is-arguments":44,"../../function/is-function":45,"../../number/to-pos-integer":54,"../../object/is-value":64,"../../object/valid-callable":74,"../../object/valid-value":75,"../../string/is-string":79,"es6-symbol":93}],44:[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString
  , id = objToString.call(
	(function () {
		return arguments;
	})()
);

module.exports = function (value) {
	return objToString.call(value) === id;
};

},{}],45:[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString, id = objToString.call(require("./noop"));

module.exports = function (value) {
	return typeof value === "function" && objToString.call(value) === id;
};

},{"./noop":46}],46:[function(require,module,exports){
"use strict";

// eslint-disable-next-line no-empty-function
module.exports = function () {};

},{}],47:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Math.sign
	: require("./shim");

},{"./is-implemented":48,"./shim":49}],48:[function(require,module,exports){
"use strict";

module.exports = function () {
	var sign = Math.sign;
	if (typeof sign !== "function") return false;
	return (sign(10) === 1) && (sign(-20) === -1);
};

},{}],49:[function(require,module,exports){
"use strict";

module.exports = function (value) {
	value = Number(value);
	if (isNaN(value) || (value === 0)) return value;
	return value > 0 ? 1 : -1;
};

},{}],50:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Number.isNaN
	: require("./shim");

},{"./is-implemented":51,"./shim":52}],51:[function(require,module,exports){
"use strict";

module.exports = function () {
	var numberIsNaN = Number.isNaN;
	if (typeof numberIsNaN !== "function") return false;
	return !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);
};

},{}],52:[function(require,module,exports){
"use strict";

module.exports = function (value) {
	// eslint-disable-next-line no-self-compare
	return value !== value;
};

},{}],53:[function(require,module,exports){
"use strict";

var sign = require("../math/sign")

  , abs = Math.abs, floor = Math.floor;

module.exports = function (value) {
	if (isNaN(value)) return 0;
	value = Number(value);
	if ((value === 0) || !isFinite(value)) return value;
	return sign(value) * floor(abs(value));
};

},{"../math/sign":47}],54:[function(require,module,exports){
"use strict";

var toInteger = require("./to-integer")

  , max = Math.max;

module.exports = function (value) {
 return max(0, toInteger(value));
};

},{"./to-integer":53}],55:[function(require,module,exports){
// Internal method, used by iteration functions.
// Calls a function for each key-value pair found in object
// Optionally takes compareFn to iterate object in specific order

"use strict";

var callable                = require("./valid-callable")
  , value                   = require("./valid-value")
  , bind                    = Function.prototype.bind
  , call                    = Function.prototype.call
  , keys                    = Object.keys
  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;

module.exports = function (method, defVal) {
	return function (obj, cb /*, thisArg, compareFn*/) {
		var list, thisArg = arguments[2], compareFn = arguments[3];
		obj = Object(value(obj));
		callable(cb);

		list = keys(obj);
		if (compareFn) {
			list.sort(typeof compareFn === "function" ? bind.call(compareFn, obj) : undefined);
		}
		if (typeof method !== "function") method = list[method];
		return call.call(method, list, function (key, index) {
			if (!objPropertyIsEnumerable.call(obj, key)) return defVal;
			return call.call(cb, thisArg, obj[key], key, obj, index);
		});
	};
};

},{"./valid-callable":74,"./valid-value":75}],56:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Object.assign
	: require("./shim");

},{"./is-implemented":57,"./shim":58}],57:[function(require,module,exports){
"use strict";

module.exports = function () {
	var assign = Object.assign, obj;
	if (typeof assign !== "function") return false;
	obj = { foo: "raz" };
	assign(obj, { bar: "dwa" }, { trzy: "trzy" });
	return (obj.foo + obj.bar + obj.trzy) === "razdwatrzy";
};

},{}],58:[function(require,module,exports){
"use strict";

var keys  = require("../keys")
  , value = require("../valid-value")
  , max   = Math.max;

module.exports = function (dest, src /*, …srcn*/) {
	var error, i, length = max(arguments.length, 2), assign;
	dest = Object(value(dest));
	assign = function (key) {
		try {
			dest[key] = src[key];
		} catch (e) {
			if (!error) error = e;
		}
	};
	for (i = 1; i < length; ++i) {
		src = arguments[i];
		keys(src).forEach(assign);
	}
	if (error !== undefined) throw error;
	return dest;
};

},{"../keys":65,"../valid-value":75}],59:[function(require,module,exports){
"use strict";

var aFrom  = require("../array/from")
  , assign = require("./assign")
  , value  = require("./valid-value");

module.exports = function (obj/*, propertyNames, options*/) {
	var copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);
	if (copy !== obj && !propertyNames) return copy;
	var result = {};
	if (propertyNames) {
		aFrom(propertyNames, function (propertyName) {
			if (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];
		});
	} else {
		assign(result, obj);
	}
	return result;
};

},{"../array/from":41,"./assign":56,"./valid-value":75}],60:[function(require,module,exports){
// Workaround for http://code.google.com/p/v8/issues/detail?id=2804

"use strict";

var create = Object.create, shim;

if (!require("./set-prototype-of/is-implemented")()) {
	shim = require("./set-prototype-of/shim");
}

module.exports = (function () {
	var nullObject, polyProps, desc;
	if (!shim) return create;
	if (shim.level !== 1) return create;

	nullObject = {};
	polyProps = {};
	desc = {
		configurable: false,
		enumerable: false,
		writable: true,
		value: undefined
	};
	Object.getOwnPropertyNames(Object.prototype).forEach(function (name) {
		if (name === "__proto__") {
			polyProps[name] = {
				configurable: true,
				enumerable: false,
				writable: true,
				value: undefined
			};
			return;
		}
		polyProps[name] = desc;
	});
	Object.defineProperties(nullObject, polyProps);

	Object.defineProperty(shim, "nullPolyfill", {
		configurable: false,
		enumerable: false,
		writable: false,
		value: nullObject
	});

	return function (prototype, props) {
		return create(prototype === null ? nullObject : prototype, props);
	};
}());

},{"./set-prototype-of/is-implemented":72,"./set-prototype-of/shim":73}],61:[function(require,module,exports){
"use strict";

module.exports = require("./_iterate")("forEach");

},{"./_iterate":55}],62:[function(require,module,exports){
// Deprecated

"use strict";

module.exports = function (obj) {
 return typeof obj === "function";
};

},{}],63:[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

var map = { function: true, object: true };

module.exports = function (value) {
	return (isValue(value) && map[typeof value]) || false;
};

},{"./is-value":64}],64:[function(require,module,exports){
"use strict";

var _undefined = require("../function/noop")(); // Support ES3 engines

module.exports = function (val) {
 return (val !== _undefined) && (val !== null);
};

},{"../function/noop":46}],65:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")() ? Object.keys : require("./shim");

},{"./is-implemented":66,"./shim":67}],66:[function(require,module,exports){
"use strict";

module.exports = function () {
	try {
		Object.keys("primitive");
		return true;
	} catch (e) {
		return false;
	}
};

},{}],67:[function(require,module,exports){
"use strict";

var isValue = require("../is-value");

var keys = Object.keys;

module.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };

},{"../is-value":64}],68:[function(require,module,exports){
"use strict";

var callable = require("./valid-callable")
  , forEach  = require("./for-each")
  , call     = Function.prototype.call;

module.exports = function (obj, cb /*, thisArg*/) {
	var result = {}, thisArg = arguments[2];
	callable(cb);
	forEach(obj, function (value, key, targetObj, index) {
		result[key] = call.call(cb, thisArg, value, key, targetObj, index);
	});
	return result;
};

},{"./for-each":61,"./valid-callable":74}],69:[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

var forEach = Array.prototype.forEach, create = Object.create;

var process = function (src, obj) {
	var key;
	for (key in src) obj[key] = src[key];
};

// eslint-disable-next-line no-unused-vars
module.exports = function (opts1 /*, …options*/) {
	var result = create(null);
	forEach.call(arguments, function (options) {
		if (!isValue(options)) return;
		process(Object(options), result);
	});
	return result;
};

},{"./is-value":64}],70:[function(require,module,exports){
"use strict";

var forEach = Array.prototype.forEach, create = Object.create;

// eslint-disable-next-line no-unused-vars
module.exports = function (arg /*, …args*/) {
	var set = create(null);
	forEach.call(arguments, function (name) {
		set[name] = true;
	});
	return set;
};

},{}],71:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? Object.setPrototypeOf
	: require("./shim");

},{"./is-implemented":72,"./shim":73}],72:[function(require,module,exports){
"use strict";

var create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};

module.exports = function (/* CustomCreate*/) {
	var setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;
	if (typeof setPrototypeOf !== "function") return false;
	return getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;
};

},{}],73:[function(require,module,exports){
/* eslint no-proto: "off" */

// Big thanks to @WebReflection for sorting this out
// https://gist.github.com/WebReflection/5593554

"use strict";

var isObject        = require("../is-object")
  , value           = require("../valid-value")
  , objIsPrototypeOf = Object.prototype.isPrototypeOf
  , defineProperty  = Object.defineProperty
  , nullDesc        = {
	configurable: true,
	enumerable: false,
	writable: true,
	value: undefined
}
  , validate;

validate = function (obj, prototype) {
	value(obj);
	if (prototype === null || isObject(prototype)) return obj;
	throw new TypeError("Prototype must be null or an object");
};

module.exports = (function (status) {
	var fn, set;
	if (!status) return null;
	if (status.level === 2) {
		if (status.set) {
			set = status.set;
			fn = function (obj, prototype) {
				set.call(validate(obj, prototype), prototype);
				return obj;
			};
		} else {
			fn = function (obj, prototype) {
				validate(obj, prototype).__proto__ = prototype;
				return obj;
			};
		}
	} else {
		fn = function self(obj, prototype) {
			var isNullBase;
			validate(obj, prototype);
			isNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);
			if (isNullBase) delete self.nullPolyfill.__proto__;
			if (prototype === null) prototype = self.nullPolyfill;
			obj.__proto__ = prototype;
			if (isNullBase) defineProperty(self.nullPolyfill, "__proto__", nullDesc);
			return obj;
		};
	}
	return Object.defineProperty(fn, "level", {
		configurable: false,
		enumerable: false,
		writable: false,
		value: status.level
	});
}(
	(function () {
		var tmpObj1 = Object.create(null)
		  , tmpObj2 = {}
		  , set
		  , desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");

		if (desc) {
			try {
				set = desc.set; // Opera crashes at this point
				set.call(tmpObj1, tmpObj2);
			} catch (ignore) {}
			if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };
		}

		tmpObj1.__proto__ = tmpObj2;
		if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };

		tmpObj1 = {};
		tmpObj1.__proto__ = tmpObj2;
		if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };

		return false;
	})()
));

require("../create");

},{"../create":60,"../is-object":63,"../valid-value":75}],74:[function(require,module,exports){
"use strict";

module.exports = function (fn) {
	if (typeof fn !== "function") throw new TypeError(fn + " is not a function");
	return fn;
};

},{}],75:[function(require,module,exports){
"use strict";

var isValue = require("./is-value");

module.exports = function (value) {
	if (!isValue(value)) throw new TypeError("Cannot use null or undefined");
	return value;
};

},{"./is-value":64}],76:[function(require,module,exports){
"use strict";

module.exports = require("./is-implemented")()
	? String.prototype.contains
	: require("./shim");

},{"./is-implemented":77,"./shim":78}],77:[function(require,module,exports){
"use strict";

var str = "razdwatrzy";

module.exports = function () {
	if (typeof str.contains !== "function") return false;
	return (str.contains("dwa") === true) && (str.contains("foo") === false);
};

},{}],78:[function(require,module,exports){
"use strict";

var indexOf = String.prototype.indexOf;

module.exports = function (searchString/*, position*/) {
	return indexOf.call(this, searchString, arguments[1]) > -1;
};

},{}],79:[function(require,module,exports){
"use strict";

var objToString = Object.prototype.toString, id = objToString.call("");

module.exports = function (value) {
	return (
		typeof value === "string" ||
		(value &&
			typeof value === "object" &&
			(value instanceof String || objToString.call(value) === id)) ||
		false
	);
};

},{}],80:[function(require,module,exports){
"use strict";

var setPrototypeOf = require("es5-ext/object/set-prototype-of")
  , contains       = require("es5-ext/string/#/contains")
  , d              = require("d")
  , Symbol         = require("es6-symbol")
  , Iterator       = require("./");

var defineProperty = Object.defineProperty, ArrayIterator;

ArrayIterator = module.exports = function (arr, kind) {
	if (!(this instanceof ArrayIterator)) throw new TypeError("Constructor requires 'new'");
	Iterator.call(this, arr);
	if (!kind) kind = "value";
	else if (contains.call(kind, "key+value")) kind = "key+value";
	else if (contains.call(kind, "key")) kind = "key";
	else kind = "value";
	defineProperty(this, "__kind__", d("", kind));
};
if (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);

// Internal %ArrayIteratorPrototype% doesn't expose its constructor
delete ArrayIterator.prototype.constructor;

ArrayIterator.prototype = Object.create(Iterator.prototype, {
	_resolve: d(function (i) {
		if (this.__kind__ === "value") return this.__list__[i];
		if (this.__kind__ === "key+value") return [i, this.__list__[i]];
		return i;
	})
});
defineProperty(ArrayIterator.prototype, Symbol.toStringTag, d("c", "Array Iterator"));

},{"./":83,"d":36,"es5-ext/object/set-prototype-of":71,"es5-ext/string/#/contains":76,"es6-symbol":93}],81:[function(require,module,exports){
"use strict";

var isArguments = require("es5-ext/function/is-arguments")
  , callable    = require("es5-ext/object/valid-callable")
  , isString    = require("es5-ext/string/is-string")
  , get         = require("./get");

var isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;

module.exports = function (iterable, cb /*, thisArg*/) {
	var mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;
	if (isArray(iterable) || isArguments(iterable)) mode = "array";
	else if (isString(iterable)) mode = "string";
	else iterable = get(iterable);

	callable(cb);
	doBreak = function () {
		broken = true;
	};
	if (mode === "array") {
		some.call(iterable, function (value) {
			call.call(cb, thisArg, value, doBreak);
			return broken;
		});
		return;
	}
	if (mode === "string") {
		length = iterable.length;
		for (i = 0; i < length; ++i) {
			char = iterable[i];
			if (i + 1 < length) {
				code = char.charCodeAt(0);
				if (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];
			}
			call.call(cb, thisArg, char, doBreak);
			if (broken) break;
		}
		return;
	}
	result = iterable.next();

	while (!result.done) {
		call.call(cb, thisArg, result.value, doBreak);
		if (broken) return;
		result = iterable.next();
	}
};

},{"./get":82,"es5-ext/function/is-arguments":44,"es5-ext/object/valid-callable":74,"es5-ext/string/is-string":79}],82:[function(require,module,exports){
"use strict";

var isArguments    = require("es5-ext/function/is-arguments")
  , isString       = require("es5-ext/string/is-string")
  , ArrayIterator  = require("./array")
  , StringIterator = require("./string")
  , iterable       = require("./valid-iterable")
  , iteratorSymbol = require("es6-symbol").iterator;

module.exports = function (obj) {
	if (typeof iterable(obj)[iteratorSymbol] === "function") return obj[iteratorSymbol]();
	if (isArguments(obj)) return new ArrayIterator(obj);
	if (isString(obj)) return new StringIterator(obj);
	return new ArrayIterator(obj);
};

},{"./array":80,"./string":85,"./valid-iterable":86,"es5-ext/function/is-arguments":44,"es5-ext/string/is-string":79,"es6-symbol":93}],83:[function(require,module,exports){
"use strict";

var clear    = require("es5-ext/array/#/clear")
  , assign   = require("es5-ext/object/assign")
  , callable = require("es5-ext/object/valid-callable")
  , value    = require("es5-ext/object/valid-value")
  , d        = require("d")
  , autoBind = require("d/auto-bind")
  , Symbol   = require("es6-symbol");

var defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;

module.exports = Iterator = function (list, context) {
	if (!(this instanceof Iterator)) throw new TypeError("Constructor requires 'new'");
	defineProperties(this, {
		__list__: d("w", value(list)),
		__context__: d("w", context),
		__nextIndex__: d("w", 0)
	});
	if (!context) return;
	callable(context.on);
	context.on("_add", this._onAdd);
	context.on("_delete", this._onDelete);
	context.on("_clear", this._onClear);
};

// Internal %IteratorPrototype% doesn't expose its constructor
delete Iterator.prototype.constructor;

defineProperties(
	Iterator.prototype,
	assign(
		{
			_next: d(function () {
				var i;
				if (!this.__list__) return undefined;
				if (this.__redo__) {
					i = this.__redo__.shift();
					if (i !== undefined) return i;
				}
				if (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;
				this._unBind();
				return undefined;
			}),
			next: d(function () {
				return this._createResult(this._next());
			}),
			_createResult: d(function (i) {
				if (i === undefined) return { done: true, value: undefined };
				return { done: false, value: this._resolve(i) };
			}),
			_resolve: d(function (i) {
				return this.__list__[i];
			}),
			_unBind: d(function () {
				this.__list__ = null;
				delete this.__redo__;
				if (!this.__context__) return;
				this.__context__.off("_add", this._onAdd);
				this.__context__.off("_delete", this._onDelete);
				this.__context__.off("_clear", this._onClear);
				this.__context__ = null;
			}),
			toString: d(function () {
				return "[object " + (this[Symbol.toStringTag] || "Object") + "]";
			})
		},
		autoBind({
			_onAdd: d(function (index) {
				if (index >= this.__nextIndex__) return;
				++this.__nextIndex__;
				if (!this.__redo__) {
					defineProperty(this, "__redo__", d("c", [index]));
					return;
				}
				this.__redo__.forEach(function (redo, i) {
					if (redo >= index) this.__redo__[i] = ++redo;
				}, this);
				this.__redo__.push(index);
			}),
			_onDelete: d(function (index) {
				var i;
				if (index >= this.__nextIndex__) return;
				--this.__nextIndex__;
				if (!this.__redo__) return;
				i = this.__redo__.indexOf(index);
				if (i !== -1) this.__redo__.splice(i, 1);
				this.__redo__.forEach(function (redo, j) {
					if (redo > index) this.__redo__[j] = --redo;
				}, this);
			}),
			_onClear: d(function () {
				if (this.__redo__) clear.call(this.__redo__);
				this.__nextIndex__ = 0;
			})
		})
	)
);

defineProperty(
	Iterator.prototype,
	Symbol.iterator,
	d(function () {
		return this;
	})
);

},{"d":36,"d/auto-bind":35,"es5-ext/array/#/clear":39,"es5-ext/object/assign":56,"es5-ext/object/valid-callable":74,"es5-ext/object/valid-value":75,"es6-symbol":93}],84:[function(require,module,exports){
"use strict";

var isArguments = require("es5-ext/function/is-arguments")
  , isValue     = require("es5-ext/object/is-value")
  , isString    = require("es5-ext/string/is-string");

var iteratorSymbol = require("es6-symbol").iterator
  , isArray        = Array.isArray;

module.exports = function (value) {
	if (!isValue(value)) return false;
	if (isArray(value)) return true;
	if (isString(value)) return true;
	if (isArguments(value)) return true;
	return typeof value[iteratorSymbol] === "function";
};

},{"es5-ext/function/is-arguments":44,"es5-ext/object/is-value":64,"es5-ext/string/is-string":79,"es6-symbol":93}],85:[function(require,module,exports){
// Thanks @mathiasbynens
// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols

"use strict";

var setPrototypeOf = require("es5-ext/object/set-prototype-of")
  , d              = require("d")
  , Symbol         = require("es6-symbol")
  , Iterator       = require("./");

var defineProperty = Object.defineProperty, StringIterator;

StringIterator = module.exports = function (str) {
	if (!(this instanceof StringIterator)) throw new TypeError("Constructor requires 'new'");
	str = String(str);
	Iterator.call(this, str);
	defineProperty(this, "__length__", d("", str.length));
};
if (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);

// Internal %ArrayIteratorPrototype% doesn't expose its constructor
delete StringIterator.prototype.constructor;

StringIterator.prototype = Object.create(Iterator.prototype, {
	_next: d(function () {
		if (!this.__list__) return undefined;
		if (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;
		this._unBind();
		return undefined;
	}),
	_resolve: d(function (i) {
		var char = this.__list__[i], code;
		if (this.__nextIndex__ === this.__length__) return char;
		code = char.charCodeAt(0);
		if (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];
		return char;
	})
});
defineProperty(StringIterator.prototype, Symbol.toStringTag, d("c", "String Iterator"));

},{"./":83,"d":36,"es5-ext/object/set-prototype-of":71,"es6-symbol":93}],86:[function(require,module,exports){
"use strict";

var isIterable = require("./is-iterable");

module.exports = function (value) {
	if (!isIterable(value)) throw new TypeError(value + " is not iterable");
	return value;
};

},{"./is-iterable":84}],87:[function(require,module,exports){
'use strict';

module.exports = require('./is-implemented')() ? Map : require('./polyfill');

},{"./is-implemented":88,"./polyfill":92}],88:[function(require,module,exports){
'use strict';

module.exports = function () {
	var map, iterator, result;
	if (typeof Map !== 'function') return false;
	try {
		// WebKit doesn't support arguments and crashes
		map = new Map([['raz', 'one'], ['dwa', 'two'], ['trzy', 'three']]);
	} catch (e) {
		return false;
	}
	if (String(map) !== '[object Map]') return false;
	if (map.size !== 3) return false;
	if (typeof map.clear !== 'function') return false;
	if (typeof map.delete !== 'function') return false;
	if (typeof map.entries !== 'function') return false;
	if (typeof map.forEach !== 'function') return false;
	if (typeof map.get !== 'function') return false;
	if (typeof map.has !== 'function') return false;
	if (typeof map.keys !== 'function') return false;
	if (typeof map.set !== 'function') return false;
	if (typeof map.values !== 'function') return false;

	iterator = map.entries();
	result = iterator.next();
	if (result.done !== false) return false;
	if (!result.value) return false;
	if (result.value[0] !== 'raz') return false;
	if (result.value[1] !== 'one') return false;

	return true;
};

},{}],89:[function(require,module,exports){
// Exports true if environment provides native `Map` implementation,
// whatever that is.

'use strict';

module.exports = (function () {
	if (typeof Map === 'undefined') return false;
	return (Object.prototype.toString.call(new Map()) === '[object Map]');
}());

},{}],90:[function(require,module,exports){
'use strict';

module.exports = require('es5-ext/object/primitive-set')('key',
	'value', 'key+value');

},{"es5-ext/object/primitive-set":70}],91:[function(require,module,exports){
'use strict';

var setPrototypeOf    = require('es5-ext/object/set-prototype-of')
  , d                 = require('d')
  , Iterator          = require('es6-iterator')
  , toStringTagSymbol = require('es6-symbol').toStringTag
  , kinds             = require('./iterator-kinds')

  , defineProperties = Object.defineProperties
  , unBind = Iterator.prototype._unBind
  , MapIterator;

MapIterator = module.exports = function (map, kind) {
	if (!(this instanceof MapIterator)) return new MapIterator(map, kind);
	Iterator.call(this, map.__mapKeysData__, map);
	if (!kind || !kinds[kind]) kind = 'key+value';
	defineProperties(this, {
		__kind__: d('', kind),
		__values__: d('w', map.__mapValuesData__)
	});
};
if (setPrototypeOf) setPrototypeOf(MapIterator, Iterator);

MapIterator.prototype = Object.create(Iterator.prototype, {
	constructor: d(MapIterator),
	_resolve: d(function (i) {
		if (this.__kind__ === 'value') return this.__values__[i];
		if (this.__kind__ === 'key') return this.__list__[i];
		return [this.__list__[i], this.__values__[i]];
	}),
	_unBind: d(function () {
		this.__values__ = null;
		unBind.call(this);
	}),
	toString: d(function () { return '[object Map Iterator]'; })
});
Object.defineProperty(MapIterator.prototype, toStringTagSymbol,
	d('c', 'Map Iterator'));

},{"./iterator-kinds":90,"d":36,"es5-ext/object/set-prototype-of":71,"es6-iterator":83,"es6-symbol":93}],92:[function(require,module,exports){
'use strict';

var clear          = require('es5-ext/array/#/clear')
  , eIndexOf       = require('es5-ext/array/#/e-index-of')
  , setPrototypeOf = require('es5-ext/object/set-prototype-of')
  , callable       = require('es5-ext/object/valid-callable')
  , validValue     = require('es5-ext/object/valid-value')
  , d              = require('d')
  , ee             = require('event-emitter')
  , Symbol         = require('es6-symbol')
  , iterator       = require('es6-iterator/valid-iterable')
  , forOf          = require('es6-iterator/for-of')
  , Iterator       = require('./lib/iterator')
  , isNative       = require('./is-native-implemented')

  , call = Function.prototype.call
  , defineProperties = Object.defineProperties, getPrototypeOf = Object.getPrototypeOf
  , MapPoly;

module.exports = MapPoly = function (/*iterable*/) {
	var iterable = arguments[0], keys, values, self;
	if (!(this instanceof MapPoly)) throw new TypeError('Constructor requires \'new\'');
	if (isNative && setPrototypeOf && (Map !== MapPoly)) {
		self = setPrototypeOf(new Map(), getPrototypeOf(this));
	} else {
		self = this;
	}
	if (iterable != null) iterator(iterable);
	defineProperties(self, {
		__mapKeysData__: d('c', keys = []),
		__mapValuesData__: d('c', values = [])
	});
	if (!iterable) return self;
	forOf(iterable, function (value) {
		var key = validValue(value)[0];
		value = value[1];
		if (eIndexOf.call(keys, key) !== -1) return;
		keys.push(key);
		values.push(value);
	}, self);
	return self;
};

if (isNative) {
	if (setPrototypeOf) setPrototypeOf(MapPoly, Map);
	MapPoly.prototype = Object.create(Map.prototype, {
		constructor: d(MapPoly)
	});
}

ee(defineProperties(MapPoly.prototype, {
	clear: d(function () {
		if (!this.__mapKeysData__.length) return;
		clear.call(this.__mapKeysData__);
		clear.call(this.__mapValuesData__);
		this.emit('_clear');
	}),
	delete: d(function (key) {
		var index = eIndexOf.call(this.__mapKeysData__, key);
		if (index === -1) return false;
		this.__mapKeysData__.splice(index, 1);
		this.__mapValuesData__.splice(index, 1);
		this.emit('_delete', index, key);
		return true;
	}),
	entries: d(function () { return new Iterator(this, 'key+value'); }),
	forEach: d(function (cb/*, thisArg*/) {
		var thisArg = arguments[1], iterator, result;
		callable(cb);
		iterator = this.entries();
		result = iterator._next();
		while (result !== undefined) {
			call.call(cb, thisArg, this.__mapValuesData__[result],
				this.__mapKeysData__[result], this);
			result = iterator._next();
		}
	}),
	get: d(function (key) {
		var index = eIndexOf.call(this.__mapKeysData__, key);
		if (index === -1) return;
		return this.__mapValuesData__[index];
	}),
	has: d(function (key) {
		return (eIndexOf.call(this.__mapKeysData__, key) !== -1);
	}),
	keys: d(function () { return new Iterator(this, 'key'); }),
	set: d(function (key, value) {
		var index = eIndexOf.call(this.__mapKeysData__, key), emit;
		if (index === -1) {
			index = this.__mapKeysData__.push(key) - 1;
			emit = true;
		}
		this.__mapValuesData__[index] = value;
		if (emit) this.emit('_add', index, key);
		return this;
	}),
	size: d.gs(function () { return this.__mapKeysData__.length; }),
	values: d(function () { return new Iterator(this, 'value'); }),
	toString: d(function () { return '[object Map]'; })
}));
Object.defineProperty(MapPoly.prototype, Symbol.iterator, d(function () {
	return this.entries();
}));
Object.defineProperty(MapPoly.prototype, Symbol.toStringTag, d('c', 'Map'));

},{"./is-native-implemented":89,"./lib/iterator":91,"d":36,"es5-ext/array/#/clear":39,"es5-ext/array/#/e-index-of":40,"es5-ext/object/set-prototype-of":71,"es5-ext/object/valid-callable":74,"es5-ext/object/valid-value":75,"es6-iterator/for-of":81,"es6-iterator/valid-iterable":86,"es6-symbol":93,"event-emitter":98}],93:[function(require,module,exports){
'use strict';

module.exports = require('./is-implemented')() ? Symbol : require('./polyfill');

},{"./is-implemented":94,"./polyfill":96}],94:[function(require,module,exports){
'use strict';

var validTypes = { object: true, symbol: true };

module.exports = function () {
	var symbol;
	if (typeof Symbol !== 'function') return false;
	symbol = Symbol('test symbol');
	try { String(symbol); } catch (e) { return false; }

	// Return 'true' also for polyfills
	if (!validTypes[typeof Symbol.iterator]) return false;
	if (!validTypes[typeof Symbol.toPrimitive]) return false;
	if (!validTypes[typeof Symbol.toStringTag]) return false;

	return true;
};

},{}],95:[function(require,module,exports){
'use strict';

module.exports = function (x) {
	if (!x) return false;
	if (typeof x === 'symbol') return true;
	if (!x.constructor) return false;
	if (x.constructor.name !== 'Symbol') return false;
	return (x[x.constructor.toStringTag] === 'Symbol');
};

},{}],96:[function(require,module,exports){
// ES2015 Symbol polyfill for environments that do not (or partially) support it

'use strict';

var d              = require('d')
  , validateSymbol = require('./validate-symbol')

  , create = Object.create, defineProperties = Object.defineProperties
  , defineProperty = Object.defineProperty, objPrototype = Object.prototype
  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)
  , isNativeSafe;

if (typeof Symbol === 'function') {
	NativeSymbol = Symbol;
	try {
		String(NativeSymbol());
		isNativeSafe = true;
	} catch (ignore) {}
}

var generateName = (function () {
	var created = create(null);
	return function (desc) {
		var postfix = 0, name, ie11BugWorkaround;
		while (created[desc + (postfix || '')]) ++postfix;
		desc += (postfix || '');
		created[desc] = true;
		name = '@@' + desc;
		defineProperty(objPrototype, name, d.gs(null, function (value) {
			// For IE11 issue see:
			// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/
			//    ie11-broken-getters-on-dom-objects
			// https://github.com/medikoo/es6-symbol/issues/12
			if (ie11BugWorkaround) return;
			ie11BugWorkaround = true;
			defineProperty(this, name, d(value));
			ie11BugWorkaround = false;
		}));
		return name;
	};
}());

// Internal constructor (not one exposed) for creating Symbol instances.
// This one is used to ensure that `someSymbol instanceof Symbol` always return false
HiddenSymbol = function Symbol(description) {
	if (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');
	return SymbolPolyfill(description);
};

// Exposed `Symbol` constructor
// (returns instances of HiddenSymbol)
module.exports = SymbolPolyfill = function Symbol(description) {
	var symbol;
	if (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');
	if (isNativeSafe) return NativeSymbol(description);
	symbol = create(HiddenSymbol.prototype);
	description = (description === undefined ? '' : String(description));
	return defineProperties(symbol, {
		__description__: d('', description),
		__name__: d('', generateName(description))
	});
};
defineProperties(SymbolPolyfill, {
	for: d(function (key) {
		if (globalSymbols[key]) return globalSymbols[key];
		return (globalSymbols[key] = SymbolPolyfill(String(key)));
	}),
	keyFor: d(function (s) {
		var key;
		validateSymbol(s);
		for (key in globalSymbols) if (globalSymbols[key] === s) return key;
	}),

	// To ensure proper interoperability with other native functions (e.g. Array.from)
	// fallback to eventual native implementation of given symbol
	hasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),
	isConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||
		SymbolPolyfill('isConcatSpreadable')),
	iterator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),
	match: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),
	replace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),
	search: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),
	species: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),
	split: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),
	toPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),
	toStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),
	unscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))
});

// Internal tweaks for real symbol producer
defineProperties(HiddenSymbol.prototype, {
	constructor: d(SymbolPolyfill),
	toString: d('', function () { return this.__name__; })
});

// Proper implementation of methods exposed on Symbol.prototype
// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
defineProperties(SymbolPolyfill.prototype, {
	toString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),
	valueOf: d(function () { return validateSymbol(this); })
});
defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {
	var symbol = validateSymbol(this);
	if (typeof symbol === 'symbol') return symbol;
	return symbol.toString();
}));
defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));

// Proper implementaton of toPrimitive and toStringTag for returned symbol instances
defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,
	d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));

// Note: It's important to define `toPrimitive` as last one, as some implementations
// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)
// And that may invoke error in definition flow:
// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149
defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,
	d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));

},{"./validate-symbol":97,"d":36}],97:[function(require,module,exports){
'use strict';

var isSymbol = require('./is-symbol');

module.exports = function (value) {
	if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
	return value;
};

},{"./is-symbol":95}],98:[function(require,module,exports){
'use strict';

var d        = require('d')
  , callable = require('es5-ext/object/valid-callable')

  , apply = Function.prototype.apply, call = Function.prototype.call
  , create = Object.create, defineProperty = Object.defineProperty
  , defineProperties = Object.defineProperties
  , hasOwnProperty = Object.prototype.hasOwnProperty
  , descriptor = { configurable: true, enumerable: false, writable: true }

  , on, once, off, emit, methods, descriptors, base;

on = function (type, listener) {
	var data;

	callable(listener);

	if (!hasOwnProperty.call(this, '__ee__')) {
		data = descriptor.value = create(null);
		defineProperty(this, '__ee__', descriptor);
		descriptor.value = null;
	} else {
		data = this.__ee__;
	}
	if (!data[type]) data[type] = listener;
	else if (typeof data[type] === 'object') data[type].push(listener);
	else data[type] = [data[type], listener];

	return this;
};

once = function (type, listener) {
	var once, self;

	callable(listener);
	self = this;
	on.call(this, type, once = function () {
		off.call(self, type, once);
		apply.call(listener, this, arguments);
	});

	once.__eeOnceListener__ = listener;
	return this;
};

off = function (type, listener) {
	var data, listeners, candidate, i;

	callable(listener);

	if (!hasOwnProperty.call(this, '__ee__')) return this;
	data = this.__ee__;
	if (!data[type]) return this;
	listeners = data[type];

	if (typeof listeners === 'object') {
		for (i = 0; (candidate = listeners[i]); ++i) {
			if ((candidate === listener) ||
					(candidate.__eeOnceListener__ === listener)) {
				if (listeners.length === 2) data[type] = listeners[i ? 0 : 1];
				else listeners.splice(i, 1);
			}
		}
	} else {
		if ((listeners === listener) ||
				(listeners.__eeOnceListener__ === listener)) {
			delete data[type];
		}
	}

	return this;
};

emit = function (type) {
	var i, l, listener, listeners, args;

	if (!hasOwnProperty.call(this, '__ee__')) return;
	listeners = this.__ee__[type];
	if (!listeners) return;

	if (typeof listeners === 'object') {
		l = arguments.length;
		args = new Array(l - 1);
		for (i = 1; i < l; ++i) args[i - 1] = arguments[i];

		listeners = listeners.slice();
		for (i = 0; (listener = listeners[i]); ++i) {
			apply.call(listener, this, args);
		}
	} else {
		switch (arguments.length) {
		case 1:
			call.call(listeners, this);
			break;
		case 2:
			call.call(listeners, this, arguments[1]);
			break;
		case 3:
			call.call(listeners, this, arguments[1], arguments[2]);
			break;
		default:
			l = arguments.length;
			args = new Array(l - 1);
			for (i = 1; i < l; ++i) {
				args[i - 1] = arguments[i];
			}
			apply.call(listeners, this, args);
		}
	}
};

methods = {
	on: on,
	once: once,
	off: off,
	emit: emit
};

descriptors = {
	on: d(on),
	once: d(once),
	off: d(off),
	emit: d(emit)
};

base = defineProperties({}, descriptors);

module.exports = exports = function (o) {
	return (o == null) ? create(base) : defineProperties(Object(o), descriptors);
};
exports.methods = methods;

},{"d":36,"es5-ext/object/valid-callable":74}],99:[function(require,module,exports){
/* eslint-env browser */
module.exports = typeof self == 'object' ? self.FormData : window.FormData;

},{}],100:[function(require,module,exports){
//
// format - printf-like string formatting for JavaScript
// github.com/samsonjs/format
// @_sjs
//
// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>
//
// MIT License
// http://sjs.mit-license.org
//

;(function() {

  //// Export the API
  var namespace;

  // CommonJS / Node module
  if (typeof module !== 'undefined') {
    namespace = module.exports = format;
  }

  // Browsers and other environments
  else {
    // Get the global object. Works in ES3, ES5, and ES5 strict mode.
    namespace = (function(){ return this || (1,eval)('this') }());
  }

  namespace.format = format;
  namespace.vsprintf = vsprintf;

  if (typeof console !== 'undefined' && typeof console.log === 'function') {
    namespace.printf = printf;
  }

  function printf(/* ... */) {
    console.log(format.apply(null, arguments));
  }

  function vsprintf(fmt, replacements) {
    return format.apply(null, [fmt].concat(replacements));
  }

  function format(fmt) {
    var argIndex = 1 // skip initial format argument
      , args = [].slice.call(arguments)
      , i = 0
      , n = fmt.length
      , result = ''
      , c
      , escaped = false
      , arg
      , tmp
      , leadingZero = false
      , precision
      , nextArg = function() { return args[argIndex++]; }
      , slurpNumber = function() {
          var digits = '';
          while (/\d/.test(fmt[i])) {
            digits += fmt[i++];
            c = fmt[i];
          }
          return digits.length > 0 ? parseInt(digits) : null;
        }
      ;
    for (; i < n; ++i) {
      c = fmt[i];
      if (escaped) {
        escaped = false;
        if (c == '.') {
          leadingZero = false;
          c = fmt[++i];
        }
        else if (c == '0' && fmt[i + 1] == '.') {
          leadingZero = true;
          i += 2;
          c = fmt[i];
        }
        else {
          leadingZero = true;
        }
        precision = slurpNumber();
        switch (c) {
        case 'b': // number in binary
          result += parseInt(nextArg(), 10).toString(2);
          break;
        case 'c': // character
          arg = nextArg();
          if (typeof arg === 'string' || arg instanceof String)
            result += arg;
          else
            result += String.fromCharCode(parseInt(arg, 10));
          break;
        case 'd': // number in decimal
          result += parseInt(nextArg(), 10);
          break;
        case 'f': // floating point number
          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));
          result += leadingZero ? tmp : tmp.replace(/^0/, '');
          break;
        case 'j': // JSON
          result += JSON.stringify(nextArg());
          break;
        case 'o': // number in octal
          result += '0' + parseInt(nextArg(), 10).toString(8);
          break;
        case 's': // string
          result += nextArg();
          break;
        case 'x': // lowercase hexadecimal
          result += '0x' + parseInt(nextArg(), 10).toString(16);
          break;
        case 'X': // uppercase hexadecimal
          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();
          break;
        default:
          result += c;
          break;
        }
      } else if (c === '%') {
        escaped = true;
      } else {
        result += c;
      }
    }
    return result;
  }

}());

},{}],101:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],102:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],103:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],104:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],105:[function(require,module,exports){
/*
* loglevel - https://github.com/pimterry/loglevel
*
* Copyright (c) 2013 Tim Perry
* Licensed under the MIT license.
*/
(function (root, definition) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define(definition);
    } else if (typeof module === 'object' && module.exports) {
        module.exports = definition();
    } else {
        root.log = definition();
    }
}(this, function () {
    "use strict";

    // Slightly dubious tricks to cut down minimized file size
    var noop = function() {};
    var undefinedType = "undefined";

    var logMethods = [
        "trace",
        "debug",
        "info",
        "warn",
        "error"
    ];

    // Cross-browser bind equivalent that works at least back to IE6
    function bindMethod(obj, methodName) {
        var method = obj[methodName];
        if (typeof method.bind === 'function') {
            return method.bind(obj);
        } else {
            try {
                return Function.prototype.bind.call(method, obj);
            } catch (e) {
                // Missing bind shim or IE8 + Modernizr, fallback to wrapping
                return function() {
                    return Function.prototype.apply.apply(method, [obj, arguments]);
                };
            }
        }
    }

    // Build the best logging method possible for this env
    // Wherever possible we want to bind, not wrap, to preserve stack traces
    function realMethod(methodName) {
        if (methodName === 'debug') {
            methodName = 'log';
        }

        if (typeof console === undefinedType) {
            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives
        } else if (console[methodName] !== undefined) {
            return bindMethod(console, methodName);
        } else if (console.log !== undefined) {
            return bindMethod(console, 'log');
        } else {
            return noop;
        }
    }

    // These private functions always need `this` to be set properly

    function replaceLoggingMethods(level, loggerName) {
        /*jshint validthis:true */
        for (var i = 0; i < logMethods.length; i++) {
            var methodName = logMethods[i];
            this[methodName] = (i < level) ?
                noop :
                this.methodFactory(methodName, level, loggerName);
        }

        // Define log.log as an alias for log.debug
        this.log = this.debug;
    }

    // In old IE versions, the console isn't present until you first open it.
    // We build realMethod() replacements here that regenerate logging methods
    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {
        return function () {
            if (typeof console !== undefinedType) {
                replaceLoggingMethods.call(this, level, loggerName);
                this[methodName].apply(this, arguments);
            }
        };
    }

    // By default, we use closely bound real methods wherever possible, and
    // otherwise we wait for a console to appear, and then try again.
    function defaultMethodFactory(methodName, level, loggerName) {
        /*jshint validthis:true */
        return realMethod(methodName) ||
               enableLoggingWhenConsoleArrives.apply(this, arguments);
    }

    function Logger(name, defaultLevel, factory) {
      var self = this;
      var currentLevel;
      var storageKey = "loglevel";
      if (name) {
        storageKey += ":" + name;
      }

      function persistLevelIfPossible(levelNum) {
          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();

          if (typeof window === undefinedType) return;

          // Use localStorage if available
          try {
              window.localStorage[storageKey] = levelName;
              return;
          } catch (ignore) {}

          // Use session cookie as fallback
          try {
              window.document.cookie =
                encodeURIComponent(storageKey) + "=" + levelName + ";";
          } catch (ignore) {}
      }

      function getPersistedLevel() {
          var storedLevel;

          if (typeof window === undefinedType) return;

          try {
              storedLevel = window.localStorage[storageKey];
          } catch (ignore) {}

          // Fallback to cookies if local storage gives us nothing
          if (typeof storedLevel === undefinedType) {
              try {
                  var cookie = window.document.cookie;
                  var location = cookie.indexOf(
                      encodeURIComponent(storageKey) + "=");
                  if (location !== -1) {
                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];
                  }
              } catch (ignore) {}
          }

          // If the stored level is not valid, treat it as if nothing was stored.
          if (self.levels[storedLevel] === undefined) {
              storedLevel = undefined;
          }

          return storedLevel;
      }

      /*
       *
       * Public logger API - see https://github.com/pimterry/loglevel for details
       *
       */

      self.name = name;

      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,
          "ERROR": 4, "SILENT": 5};

      self.methodFactory = factory || defaultMethodFactory;

      self.getLevel = function () {
          return currentLevel;
      };

      self.setLevel = function (level, persist) {
          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {
              level = self.levels[level.toUpperCase()];
          }
          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {
              currentLevel = level;
              if (persist !== false) {  // defaults to true
                  persistLevelIfPossible(level);
              }
              replaceLoggingMethods.call(self, level, name);
              if (typeof console === undefinedType && level < self.levels.SILENT) {
                  return "No console available for logging";
              }
          } else {
              throw "log.setLevel() called with invalid level: " + level;
          }
      };

      self.setDefaultLevel = function (level) {
          if (!getPersistedLevel()) {
              self.setLevel(level, false);
          }
      };

      self.enableAll = function(persist) {
          self.setLevel(self.levels.TRACE, persist);
      };

      self.disableAll = function(persist) {
          self.setLevel(self.levels.SILENT, persist);
      };

      // Initialize with the right level
      var initialLevel = getPersistedLevel();
      if (initialLevel == null) {
          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;
      }
      self.setLevel(initialLevel, false);
    }

    /*
     *
     * Top-level API
     *
     */

    var defaultLogger = new Logger();

    var _loggersByName = {};
    defaultLogger.getLogger = function getLogger(name) {
        if (typeof name !== "string" || name === "") {
          throw new TypeError("You must supply a name when creating a logger.");
        }

        var logger = _loggersByName[name];
        if (!logger) {
          logger = _loggersByName[name] = new Logger(
            name, defaultLogger.getLevel(), defaultLogger.methodFactory);
        }
        return logger;
    };

    // Grab the current global log variable in case of overwrite
    var _log = (typeof window !== undefinedType) ? window.log : undefined;
    defaultLogger.noConflict = function() {
        if (typeof window !== undefinedType &&
               window.log === defaultLogger) {
            window.log = _log;
        }

        return defaultLogger;
    };

    defaultLogger.getLoggers = function getLoggers() {
        return _loggersByName;
    };

    return defaultLogger;
}));

},{}],106:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments)
},{"dup":105}],107:[function(require,module,exports){
'use strict'

var Buffer = require('safe-buffer').Buffer

/* Protocol - protocol constants */
var protocol = module.exports

/* Command code => mnemonic */
protocol.types = {
  0: 'reserved',
  1: 'connect',
  2: 'connack',
  3: 'publish',
  4: 'puback',
  5: 'pubrec',
  6: 'pubrel',
  7: 'pubcomp',
  8: 'subscribe',
  9: 'suback',
  10: 'unsubscribe',
  11: 'unsuback',
  12: 'pingreq',
  13: 'pingresp',
  14: 'disconnect',
  15: 'reserved'
}

/* Mnemonic => Command code */
protocol.codes = {}
for (var k in protocol.types) {
  var v = protocol.types[k]
  protocol.codes[v] = k
}

/* Header */
protocol.CMD_SHIFT = 4
protocol.CMD_MASK = 0xF0
protocol.DUP_MASK = 0x08
protocol.QOS_MASK = 0x03
protocol.QOS_SHIFT = 1
protocol.RETAIN_MASK = 0x01

/* Length */
protocol.LENGTH_MASK = 0x7F
protocol.LENGTH_FIN_MASK = 0x80

/* Connack */
protocol.SESSIONPRESENT_MASK = 0x01
protocol.SESSIONPRESENT_HEADER = Buffer.from([protocol.SESSIONPRESENT_MASK])
protocol.CONNACK_HEADER = Buffer.from([protocol.codes['connack'] << protocol.CMD_SHIFT])

/* Connect */
protocol.USERNAME_MASK = 0x80
protocol.PASSWORD_MASK = 0x40
protocol.WILL_RETAIN_MASK = 0x20
protocol.WILL_QOS_MASK = 0x18
protocol.WILL_QOS_SHIFT = 3
protocol.WILL_FLAG_MASK = 0x04
protocol.CLEAN_SESSION_MASK = 0x02
protocol.CONNECT_HEADER = Buffer.from([protocol.codes['connect'] << protocol.CMD_SHIFT])

function genHeader (type) {
  return [0, 1, 2].map(function (qos) {
    return [0, 1].map(function (dup) {
      return [0, 1].map(function (retain) {
        var buf = new Buffer(1)
        buf.writeUInt8(
          protocol.codes[type] << protocol.CMD_SHIFT |
          (dup ? protocol.DUP_MASK : 0) |
          qos << protocol.QOS_SHIFT | retain, 0, true)
        return buf
      })
    })
  })
}

/* Publish */
protocol.PUBLISH_HEADER = genHeader('publish')

/* Subscribe */
protocol.SUBSCRIBE_HEADER = genHeader('subscribe')

/* Unsubscribe */
protocol.UNSUBSCRIBE_HEADER = genHeader('unsubscribe')

/* Confirmations */
protocol.ACKS = {
  unsuback: genHeader('unsuback'),
  puback: genHeader('puback'),
  pubcomp: genHeader('pubcomp'),
  pubrel: genHeader('pubrel'),
  pubrec: genHeader('pubrec')
}

protocol.SUBACK_HEADER = Buffer.from([protocol.codes['suback'] << protocol.CMD_SHIFT])

/* Protocol versions */
protocol.VERSION3 = Buffer.from([3])
protocol.VERSION4 = Buffer.from([4])

/* QoS */
protocol.QOS = [0, 1, 2].map(function (qos) {
  return Buffer.from([qos])
})

/* Empty packets */
protocol.EMPTY = {
  pingreq: Buffer.from([protocol.codes['pingreq'] << 4, 0]),
  pingresp: Buffer.from([protocol.codes['pingresp'] << 4, 0]),
  disconnect: Buffer.from([protocol.codes['disconnect'] << 4, 0])
}

},{"safe-buffer":140}],108:[function(require,module,exports){
'use strict'

var Buffer = require('safe-buffer').Buffer
var writeToStream = require('./writeToStream')
var EE = require('events').EventEmitter
var inherits = require('inherits')

function generate (packet) {
  var stream = new Accumulator()
  writeToStream(packet, stream)
  return stream.concat()
}

function Accumulator () {
  this._array = new Array(20)
  this._i = 0
}

inherits(Accumulator, EE)

Accumulator.prototype.write = function (chunk) {
  this._array[this._i++] = chunk
  return true
}

Accumulator.prototype.concat = function () {
  var length = 0
  var lengths = new Array(this._array.length)
  var list = this._array
  var pos = 0
  var i
  var result

  for (i = 0; i < list.length && list[i] !== undefined; i++) {
    if (typeof list[i] !== 'string') lengths[i] = list[i].length
    else lengths[i] = Buffer.byteLength(list[i])

    length += lengths[i]
  }

  result = Buffer.allocUnsafe(length)

  for (i = 0; i < list.length && list[i] !== undefined; i++) {
    if (typeof list[i] !== 'string') {
      list[i].copy(result, pos)
      pos += lengths[i]
    } else {
      result.write(list[i], pos)
      pos += lengths[i]
    }
  }

  return result
}

module.exports = generate

},{"./writeToStream":113,"events":31,"inherits":102,"safe-buffer":140}],109:[function(require,module,exports){
'use strict'

exports.parser = require('./parser')
exports.generate = require('./generate')
exports.writeToStream = require('./writeToStream')

},{"./generate":108,"./parser":112,"./writeToStream":113}],110:[function(require,module,exports){
'use strict'

var Buffer = require('safe-buffer').Buffer
var max = 65536
var cache = {}

function generateBuffer (i) {
  var buffer = Buffer.allocUnsafe(2)
  buffer.writeUInt8(i >> 8, 0)
  buffer.writeUInt8(i & 0x00FF, 0 + 1)

  return buffer
}

function generateCache () {
  for (var i = 0; i < max; i++) {
    cache[i] = generateBuffer(i)
  }
}

module.exports = {
  cache: cache,
  generateCache: generateCache,
  generateNumber: generateBuffer
}

},{"safe-buffer":140}],111:[function(require,module,exports){

function Packet () {
  this.cmd = null
  this.retain = false
  this.qos = 0
  this.dup = false
  this.length = -1
  this.topic = null
  this.payload = null
}

module.exports = Packet

},{}],112:[function(require,module,exports){
'use strict'

var bl = require('bl')
var inherits = require('inherits')
var EE = require('events').EventEmitter
var Packet = require('./packet')
var constants = require('./constants')

function Parser () {
  if (!(this instanceof Parser)) return new Parser()

  this._states = [
    '_parseHeader',
    '_parseLength',
    '_parsePayload',
    '_newPacket'
  ]

  this._resetState()
}

inherits(Parser, EE)

Parser.prototype._resetState = function () {
  this.packet = new Packet()
  this.error = null
  this._list = bl()
  this._stateCounter = 0
}

Parser.prototype.parse = function (buf) {
  if (this.error) this._resetState()

  this._list.append(buf)

  while ((this.packet.length !== -1 || this._list.length > 0) &&
         this[this._states[this._stateCounter]]() &&
         !this.error) {
    this._stateCounter++

    if (this._stateCounter >= this._states.length) this._stateCounter = 0
  }

  return this._list.length
}

Parser.prototype._parseHeader = function () {
  // There is at least one byte in the buffer
  var zero = this._list.readUInt8(0)
  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]
  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0
  this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK
  this.packet.dup = (zero & constants.DUP_MASK) !== 0

  this._list.consume(1)

  return true
}

Parser.prototype._parseLength = function () {
  // There is at least one byte in the list
  var bytes = 0
  var mul = 1
  var length = 0
  var result = true
  var current

  while (bytes < 5) {
    current = this._list.readUInt8(bytes++)
    length += mul * (current & constants.LENGTH_MASK)
    mul *= 0x80

    if ((current & constants.LENGTH_FIN_MASK) === 0) break
    if (this._list.length <= bytes) {
      result = false
      break
    }
  }

  if (result) {
    this.packet.length = length
    this._list.consume(bytes)
  }

  return result
}

Parser.prototype._parsePayload = function () {
  var result = false

  // Do we have a payload? Do we have enough data to complete the payload?
  // PINGs have no payload
  if (this.packet.length === 0 || this._list.length >= this.packet.length) {
    this._pos = 0

    switch (this.packet.cmd) {
      case 'connect':
        this._parseConnect()
        break
      case 'connack':
        this._parseConnack()
        break
      case 'publish':
        this._parsePublish()
        break
      case 'puback':
      case 'pubrec':
      case 'pubrel':
      case 'pubcomp':
        this._parseMessageId()
        break
      case 'subscribe':
        this._parseSubscribe()
        break
      case 'suback':
        this._parseSuback()
        break
      case 'unsubscribe':
        this._parseUnsubscribe()
        break
      case 'unsuback':
        this._parseUnsuback()
        break
      case 'pingreq':
      case 'pingresp':
      case 'disconnect':
        // These are empty, nothing to do
        break
      default:
        this._emitError(new Error('Not supported'))
    }

    result = true
  }

  return result
}

Parser.prototype._parseConnect = function () {
  var protocolId // Protocol ID
  var clientId // Client ID
  var topic // Will topic
  var payload // Will payload
  var password // Password
  var username // Username
  var flags = {}
  var packet = this.packet

  // Parse protocolId
  protocolId = this._parseString()

  if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'))
  if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {
    return this._emitError(new Error('Invalid protocolId'))
  }

  packet.protocolId = protocolId

  // Parse constants version number
  if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'))

  packet.protocolVersion = this._list.readUInt8(this._pos)

  if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4) {
    return this._emitError(new Error('Invalid protocol version'))
  }

  this._pos++

  if (this._pos >= this._list.length) {
    return this._emitError(new Error('Packet too short'))
  }

  // Parse connect flags
  flags.username = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)
  flags.password = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)
  flags.will = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)

  if (flags.will) {
    packet.will = {}
    packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0
    packet.will.qos = (this._list.readUInt8(this._pos) &
                          constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT
  }

  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0
  this._pos++

  // Parse keepalive
  packet.keepalive = this._parseNum()
  if (packet.keepalive === -1) return this._emitError(new Error('Packet too short'))

  // Parse clientId
  clientId = this._parseString()
  if (clientId === null) return this._emitError(new Error('Packet too short'))
  packet.clientId = clientId

  if (flags.will) {
    // Parse will topic
    topic = this._parseString()
    if (topic === null) return this._emitError(new Error('Cannot parse will topic'))
    packet.will.topic = topic

    // Parse will payload
    payload = this._parseBuffer()
    if (payload === null) return this._emitError(new Error('Cannot parse will payload'))
    packet.will.payload = payload
  }

  // Parse username
  if (flags.username) {
    username = this._parseString()
    if (username === null) return this._emitError(new Error('Cannot parse username'))
    packet.username = username
  }

  // Parse password
  if (flags.password) {
    password = this._parseBuffer()
    if (password === null) return this._emitError(new Error('Cannot parse password'))
    packet.password = password
  }

  return packet
}

Parser.prototype._parseConnack = function () {
  var packet = this.packet

  if (this._list.length < 2) return null

  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)
  packet.returnCode = this._list.readUInt8(this._pos)

  if (packet.returnCode === -1) return this._emitError(new Error('Cannot parse return code'))
}

Parser.prototype._parsePublish = function () {
  var packet = this.packet
  packet.topic = this._parseString()

  if (packet.topic === null) return this._emitError(new Error('Cannot parse topic'))

  // Parse messageId
  if (packet.qos > 0) if (!this._parseMessageId()) { return }

  packet.payload = this._list.slice(this._pos, packet.length)
}

Parser.prototype._parseSubscribe = function () {
  var packet = this.packet
  var topic
  var qos

  if (packet.qos !== 1) {
    return this._emitError(new Error('Wrong subscribe header'))
  }

  packet.subscriptions = []

  if (!this._parseMessageId()) { return }

  while (this._pos < packet.length) {
    // Parse topic
    topic = this._parseString()
    if (topic === null) return this._emitError(new Error('Cannot parse topic'))

    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))
    qos = this._list.readUInt8(this._pos++)

    // Push pair to subscriptions
    packet.subscriptions.push({ topic: topic, qos: qos })
  }
}

Parser.prototype._parseSuback = function () {
  this.packet.granted = []

  if (!this._parseMessageId()) { return }

  // Parse granted QoSes
  while (this._pos < this.packet.length) {
    this.packet.granted.push(this._list.readUInt8(this._pos++))
  }
}

Parser.prototype._parseUnsubscribe = function () {
  var packet = this.packet

  packet.unsubscriptions = []

  // Parse messageId
  if (!this._parseMessageId()) { return }

  while (this._pos < packet.length) {
    var topic

    // Parse topic
    topic = this._parseString()
    if (topic === null) return this._emitError(new Error('Cannot parse topic'))

    // Push topic to unsubscriptions
    packet.unsubscriptions.push(topic)
  }
}

Parser.prototype._parseUnsuback = function () {
  if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'))
}

Parser.prototype._parseMessageId = function () {
  var packet = this.packet

  packet.messageId = this._parseNum()

  if (packet.messageId === null) {
    this._emitError(new Error('Cannot parse messageId'))
    return false
  }

  return true
}

Parser.prototype._parseString = function (maybeBuffer) {
  var length = this._parseNum()
  var result
  var end = length + this._pos

  if (length === -1 || end > this._list.length || end > this.packet.length) return null

  result = this._list.toString('utf8', this._pos, end)
  this._pos += length

  return result
}

Parser.prototype._parseBuffer = function () {
  var length = this._parseNum()
  var result
  var end = length + this._pos

  if (length === -1 || end > this._list.length || end > this.packet.length) return null

  result = this._list.slice(this._pos, end)

  this._pos += length

  return result
}

Parser.prototype._parseNum = function () {
  if (this._list.length - this._pos < 2) return -1

  var result = this._list.readUInt16BE(this._pos)
  this._pos += 2

  return result
}

Parser.prototype._newPacket = function () {
  if (this.packet) {
    this._list.consume(this.packet.length)
    this.emit('packet', this.packet)
  }

  this.packet = new Packet()

  return true
}

Parser.prototype._emitError = function (err) {
  this.error = err
  this.emit('error', err)
}

module.exports = Parser

},{"./constants":107,"./packet":111,"bl":27,"events":31,"inherits":102}],113:[function(require,module,exports){
'use strict'

var protocol = require('./constants')
var Buffer = require('safe-buffer').Buffer
var empty = Buffer.allocUnsafe(0)
var zeroBuf = Buffer.from([0])
var numbers = require('./numbers')
var nextTick = require('process-nextick-args').nextTick

var numCache = numbers.cache
var generateNumber = numbers.generateNumber
var generateCache = numbers.generateCache
var writeNumber = writeNumberCached
var toGenerate = true

function generate (packet, stream) {
  if (stream.cork) {
    stream.cork()
    nextTick(uncork, stream)
  }

  if (toGenerate) {
    toGenerate = false
    generateCache()
  }

  switch (packet.cmd) {
    case 'connect':
      return connect(packet, stream)
    case 'connack':
      return connack(packet, stream)
    case 'publish':
      return publish(packet, stream)
    case 'puback':
    case 'pubrec':
    case 'pubrel':
    case 'pubcomp':
    case 'unsuback':
      return confirmation(packet, stream)
    case 'subscribe':
      return subscribe(packet, stream)
    case 'suback':
      return suback(packet, stream)
    case 'unsubscribe':
      return unsubscribe(packet, stream)
    case 'pingreq':
    case 'pingresp':
    case 'disconnect':
      return emptyPacket(packet, stream)
    default:
      stream.emit('error', new Error('Unknown command'))
      return false
  }
}
/**
 * Controls numbers cache.
 * Set to "false" to allocate buffers on-the-flight instead of pre-generated cache
 */
Object.defineProperty(generate, 'cacheNumbers', {
  get: function () {
    return writeNumber === writeNumberCached
  },
  set: function (value) {
    if (value) {
      if (!numCache || Object.keys(numCache).length === 0) toGenerate = true
      writeNumber = writeNumberCached
    } else {
      toGenerate = false
      writeNumber = writeNumberGenerated
    }
  }
})

function uncork (stream) {
  stream.uncork()
}

function connect (opts, stream) {
  var settings = opts || {}
  var protocolId = settings.protocolId || 'MQTT'
  var protocolVersion = settings.protocolVersion || 4
  var will = settings.will
  var clean = settings.clean
  var keepalive = settings.keepalive || 0
  var clientId = settings.clientId || ''
  var username = settings.username
  var password = settings.password

  if (clean === undefined) clean = true

  var length = 0

  // Must be a string and non-falsy
  if (!protocolId ||
     (typeof protocolId !== 'string' && !Buffer.isBuffer(protocolId))) {
    stream.emit('error', new Error('Invalid protocolId'))
    return false
  } else length += protocolId.length + 2

  // Must be 3 or 4
  if (protocolVersion !== 3 && protocolVersion !== 4) {
    stream.emit('error', new Error('Invalid protocol version'))
    return false
  } else length += 1

  // ClientId might be omitted in 3.1.1, but only if cleanSession is set to 1
  if ((typeof clientId === 'string' || Buffer.isBuffer(clientId)) &&
     (clientId || protocolVersion === 4) && (clientId || clean)) {
    length += clientId.length + 2
  } else {
    if (protocolVersion < 4) {
      stream.emit('error', new Error('clientId must be supplied before 3.1.1'))
      return false
    }
    if ((clean * 1) === 0) {
      stream.emit('error', new Error('clientId must be given if cleanSession set to 0'))
      return false
    }
  }

  // Must be a two byte number
  if (typeof keepalive !== 'number' ||
      keepalive < 0 ||
      keepalive > 65535 ||
      keepalive % 1 !== 0) {
    stream.emit('error', new Error('Invalid keepalive'))
    return false
  } else length += 2

  // Connect flags
  length += 1

  // If will exists...
  if (will) {
    // It must be an object
    if (typeof will !== 'object') {
      stream.emit('error', new Error('Invalid will'))
      return false
    }
    // It must have topic typeof string
    if (!will.topic || typeof will.topic !== 'string') {
      stream.emit('error', new Error('Invalid will topic'))
      return false
    } else {
      length += Buffer.byteLength(will.topic) + 2
    }

    // Payload
    if (will.payload && will.payload) {
      if (will.payload.length >= 0) {
        if (typeof will.payload === 'string') {
          length += Buffer.byteLength(will.payload) + 2
        } else {
          length += will.payload.length + 2
        }
      } else {
        stream.emit('error', new Error('Invalid will payload'))
        return false
      }
    } else {
      length += 2
    }
  }

  // Username
  var providedUsername = false
  if (username != null) {
    if (isStringOrBuffer(username)) {
      providedUsername = true
      length += Buffer.byteLength(username) + 2
    } else {
      stream.emit('error', new Error('Invalid username'))
      return false
    }
  }

  // Password
  if (password != null) {
    if (!providedUsername) {
      stream.emit('error', new Error('Username is required to use password'))
      return false
    }

    if (isStringOrBuffer(password)) {
      length += byteLength(password) + 2
    } else {
      stream.emit('error', new Error('Invalid password'))
      return false
    }
  }

  // Generate header
  stream.write(protocol.CONNECT_HEADER)

  // Generate length
  writeLength(stream, length)

  // Generate protocol ID
  writeStringOrBuffer(stream, protocolId)
  stream.write(
    protocolVersion === 4 ? protocol.VERSION4 : protocol.VERSION3
  )

  // Connect flags
  var flags = 0
  flags |= (username != null) ? protocol.USERNAME_MASK : 0
  flags |= (password != null) ? protocol.PASSWORD_MASK : 0
  flags |= (will && will.retain) ? protocol.WILL_RETAIN_MASK : 0
  flags |= (will && will.qos) ? will.qos << protocol.WILL_QOS_SHIFT : 0
  flags |= will ? protocol.WILL_FLAG_MASK : 0
  flags |= clean ? protocol.CLEAN_SESSION_MASK : 0

  stream.write(Buffer.from([flags]))

  // Keepalive
  writeNumber(stream, keepalive)

  // Client ID
  writeStringOrBuffer(stream, clientId)

  // Will
  if (will) {
    writeString(stream, will.topic)
    writeStringOrBuffer(stream, will.payload)
  }

  // Username and password
  if (username != null) {
    writeStringOrBuffer(stream, username)
  }
  if (password != null) {
    writeStringOrBuffer(stream, password)
  }
  // This is a small packet that happens only once on a stream
  // We assume the stream is always free to receive more data after this
  return true
}

function connack (opts, stream) {
  var settings = opts || {}
  var rc = settings.returnCode

  // Check return code
  if (typeof rc !== 'number') {
    stream.emit('error', new Error('Invalid return code'))
    return false
  }

  stream.write(protocol.CONNACK_HEADER)
  writeLength(stream, 2)
  stream.write(opts.sessionPresent ? protocol.SESSIONPRESENT_HEADER : zeroBuf)

  return stream.write(Buffer.from([rc]))
}

function publish (opts, stream) {
  var settings = opts || {}
  var qos = settings.qos || 0
  var retain = settings.retain ? protocol.RETAIN_MASK : 0
  var topic = settings.topic
  var payload = settings.payload || empty
  var id = settings.messageId

  var length = 0

  // Topic must be a non-empty string or Buffer
  if (typeof topic === 'string') length += Buffer.byteLength(topic) + 2
  else if (Buffer.isBuffer(topic)) length += topic.length + 2
  else {
    stream.emit('error', new Error('Invalid topic'))
    return false
  }

  // Get the payload length
  if (!Buffer.isBuffer(payload)) length += Buffer.byteLength(payload)
  else length += payload.length

  // Message ID must a number if qos > 0
  if (qos && typeof id !== 'number') {
    stream.emit('error', new Error('Invalid messageId'))
    return false
  } else if (qos) length += 2

  // Header
  stream.write(protocol.PUBLISH_HEADER[qos][opts.dup ? 1 : 0][retain ? 1 : 0])

  // Remaining length
  writeLength(stream, length)

  // Topic
  writeNumber(stream, byteLength(topic))
  stream.write(topic)

  // Message ID
  if (qos > 0) writeNumber(stream, id)

  // Payload
  return stream.write(payload)
}

/* Puback, pubrec, pubrel and pubcomp */
function confirmation (opts, stream) {
  var settings = opts || {}
  var type = settings.cmd || 'puback'
  var id = settings.messageId
  var dup = (settings.dup && type === 'pubrel') ? protocol.DUP_MASK : 0
  var qos = 0

  if (type === 'pubrel') qos = 1

  // Check message ID
  if (typeof id !== 'number') {
    stream.emit('error', new Error('Invalid messageId'))
    return false
  }

  // Header
  stream.write(protocol.ACKS[type][qos][dup][0])

  // Length
  writeLength(stream, 2)

  // Message ID
  return writeNumber(stream, id)
}

function subscribe (opts, stream) {
  var settings = opts || {}
  var dup = settings.dup ? protocol.DUP_MASK : 0
  var id = settings.messageId
  var subs = settings.subscriptions

  var length = 0

  // Check message ID
  if (typeof id !== 'number') {
    stream.emit('error', new Error('Invalid messageId'))
    return false
  } else length += 2

  // Check subscriptions
  if (typeof subs === 'object' && subs.length) {
    for (var i = 0; i < subs.length; i += 1) {
      var itopic = subs[i].topic
      var iqos = subs[i].qos

      if (typeof itopic !== 'string') {
        stream.emit('error', new Error('Invalid subscriptions - invalid topic'))
        return false
      }
      if (typeof iqos !== 'number') {
        stream.emit('error', new Error('Invalid subscriptions - invalid qos'))
        return false
      }

      length += Buffer.byteLength(itopic) + 2 + 1
    }
  } else {
    stream.emit('error', new Error('Invalid subscriptions'))
    return false
  }

  // Generate header
  stream.write(protocol.SUBSCRIBE_HEADER[1][dup ? 1 : 0][0])

  // Generate length
  writeLength(stream, length)

  // Generate message ID
  writeNumber(stream, id)

  var result = true

  // Generate subs
  for (var j = 0; j < subs.length; j++) {
    var sub = subs[j]
    var jtopic = sub.topic
    var jqos = sub.qos

    // Write topic string
    writeString(stream, jtopic)

    // Write qos
    result = stream.write(protocol.QOS[jqos])
  }

  return result
}

function suback (opts, stream) {
  var settings = opts || {}
  var id = settings.messageId
  var granted = settings.granted

  var length = 0

  // Check message ID
  if (typeof id !== 'number') {
    stream.emit('error', new Error('Invalid messageId'))
    return false
  } else length += 2

  // Check granted qos vector
  if (typeof granted === 'object' && granted.length) {
    for (var i = 0; i < granted.length; i += 1) {
      if (typeof granted[i] !== 'number') {
        stream.emit('error', new Error('Invalid qos vector'))
        return false
      }
      length += 1
    }
  } else {
    stream.emit('error', new Error('Invalid qos vector'))
    return false
  }

  // header
  stream.write(protocol.SUBACK_HEADER)

  // Length
  writeLength(stream, length)

  // Message ID
  writeNumber(stream, id)

  return stream.write(Buffer.from(granted))
}

function unsubscribe (opts, stream) {
  var settings = opts || {}
  var id = settings.messageId
  var dup = settings.dup ? protocol.DUP_MASK : 0
  var unsubs = settings.unsubscriptions

  var length = 0

  // Check message ID
  if (typeof id !== 'number') {
    stream.emit('error', new Error('Invalid messageId'))
    return false
  } else {
    length += 2
  }
  // Check unsubs
  if (typeof unsubs === 'object' && unsubs.length) {
    for (var i = 0; i < unsubs.length; i += 1) {
      if (typeof unsubs[i] !== 'string') {
        stream.emit('error', new Error('Invalid unsubscriptions'))
        return false
      }
      length += Buffer.byteLength(unsubs[i]) + 2
    }
  } else {
    stream.emit('error', new Error('Invalid unsubscriptions'))
    return false
  }

  // Header
  stream.write(protocol.UNSUBSCRIBE_HEADER[1][dup ? 1 : 0][0])

  // Length
  writeLength(stream, length)

  // Message ID
  writeNumber(stream, id)

  // Unsubs
  var result = true
  for (var j = 0; j < unsubs.length; j++) {
    result = writeString(stream, unsubs[j])
  }

  return result
}

function emptyPacket (opts, stream) {
  return stream.write(protocol.EMPTY[opts.cmd])
}

/**
 * calcLengthLength - calculate the length of the remaining
 * length field
 *
 * @api private
 */
function calcLengthLength (length) {
  if (length >= 0 && length < 128) return 1
  else if (length >= 128 && length < 16384) return 2
  else if (length >= 16384 && length < 2097152) return 3
  else if (length >= 2097152 && length < 268435456) return 4
  else return 0
}

function genBufLength (length) {
  var digit = 0
  var pos = 0
  var buffer = Buffer.allocUnsafe(calcLengthLength(length))

  do {
    digit = length % 128 | 0
    length = length / 128 | 0
    if (length > 0) digit = digit | 0x80

    buffer.writeUInt8(digit, pos++)
  } while (length > 0)

  return buffer
}

/**
 * writeLength - write an MQTT style length field to the buffer
 *
 * @param <Buffer> buffer - destination
 * @param <Number> pos - offset
 * @param <Number> length - length (>0)
 * @returns <Number> number of bytes written
 *
 * @api private
 */

var lengthCache = {}
function writeLength (stream, length) {
  var buffer = lengthCache[length]

  if (!buffer) {
    buffer = genBufLength(length)
    if (length < 16384) lengthCache[length] = buffer
  }

  stream.write(buffer)
}

/**
 * writeString - write a utf8 string to the buffer
 *
 * @param <Buffer> buffer - destination
 * @param <Number> pos - offset
 * @param <String> string - string to write
 * @return <Number> number of bytes written
 *
 * @api private
 */

function writeString (stream, string) {
  var strlen = Buffer.byteLength(string)
  writeNumber(stream, strlen)

  stream.write(string, 'utf8')
}

/**
 * writeNumber - write a two byte number to the buffer
 *
 * @param <Buffer> buffer - destination
 * @param <Number> pos - offset
 * @param <String> number - number to write
 * @return <Number> number of bytes written
 *
 * @api private
 */
function writeNumberCached (stream, number) {
  return stream.write(numCache[number])
}
function writeNumberGenerated (stream, number) {
  return stream.write(generateNumber(number))
}

/**
 * writeStringOrBuffer - write a String or Buffer with the its length prefix
 *
 * @param <Buffer> buffer - destination
 * @param <Number> pos - offset
 * @param <String> toWrite - String or Buffer
 * @return <Number> number of bytes written
 */
function writeStringOrBuffer (stream, toWrite) {
  if (typeof toWrite === 'string') {
    writeString(stream, toWrite)
  } else if (toWrite) {
    writeNumber(stream, toWrite.length)
    stream.write(toWrite)
  } else writeNumber(stream, 0)
}

function byteLength (bufOrString) {
  if (!bufOrString) return 0
  else if (bufOrString instanceof Buffer) return bufOrString.length
  else return Buffer.byteLength(bufOrString)
}

function isStringOrBuffer (field) {
  return typeof field === 'string' || field instanceof Buffer
}

module.exports = generate

},{"./constants":107,"./numbers":110,"process-nextick-args":123,"safe-buffer":140}],114:[function(require,module,exports){
(function (process,global){
'use strict'

/**
 * Module dependencies
 */
var events = require('events')
var Store = require('./store')
var eos = require('end-of-stream')
var mqttPacket = require('mqtt-packet')
var Writable = require('readable-stream').Writable
var inherits = require('inherits')
var reInterval = require('reinterval')
var validations = require('./validations')
var xtend = require('xtend')
var setImmediate = global.setImmediate || function (callback) {
  // works in node v0.8
  process.nextTick(callback)
}
var defaultConnectOptions = {
  keepalive: 60,
  reschedulePings: true,
  protocolId: 'MQTT',
  protocolVersion: 4,
  reconnectPeriod: 1000,
  connectTimeout: 30 * 1000,
  clean: true,
  resubscribe: true
}

function defaultId () {
  return 'mqttjs_' + Math.random().toString(16).substr(2, 8)
}

function sendPacket (client, packet, cb) {
  client.emit('packetsend', packet)

  var result = mqttPacket.writeToStream(packet, client.stream)

  if (!result && cb) {
    client.stream.once('drain', cb)
  } else if (cb) {
    cb()
  }
}

function flush (queue) {
  if (queue) {
    Object.keys(queue).forEach(function (messageId) {
      if (typeof queue[messageId] === 'function') {
        queue[messageId](new Error('Connection closed'))
        delete queue[messageId]
      }
    })
  }
}

function storeAndSend (client, packet, cb) {
  client.outgoingStore.put(packet, function storedPacket (err) {
    if (err) {
      return cb && cb(err)
    }
    sendPacket(client, packet, cb)
  })
}

function nop () {}

/**
 * MqttClient constructor
 *
 * @param {Stream} stream - stream
 * @param {Object} [options] - connection options
 * (see Connection#connect)
 */
function MqttClient (streamBuilder, options) {
  var k
  var that = this

  if (!(this instanceof MqttClient)) {
    return new MqttClient(streamBuilder, options)
  }

  this.options = options || {}

  // Defaults
  for (k in defaultConnectOptions) {
    if (typeof this.options[k] === 'undefined') {
      this.options[k] = defaultConnectOptions[k]
    } else {
      this.options[k] = options[k]
    }
  }

  this.options.clientId = (typeof this.options.clientId === 'string') ? this.options.clientId : defaultId()

  this.streamBuilder = streamBuilder

  // Inflight message storages
  this.outgoingStore = this.options.outgoingStore || new Store()
  this.incomingStore = this.options.incomingStore || new Store()

  // Should QoS zero messages be queued when the connection is broken?
  this.queueQoSZero = this.options.queueQoSZero === undefined ? true : this.options.queueQoSZero

  // map of subscribed topics to support reconnection
  this._resubscribeTopics = {}

  // map of a subscribe messageId and a topic
  this.messageIdToTopic = {}

  // Ping timer, setup in _setupPingTimer
  this.pingTimer = null
  // Is the client connected?
  this.connected = false
  // Are we disconnecting?
  this.disconnecting = false
  // Packet queue
  this.queue = []
  // connack timer
  this.connackTimer = null
  // Reconnect timer
  this.reconnectTimer = null
  /**
   * MessageIDs starting with 1
   * ensure that nextId is min. 1, see https://github.com/mqttjs/MQTT.js/issues/810
   */
  this.nextId = Math.max(1, Math.floor(Math.random() * 65535))

  // Inflight callbacks
  this.outgoing = {}

  // Mark connected on connect
  this.on('connect', function () {
    if (this.disconnected) {
      return
    }

    this.connected = true
    var outStore = this.outgoingStore.createStream()

    this.once('close', remove)
    outStore.on('end', function () {
      that.removeListener('close', remove)
    })
    outStore.on('error', function (err) {
      that.removeListener('close', remove)
      that.emit('error', err)
    })

    function remove () {
      outStore.destroy()
      outStore = null
    }

    function storeDeliver () {
      // edge case, we wrapped this twice
      if (!outStore) {
        return
      }

      var packet = outStore.read(1)
      var cb

      if (!packet) {
        // read when data is available in the future
        outStore.once('readable', storeDeliver)
        return
      }

      // Avoid unnecessary stream read operations when disconnected
      if (!that.disconnecting && !that.reconnectTimer) {
        cb = that.outgoing[packet.messageId]
        that.outgoing[packet.messageId] = function (err, status) {
          // Ensure that the original callback passed in to publish gets invoked
          if (cb) {
            cb(err, status)
          }

          storeDeliver()
        }
        that._sendPacket(packet)
      } else if (outStore.destroy) {
        outStore.destroy()
      }
    }

    // start flowing
    storeDeliver()
  })

  // Mark disconnected on stream close
  this.on('close', function () {
    this.connected = false
    clearTimeout(this.connackTimer)
  })

  // Setup ping timer
  this.on('connect', this._setupPingTimer)

  // Send queued packets
  this.on('connect', function () {
    var queue = this.queue

    function deliver () {
      var entry = queue.shift()
      var packet = null

      if (!entry) {
        return
      }

      packet = entry.packet

      that._sendPacket(
        packet,
        function (err) {
          if (entry.cb) {
            entry.cb(err)
          }
          deliver()
        }
      )
    }

    deliver()
  })

  var firstConnection = true
  // resubscribe
  this.on('connect', function () {
    if (!firstConnection &&
        this.options.clean &&
        Object.keys(this._resubscribeTopics).length > 0) {
      if (this.options.resubscribe) {
        this._resubscribeTopics.resubscribe = true
        this.subscribe(this._resubscribeTopics)
      } else {
        this._resubscribeTopics = {}
      }
    }

    firstConnection = false
  })

  // Clear ping timer
  this.on('close', function () {
    if (that.pingTimer !== null) {
      that.pingTimer.clear()
      that.pingTimer = null
    }
  })

  // Setup reconnect timer on disconnect
  this.on('close', this._setupReconnect)

  events.EventEmitter.call(this)

  this._setupStream()
}
inherits(MqttClient, events.EventEmitter)

/**
 * setup the event handlers in the inner stream.
 *
 * @api private
 */
MqttClient.prototype._setupStream = function () {
  var connectPacket
  var that = this
  var writable = new Writable()
  var parser = mqttPacket.parser(this.options)
  var completeParse = null
  var packets = []

  this._clearReconnect()

  this.stream = this.streamBuilder(this)

  parser.on('packet', function (packet) {
    packets.push(packet)
  })

  function nextTickWork () {
    process.nextTick(work)
  }

  function work () {
    var packet = packets.shift()
    var done = completeParse

    if (packet) {
      that._handlePacket(packet, nextTickWork)
    } else {
      completeParse = null
      done()
    }
  }

  writable._write = function (buf, enc, done) {
    completeParse = done
    parser.parse(buf)
    work()
  }

  this.stream.pipe(writable)

  // Suppress connection errors
  this.stream.on('error', nop)

  // Echo stream close
  eos(this.stream, this.emit.bind(this, 'close'))

  // Send a connect packet
  connectPacket = Object.create(this.options)
  connectPacket.cmd = 'connect'
  // avoid message queue
  sendPacket(this, connectPacket)

  // Echo connection errors
  parser.on('error', this.emit.bind(this, 'error'))

  // many drain listeners are needed for qos 1 callbacks if the connection is intermittent
  this.stream.setMaxListeners(1000)

  clearTimeout(this.connackTimer)
  this.connackTimer = setTimeout(function () {
    that._cleanUp(true)
  }, this.options.connectTimeout)
}

MqttClient.prototype._handlePacket = function (packet, done) {
  this.emit('packetreceive', packet)

  switch (packet.cmd) {
    case 'publish':
      this._handlePublish(packet, done)
      break
    case 'puback':
    case 'pubrec':
    case 'pubcomp':
    case 'suback':
    case 'unsuback':
      this._handleAck(packet)
      done()
      break
    case 'pubrel':
      this._handlePubrel(packet, done)
      break
    case 'connack':
      this._handleConnack(packet)
      done()
      break
    case 'pingresp':
      this._handlePingresp(packet)
      done()
      break
    default:
      // do nothing
      // maybe we should do an error handling
      // or just log it
      break
  }
}

MqttClient.prototype._checkDisconnecting = function (callback) {
  if (this.disconnecting) {
    if (callback) {
      callback(new Error('client disconnecting'))
    } else {
      this.emit('error', new Error('client disconnecting'))
    }
  }
  return this.disconnecting
}

/**
 * publish - publish <message> to <topic>
 *
 * @param {String} topic - topic to publish to
 * @param {String, Buffer} message - message to publish
 * @param {Object} [opts] - publish options, includes:
 *    {Number} qos - qos level to publish on
 *    {Boolean} retain - whether or not to retain the message
 *    {Boolean} dup - whether or not mark a message as duplicate
 * @param {Function} [callback] - function(err){}
 *    called when publish succeeds or fails
 * @returns {MqttClient} this - for chaining
 * @api public
 *
 * @example client.publish('topic', 'message');
 * @example
 *     client.publish('topic', 'message', {qos: 1, retain: true, dup: true});
 * @example client.publish('topic', 'message', console.log);
 */
MqttClient.prototype.publish = function (topic, message, opts, callback) {
  var packet

  // .publish(topic, payload, cb);
  if (typeof opts === 'function') {
    callback = opts
    opts = null
  }

  // default opts
  var defaultOpts = {qos: 0, retain: false, dup: false}
  opts = xtend(defaultOpts, opts)

  if (this._checkDisconnecting(callback)) {
    return this
  }

  packet = {
    cmd: 'publish',
    topic: topic,
    payload: message,
    qos: opts.qos,
    retain: opts.retain,
    messageId: this._nextId(),
    dup: opts.dup
  }

  switch (opts.qos) {
    case 1:
    case 2:

      // Add to callbacks
      this.outgoing[packet.messageId] = callback || nop
      this._sendPacket(packet)
      break
    default:
      this._sendPacket(packet, callback)
      break
  }

  return this
}

/**
 * subscribe - subscribe to <topic>
 *
 * @param {String, Array, Object} topic - topic(s) to subscribe to, supports objects in the form {'topic': qos}
 * @param {Object} [opts] - optional subscription options, includes:
 *    {Number} qos - subscribe qos level
 * @param {Function} [callback] - function(err, granted){} where:
 *    {Error} err - subscription error (none at the moment!)
 *    {Array} granted - array of {topic: 't', qos: 0}
 * @returns {MqttClient} this - for chaining
 * @api public
 * @example client.subscribe('topic');
 * @example client.subscribe('topic', {qos: 1});
 * @example client.subscribe({'topic': 0, 'topic2': 1}, console.log);
 * @example client.subscribe('topic', console.log);
 */
MqttClient.prototype.subscribe = function () {
  var packet
  var args = Array.prototype.slice.call(arguments)
  var subs = []
  var obj = args.shift()
  var resubscribe = obj.resubscribe
  var callback = args.pop() || nop
  var opts = args.pop()
  var invalidTopic
  var that = this

  delete obj.resubscribe

  if (typeof obj === 'string') {
    obj = [obj]
  }

  if (typeof callback !== 'function') {
    opts = callback
    callback = nop
  }

  invalidTopic = validations.validateTopics(obj)
  if (invalidTopic !== null) {
    setImmediate(callback, new Error('Invalid topic ' + invalidTopic))
    return this
  }

  if (this._checkDisconnecting(callback)) {
    return this
  }

  var defaultOpts = { qos: 0 }
  opts = xtend(defaultOpts, opts)

  if (Array.isArray(obj)) {
    obj.forEach(function (topic) {
      if (that._resubscribeTopics[topic] < opts.qos ||
          !that._resubscribeTopics.hasOwnProperty(topic) ||
          resubscribe) {
        subs.push({
          topic: topic,
          qos: opts.qos
        })
      }
    })
  } else {
    Object
      .keys(obj)
      .forEach(function (k) {
        if (that._resubscribeTopics[k] < obj[k] ||
            !that._resubscribeTopics.hasOwnProperty(k) ||
            resubscribe) {
          subs.push({
            topic: k,
            qos: obj[k]
          })
        }
      })
  }

  packet = {
    cmd: 'subscribe',
    subscriptions: subs,
    qos: 1,
    retain: false,
    dup: false,
    messageId: this._nextId()
  }

  if (!subs.length) {
    callback(null, [])
    return
  }

  // subscriptions to resubscribe to in case of disconnect
  if (this.options.resubscribe) {
    var topics = []
    subs.forEach(function (sub) {
      if (that.options.reconnectPeriod > 0) {
        that._resubscribeTopics[sub.topic] = sub.qos
        topics.push(sub.topic)
      }
    })
    that.messageIdToTopic[packet.messageId] = topics
  }

  this.outgoing[packet.messageId] = function (err, packet) {
    if (!err) {
      var granted = packet.granted
      for (var i = 0; i < granted.length; i += 1) {
        subs[i].qos = granted[i]
      }
    }

    callback(err, subs)
  }

  this._sendPacket(packet)

  return this
}

/**
 * unsubscribe - unsubscribe from topic(s)
 *
 * @param {String, Array} topic - topics to unsubscribe from
 * @param {Function} [callback] - callback fired on unsuback
 * @returns {MqttClient} this - for chaining
 * @api public
 * @example client.unsubscribe('topic');
 * @example client.unsubscribe('topic', console.log);
 */
MqttClient.prototype.unsubscribe = function (topic, callback) {
  var packet = {
    cmd: 'unsubscribe',
    qos: 1,
    messageId: this._nextId()
  }
  var that = this

  callback = callback || nop

  if (this._checkDisconnecting(callback)) {
    return this
  }

  if (typeof topic === 'string') {
    packet.unsubscriptions = [topic]
  } else if (typeof topic === 'object' && topic.length) {
    packet.unsubscriptions = topic
  }

  if (this.options.resubscribe) {
    packet.unsubscriptions.forEach(function (topic) {
      delete that._resubscribeTopics[topic]
    })
  }

  this.outgoing[packet.messageId] = callback

  this._sendPacket(packet)

  return this
}

/**
 * end - close connection
 *
 * @returns {MqttClient} this - for chaining
 * @param {Boolean} force - do not wait for all in-flight messages to be acked
 * @param {Function} cb - called when the client has been closed
 *
 * @api public
 */
MqttClient.prototype.end = function (force, cb) {
  var that = this

  if (typeof force === 'function') {
    cb = force
    force = false
  }

  function closeStores () {
    that.disconnected = true
    that.incomingStore.close(function () {
      that.outgoingStore.close(function () {
        if (cb) {
          cb.apply(null, arguments)
        }
        that.emit('end')
      })
    })
    if (that._deferredReconnect) {
      that._deferredReconnect()
    }
  }

  function finish () {
    // defer closesStores of an I/O cycle,
    // just to make sure things are
    // ok for websockets
    that._cleanUp(force, setImmediate.bind(null, closeStores))
  }

  if (this.disconnecting) {
    return this
  }

  this._clearReconnect()

  this.disconnecting = true

  if (!force && Object.keys(this.outgoing).length > 0) {
    // wait 10ms, just to be sure we received all of it
    this.once('outgoingEmpty', setTimeout.bind(null, finish, 10))
  } else {
    finish()
  }

  return this
}

/**
 * removeOutgoingMessage - remove a message in outgoing store
 * the outgoing callback will be called withe Error('Message removed') if the message is removed
 *
 * @param {Number} mid - messageId to remove message
 * @returns {MqttClient} this - for chaining
 * @api public
 *
 * @example client.removeOutgoingMessage(client.getLastMessageId());
 */
MqttClient.prototype.removeOutgoingMessage = function (mid) {
  var cb = this.outgoing[mid]
  delete this.outgoing[mid]
  this.outgoingStore.del({messageId: mid}, function () {
    cb(new Error('Message removed'))
  })
  return this
}

/**
 * reconnect - connect again using the same options as connect()
 *
 * @param {Object} [opts] - optional reconnect options, includes:
 *    {Store} incomingStore - a store for the incoming packets
 *    {Store} outgoingStore - a store for the outgoing packets
 *    if opts is not given, current stores are used
 * @returns {MqttClient} this - for chaining
 *
 * @api public
 */
MqttClient.prototype.reconnect = function (opts) {
  var that = this
  var f = function () {
    if (opts) {
      that.options.incomingStore = opts.incomingStore
      that.options.outgoingStore = opts.outgoingStore
    } else {
      that.options.incomingStore = null
      that.options.outgoingStore = null
    }
    that.incomingStore = that.options.incomingStore || new Store()
    that.outgoingStore = that.options.outgoingStore || new Store()
    that.disconnecting = false
    that.disconnected = false
    that._deferredReconnect = null
    that._reconnect()
  }

  if (this.disconnecting && !this.disconnected) {
    this._deferredReconnect = f
  } else {
    f()
  }
  return this
}

/**
 * _reconnect - implement reconnection
 * @api privateish
 */
MqttClient.prototype._reconnect = function () {
  this.emit('reconnect')
  this._setupStream()
}

/**
 * _setupReconnect - setup reconnect timer
 */
MqttClient.prototype._setupReconnect = function () {
  var that = this

  if (!that.disconnecting && !that.reconnectTimer && (that.options.reconnectPeriod > 0)) {
    if (!this.reconnecting) {
      this.emit('offline')
      this.reconnecting = true
    }
    that.reconnectTimer = setInterval(function () {
      that._reconnect()
    }, that.options.reconnectPeriod)
  }
}

/**
 * _clearReconnect - clear the reconnect timer
 */
MqttClient.prototype._clearReconnect = function () {
  if (this.reconnectTimer) {
    clearInterval(this.reconnectTimer)
    this.reconnectTimer = null
  }
}

/**
 * _cleanUp - clean up on connection end
 * @api private
 */
MqttClient.prototype._cleanUp = function (forced, done) {
  if (done) {
    this.stream.on('close', done)
  }

  if (forced) {
    if ((this.options.reconnectPeriod === 0) && this.options.clean) {
      flush(this.outgoing)
    }
    this.stream.destroy()
  } else {
    this._sendPacket(
      { cmd: 'disconnect' },
      setImmediate.bind(
        null,
        this.stream.end.bind(this.stream)
      )
    )
  }

  if (!this.disconnecting) {
    this._clearReconnect()
    this._setupReconnect()
  }

  if (this.pingTimer !== null) {
    this.pingTimer.clear()
    this.pingTimer = null
  }

  if (done && !this.connected) {
    this.stream.removeListener('close', done)
    done()
  }
}

/**
 * _sendPacket - send or queue a packet
 * @param {String} type - packet type (see `protocol`)
 * @param {Object} packet - packet options
 * @param {Function} cb - callback when the packet is sent
 * @api private
 */
MqttClient.prototype._sendPacket = function (packet, cb) {
  if (!this.connected) {
    if (((packet.qos || 0) === 0 && this.queueQoSZero) || packet.cmd !== 'publish') {
      this.queue.push({ packet: packet, cb: cb })
    } else if (packet.qos > 0) {
      cb = this.outgoing[packet.messageId]
      this.outgoingStore.put(packet, function (err) {
        if (err) {
          return cb && cb(err)
        }
      })
    } else if (cb) {
      cb(new Error('No connection to broker'))
    }

    return
  }

  // When sending a packet, reschedule the ping timer
  this._shiftPingInterval()

  switch (packet.cmd) {
    case 'publish':
      break
    case 'pubrel':
      storeAndSend(this, packet, cb)
      return
    default:
      sendPacket(this, packet, cb)
      return
  }

  switch (packet.qos) {
    case 2:
    case 1:
      storeAndSend(this, packet, cb)
      break
    /**
     * no need of case here since it will be caught by default
     * and jshint comply that before default it must be a break
     * anyway it will result in -1 evaluation
     */
    case 0:
      /* falls through */
    default:
      sendPacket(this, packet, cb)
      break
  }
}

/**
 * _setupPingTimer - setup the ping timer
 *
 * @api private
 */
MqttClient.prototype._setupPingTimer = function () {
  var that = this

  if (!this.pingTimer && this.options.keepalive) {
    this.pingResp = true
    this.pingTimer = reInterval(function () {
      that._checkPing()
    }, this.options.keepalive * 1000)
  }
}

/**
 * _shiftPingInterval - reschedule the ping interval
 *
 * @api private
 */
MqttClient.prototype._shiftPingInterval = function () {
  if (this.pingTimer && this.options.keepalive && this.options.reschedulePings) {
    this.pingTimer.reschedule(this.options.keepalive * 1000)
  }
}
/**
 * _checkPing - check if a pingresp has come back, and ping the server again
 *
 * @api private
 */
MqttClient.prototype._checkPing = function () {
  if (this.pingResp) {
    this.pingResp = false
    this._sendPacket({ cmd: 'pingreq' })
  } else {
    // do a forced cleanup since socket will be in bad shape
    this._cleanUp(true)
  }
}

/**
 * _handlePingresp - handle a pingresp
 *
 * @api private
 */
MqttClient.prototype._handlePingresp = function () {
  this.pingResp = true
}

/**
 * _handleConnack
 *
 * @param {Object} packet
 * @api private
 */

MqttClient.prototype._handleConnack = function (packet) {
  var rc = packet.returnCode
  var errors = [
    '',
    'Unacceptable protocol version',
    'Identifier rejected',
    'Server unavailable',
    'Bad username or password',
    'Not authorized'
  ]

  clearTimeout(this.connackTimer)

  if (rc === 0) {
    this.reconnecting = false
    this.emit('connect', packet)
  } else if (rc > 0) {
    var err = new Error('Connection refused: ' + errors[rc])
    err.code = rc
    this.emit('error', err)
  }
}

/**
 * _handlePublish
 *
 * @param {Object} packet
 * @api private
 */
/*
those late 2 case should be rewrite to comply with coding style:

case 1:
case 0:
  // do not wait sending a puback
  // no callback passed
  if (1 === qos) {
    this._sendPacket({
      cmd: 'puback',
      messageId: mid
    });
  }
  // emit the message event for both qos 1 and 0
  this.emit('message', topic, message, packet);
  this.handleMessage(packet, done);
  break;
default:
  // do nothing but every switch mus have a default
  // log or throw an error about unknown qos
  break;

for now i just suppressed the warnings
*/
MqttClient.prototype._handlePublish = function (packet, done) {
  done = typeof done !== 'undefined' ? done : nop
  var topic = packet.topic.toString()
  var message = packet.payload
  var qos = packet.qos
  var mid = packet.messageId
  var that = this

  switch (qos) {
    case 2:
      this.incomingStore.put(packet, function (err) {
        if (err) {
          return done(err)
        }
        that._sendPacket({cmd: 'pubrec', messageId: mid}, done)
      })
      break
    case 1:
      // emit the message event
      this.emit('message', topic, message, packet)
      this.handleMessage(packet, function (err) {
        if (err) {
          return done(err)
        }
        // send 'puback' if the above 'handleMessage' method executed
        // successfully.
        that._sendPacket({cmd: 'puback', messageId: mid}, done)
      })
      break
    case 0:
      // emit the message event
      this.emit('message', topic, message, packet)
      this.handleMessage(packet, done)
      break
    default:
      // do nothing
      // log or throw an error about unknown qos
      break
  }
}

/**
 * Handle messages with backpressure support, one at a time.
 * Override at will.
 *
 * @param Packet packet the packet
 * @param Function callback call when finished
 * @api public
 */
MqttClient.prototype.handleMessage = function (packet, callback) {
  callback()
}

/**
 * _handleAck
 *
 * @param {Object} packet
 * @api private
 */

MqttClient.prototype._handleAck = function (packet) {
  /* eslint no-fallthrough: "off" */
  var mid = packet.messageId
  var type = packet.cmd
  var response = null
  var cb = this.outgoing[mid]
  var that = this

  if (!cb) {
    // Server sent an ack in error, ignore it.
    return
  }

  // Process
  switch (type) {
    case 'pubcomp':
      // same thing as puback for QoS 2
    case 'puback':
      // Callback - we're done
      delete this.outgoing[mid]
      this.outgoingStore.del(packet, cb)
      break
    case 'pubrec':
      response = {
        cmd: 'pubrel',
        qos: 2,
        messageId: mid
      }

      this._sendPacket(response)
      break
    case 'suback':
      delete this.outgoing[mid]
      if (packet.granted.length === 1 && (packet.granted[0] & 0x80) !== 0) {
        // suback with Failure status
        var topics = this.messageIdToTopic[mid]
        if (topics) {
          topics.forEach(function (topic) {
            delete that._resubscribeTopics[topic]
          })
        }
      }
      cb(null, packet)
      break
    case 'unsuback':
      delete this.outgoing[mid]
      cb(null)
      break
    default:
      that.emit('error', new Error('unrecognized packet type'))
  }

  if (this.disconnecting &&
      Object.keys(this.outgoing).length === 0) {
    this.emit('outgoingEmpty')
  }
}

/**
 * _handlePubrel
 *
 * @param {Object} packet
 * @api private
 */
MqttClient.prototype._handlePubrel = function (packet, callback) {
  callback = typeof callback !== 'undefined' ? callback : nop
  var mid = packet.messageId
  var that = this

  var comp = {cmd: 'pubcomp', messageId: mid}

  that.incomingStore.get(packet, function (err, pub) {
    if (!err && pub.cmd !== 'pubrel') {
      that.emit('message', pub.topic, pub.payload, pub)
      that.incomingStore.put(packet, function (err) {
        if (err) {
          return callback(err)
        }
        that.handleMessage(pub, function (err) {
          if (err) {
            return callback(err)
          }
          that._sendPacket(comp, callback)
        })
      })
    } else {
      that._sendPacket(comp, callback)
    }
  })
}

/**
 * _nextId
 * @return unsigned int
 */
MqttClient.prototype._nextId = function () {
  // id becomes current state of this.nextId and increments afterwards
  var id = this.nextId++
  // Ensure 16 bit unsigned int (max 65535, nextId got one higher)
  if (this.nextId === 65536) {
    this.nextId = 1
  }
  return id
}

/**
 * getLastMessageId
 * @return unsigned int
 */
MqttClient.prototype.getLastMessageId = function () {
  return (this.nextId === 1) ? 65535 : (this.nextId - 1)
}

module.exports = MqttClient

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./store":120,"./validations":121,"_process":124,"end-of-stream":38,"events":31,"inherits":102,"mqtt-packet":109,"readable-stream":138,"reinterval":139,"xtend":152}],115:[function(require,module,exports){
(function (process){
'use strict'

var MqttClient = require('../client')
var Store = require('../store')
var url = require('url')
var xtend = require('xtend')
var protocols = {}

if (process.title !== 'browser') {
  protocols.mqtt = require('./tcp')
  protocols.tcp = require('./tcp')
  protocols.ssl = require('./tls')
  protocols.tls = require('./tls')
  protocols.mqtts = require('./tls')
} else {
  protocols.wx = require('./wx')
  protocols.wxs = require('./wx')
}

protocols.ws = require('./ws')
protocols.wss = require('./ws')

/**
 * Parse the auth attribute and merge username and password in the options object.
 *
 * @param {Object} [opts] option object
 */
function parseAuthOptions (opts) {
  var matches
  if (opts.auth) {
    matches = opts.auth.match(/^(.+):(.+)$/)
    if (matches) {
      opts.username = matches[1]
      opts.password = matches[2]
    } else {
      opts.username = opts.auth
    }
  }
}

/**
 * connect - connect to an MQTT broker.
 *
 * @param {String} [brokerUrl] - url of the broker, optional
 * @param {Object} opts - see MqttClient#constructor
 */
function connect (brokerUrl, opts) {
  if ((typeof brokerUrl === 'object') && !opts) {
    opts = brokerUrl
    brokerUrl = null
  }

  opts = opts || {}

  if (brokerUrl) {
    var parsed = url.parse(brokerUrl, true)
    if (parsed.port != null) {
      parsed.port = Number(parsed.port)
    }

    opts = xtend(parsed, opts)

    if (opts.protocol === null) {
      throw new Error('Missing protocol')
    }
    opts.protocol = opts.protocol.replace(/:$/, '')
  }

  // merge in the auth options if supplied
  parseAuthOptions(opts)

  // support clientId passed in the query string of the url
  if (opts.query && typeof opts.query.clientId === 'string') {
    opts.clientId = opts.query.clientId
  }

  if (opts.cert && opts.key) {
    if (opts.protocol) {
      if (['mqtts', 'wss', 'wxs'].indexOf(opts.protocol) === -1) {
        switch (opts.protocol) {
          case 'mqtt':
            opts.protocol = 'mqtts'
            break
          case 'ws':
            opts.protocol = 'wss'
            break
          case 'wx':
            opts.protocol = 'wxs'
            break
          default:
            throw new Error('Unknown protocol for secure connection: "' + opts.protocol + '"!')
        }
      }
    } else {
      // don't know what protocol he want to use, mqtts or wss
      throw new Error('Missing secure protocol key')
    }
  }

  if (!protocols[opts.protocol]) {
    var isSecure = ['mqtts', 'wss'].indexOf(opts.protocol) !== -1
    opts.protocol = [
      'mqtt',
      'mqtts',
      'ws',
      'wss',
      'wx',
      'wxs'
    ].filter(function (key, index) {
      if (isSecure && index % 2 === 0) {
        // Skip insecure protocols when requesting a secure one.
        return false
      }
      return (typeof protocols[key] === 'function')
    })[0]
  }

  if (opts.clean === false && !opts.clientId) {
    throw new Error('Missing clientId for unclean clients')
  }

  if (opts.protocol) {
    opts.defaultProtocol = opts.protocol
  }

  function wrapper (client) {
    if (opts.servers) {
      if (!client._reconnectCount || client._reconnectCount === opts.servers.length) {
        client._reconnectCount = 0
      }

      opts.host = opts.servers[client._reconnectCount].host
      opts.port = opts.servers[client._reconnectCount].port
      opts.protocol = (!opts.servers[client._reconnectCount].protocol ? opts.defaultProtocol : opts.servers[client._reconnectCount].protocol)
      opts.hostname = opts.host

      client._reconnectCount++
    }

    return protocols[opts.protocol](client, opts)
  }

  return new MqttClient(wrapper, opts)
}

module.exports = connect
module.exports.connect = connect
module.exports.MqttClient = MqttClient
module.exports.Store = Store

}).call(this,require('_process'))
},{"../client":114,"../store":120,"./tcp":116,"./tls":117,"./ws":118,"./wx":119,"_process":124,"url":144,"xtend":152}],116:[function(require,module,exports){
'use strict'
var net = require('net')

/*
  variables port and host can be removed since
  you have all required information in opts object
*/
function buildBuilder (client, opts) {
  var port, host
  opts.port = opts.port || 1883
  opts.hostname = opts.hostname || opts.host || 'localhost'

  port = opts.port
  host = opts.hostname

  return net.createConnection(port, host)
}

module.exports = buildBuilder

},{"net":29}],117:[function(require,module,exports){
'use strict'
var tls = require('tls')

function buildBuilder (mqttClient, opts) {
  var connection
  opts.port = opts.port || 8883
  opts.host = opts.hostname || opts.host || 'localhost'

  opts.rejectUnauthorized = opts.rejectUnauthorized !== false

  delete opts.path

  connection = tls.connect(opts)
  /* eslint no-use-before-define: [2, "nofunc"] */
  connection.on('secureConnect', function () {
    if (opts.rejectUnauthorized && !connection.authorized) {
      connection.emit('error', new Error('TLS not authorized'))
    } else {
      connection.removeListener('error', handleTLSerrors)
    }
  })

  function handleTLSerrors (err) {
    // How can I get verify this error is a tls error?
    if (opts.rejectUnauthorized) {
      mqttClient.emit('error', err)
    }

    // close this connection to match the behaviour of net
    // otherwise all we get is an error from the connection
    // and close event doesn't fire. This is a work around
    // to enable the reconnect code to work the same as with
    // net.createConnection
    connection.end()
  }

  connection.on('error', handleTLSerrors)
  return connection
}

module.exports = buildBuilder

},{"tls":29}],118:[function(require,module,exports){
(function (process){
'use strict'

var websocket = require('websocket-stream')
var urlModule = require('url')
var WSS_OPTIONS = [
  'rejectUnauthorized',
  'ca',
  'cert',
  'key',
  'pfx',
  'passphrase'
]
var IS_BROWSER = process.title === 'browser'

function buildUrl (opts, client) {
  var url = opts.protocol + '://' + opts.hostname + ':' + opts.port + opts.path
  if (typeof (opts.transformWsUrl) === 'function') {
    url = opts.transformWsUrl(url, opts, client)
  }
  return url
}

function setDefaultOpts (opts) {
  if (!opts.hostname) {
    opts.hostname = 'localhost'
  }
  if (!opts.port) {
    if (opts.protocol === 'wss') {
      opts.port = 443
    } else {
      opts.port = 80
    }
  }
  if (!opts.path) {
    opts.path = '/'
  }

  if (!opts.wsOptions) {
    opts.wsOptions = {}
  }
  if (!IS_BROWSER && opts.protocol === 'wss') {
    // Add cert/key/ca etc options
    WSS_OPTIONS.forEach(function (prop) {
      if (opts.hasOwnProperty(prop) && !opts.wsOptions.hasOwnProperty(prop)) {
        opts.wsOptions[prop] = opts[prop]
      }
    })
  }
}

function createWebSocket (client, opts) {
  var websocketSubProtocol =
    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)
      ? 'mqttv3.1'
      : 'mqtt'

  setDefaultOpts(opts)
  var url = buildUrl(opts, client)
  return websocket(url, [websocketSubProtocol], opts.wsOptions)
}

function buildBuilder (client, opts) {
  return createWebSocket(client, opts)
}

function buildBuilderBrowser (client, opts) {
  if (!opts.hostname) {
    opts.hostname = opts.host
  }

  if (!opts.hostname) {
    // Throwing an error in a Web Worker if no `hostname` is given, because we
    // can not determine the `hostname` automatically.  If connecting to
    // localhost, please supply the `hostname` as an argument.
    if (typeof (document) === 'undefined') {
      throw new Error('Could not determine host. Specify host manually.')
    }
    var parsed = urlModule.parse(document.URL)
    opts.hostname = parsed.hostname

    if (!opts.port) {
      opts.port = parsed.port
    }
  }
  return createWebSocket(client, opts)
}

if (IS_BROWSER) {
  module.exports = buildBuilderBrowser
} else {
  module.exports = buildBuilder
}

}).call(this,require('_process'))
},{"_process":124,"url":144,"websocket-stream":149}],119:[function(require,module,exports){
'use strict'

/* global wx */
var socketOpen = false
var socketMsgQueue = []

function sendSocketMessage (msg) {
  if (socketOpen) {
    wx.sendSocketMessage({
      data: msg.buffer || msg
    })
  } else {
    socketMsgQueue.push(msg)
  }
}

function WebSocket (url, protocols) {
  var ws = {
    OPEN: 1,
    CLOSING: 2,
    CLOSED: 3,
    readyState: socketOpen ? 1 : 0,
    send: sendSocketMessage,
    close: wx.closeSocket,
    onopen: null,
    onmessage: null,
    onclose: null,
    onerror: null
  }

  wx.connectSocket({
    url: url,
    protocols: protocols
  })
  wx.onSocketOpen(function (res) {
    ws.readyState = ws.OPEN
    socketOpen = true
    for (var i = 0; i < socketMsgQueue.length; i++) {
      sendSocketMessage(socketMsgQueue[i])
    }
    socketMsgQueue = []

    ws.onopen && ws.onopen.apply(ws, arguments)
  })
  wx.onSocketMessage(function (res) {
    ws.onmessage && ws.onmessage.apply(ws, arguments)
  })
  wx.onSocketClose(function () {
    ws.onclose && ws.onclose.apply(ws, arguments)
    ws.readyState = ws.CLOSED
    socketOpen = false
  })
  wx.onSocketError(function () {
    ws.onerror && ws.onerror.apply(ws, arguments)
    ws.readyState = ws.CLOSED
    socketOpen = false
  })

  return ws
}

var websocket = require('websocket-stream')

function buildUrl (opts, client) {
  var protocol = opts.protocol === 'wxs' ? 'wss' : 'ws'
  var url = protocol + '://' + opts.hostname + opts.path
  if (opts.port && opts.port !== 80 && opts.port !== 443) {
    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path
  }
  if (typeof (opts.transformWsUrl) === 'function') {
    url = opts.transformWsUrl(url, opts, client)
  }
  return url
}

function setDefaultOpts (opts) {
  if (!opts.hostname) {
    opts.hostname = 'localhost'
  }
  if (!opts.path) {
    opts.path = '/'
  }

  if (!opts.wsOptions) {
    opts.wsOptions = {}
  }
}

function createWebSocket (client, opts) {
  var websocketSubProtocol =
    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)
      ? 'mqttv3.1'
      : 'mqtt'

  setDefaultOpts(opts)
  var url = buildUrl(opts, client)
  return websocket(WebSocket(url, [websocketSubProtocol]))
}

function buildBuilder (client, opts) {
  opts.hostname = opts.hostname || opts.host

  if (!opts.hostname) {
    throw new Error('Could not determine host. Specify host manually.')
  }

  return createWebSocket(client, opts)
}

module.exports = buildBuilder

},{"websocket-stream":149}],120:[function(require,module,exports){
(function (process){
'use strict'

/**
 * Module dependencies
 */
var xtend = require('xtend')

var Readable = require('readable-stream').Readable
var streamsOpts = { objectMode: true }
var defaultStoreOptions = {
  clean: true
}

/**
 * es6-map can preserve insertion order even if ES version is older.
 *
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Description
 * It should be noted that a Map which is a map of an object, especially
 * a dictionary of dictionaries, will only map to the object's insertion
 * order. In ES2015 this is ordered for objects but for older versions of
 * ES, this may be random and not ordered.
 *
 */
var Map = require('es6-map')

/**
 * In-memory implementation of the message store
 * This can actually be saved into files.
 *
 * @param {Object} [options] - store options
 */
function Store (options) {
  if (!(this instanceof Store)) {
    return new Store(options)
  }

  this.options = options || {}

  // Defaults
  this.options = xtend(defaultStoreOptions, options)

  this._inflights = new Map()
}

/**
 * Adds a packet to the store, a packet is
 * anything that has a messageId property.
 *
 */
Store.prototype.put = function (packet, cb) {
  this._inflights.set(packet.messageId, packet)

  if (cb) {
    cb()
  }

  return this
}

/**
 * Creates a stream with all the packets in the store
 *
 */
Store.prototype.createStream = function () {
  var stream = new Readable(streamsOpts)
  var destroyed = false
  var values = []
  var i = 0

  this._inflights.forEach(function (value, key) {
    values.push(value)
  })

  stream._read = function () {
    if (!destroyed && i < values.length) {
      this.push(values[i++])
    } else {
      this.push(null)
    }
  }

  stream.destroy = function () {
    if (destroyed) {
      return
    }

    var self = this

    destroyed = true

    process.nextTick(function () {
      self.emit('close')
    })
  }

  return stream
}

/**
 * deletes a packet from the store.
 */
Store.prototype.del = function (packet, cb) {
  packet = this._inflights.get(packet.messageId)
  if (packet) {
    this._inflights.delete(packet.messageId)
    cb(null, packet)
  } else if (cb) {
    cb(new Error('missing packet'))
  }

  return this
}

/**
 * get a packet from the store.
 */
Store.prototype.get = function (packet, cb) {
  packet = this._inflights.get(packet.messageId)
  if (packet) {
    cb(null, packet)
  } else if (cb) {
    cb(new Error('missing packet'))
  }

  return this
}

/**
 * Close the store
 */
Store.prototype.close = function (cb) {
  if (this.options.clean) {
    this._inflights = null
  }
  if (cb) {
    cb()
  }
}

module.exports = Store

}).call(this,require('_process'))
},{"_process":124,"es6-map":87,"readable-stream":138,"xtend":152}],121:[function(require,module,exports){
'use strict'

/**
 * Validate a topic to see if it's valid or not.
 * A topic is valid if it follow below rules:
 * - Rule #1: If any part of the topic is not `+` or `#`, then it must not contain `+` and '#'
 * - Rule #2: Part `#` must be located at the end of the mailbox
 *
 * @param {String} topic - A topic
 * @returns {Boolean} If the topic is valid, returns true. Otherwise, returns false.
 */
function validateTopic (topic) {
  var parts = topic.split('/')

  for (var i = 0; i < parts.length; i++) {
    if (parts[i] === '+') {
      continue
    }

    if (parts[i] === '#') {
      // for Rule #2
      return i === parts.length - 1
    }

    if (parts[i].indexOf('+') !== -1 || parts[i].indexOf('#') !== -1) {
      return false
    }
  }

  return true
}

/**
 * Validate an array of topics to see if any of them is valid or not
  * @param {Array} topics - Array of topics
 * @returns {String} If the topics is valid, returns null. Otherwise, returns the invalid one
 */
function validateTopics (topics) {
  if (topics.length === 0) {
    return 'empty_topic_list'
  }
  for (var i = 0; i < topics.length; i++) {
    if (!validateTopic(topics[i])) {
      return topics[i]
    }
  }
  return null
}

module.exports = {
  validateTopics: validateTopics
}

},{}],122:[function(require,module,exports){
var wrappy = require('wrappy')
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}

},{"wrappy":151}],123:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


}).call(this,require('_process'))
},{"_process":124}],124:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],125:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],126:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],127:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],128:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":126,"./encode":127}],129:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":130}],130:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};
},{"./_stream_readable":132,"./_stream_writable":134,"core-util-is":34,"inherits":102,"process-nextick-args":123}],131:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":133,"core-util-is":34,"inherits":102}],132:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":130,"./internal/streams/BufferList":135,"./internal/streams/destroy":136,"./internal/streams/stream":137,"_process":124,"core-util-is":34,"events":31,"inherits":102,"isarray":104,"process-nextick-args":123,"safe-buffer":140,"string_decoder/":142,"util":29}],133:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":130,"core-util-is":34,"inherits":102}],134:[function(require,module,exports){
(function (process,global,setImmediate){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("timers").setImmediate)
},{"./_stream_duplex":130,"./internal/streams/destroy":136,"./internal/streams/stream":137,"_process":124,"core-util-is":34,"inherits":102,"process-nextick-args":123,"safe-buffer":140,"timers":143,"util-deprecate":146}],135:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":140,"util":29}],136:[function(require,module,exports){
'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":123}],137:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":31}],138:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":130,"./lib/_stream_passthrough.js":131,"./lib/_stream_readable.js":132,"./lib/_stream_transform.js":133,"./lib/_stream_writable.js":134}],139:[function(require,module,exports){
'use strict'

function ReInterval (callback, interval, args) {
  var self = this;

  this._callback = callback;
  this._args = args;

  this._interval = setInterval(callback, interval, this._args);

  this.reschedule = function (interval) {
    // if no interval entered, use the interval passed in on creation
    if (!interval)
      interval = self._interval;

    if (self._interval)
      clearInterval(self._interval);
    self._interval = setInterval(self._callback, interval, self._args);
  };

  this.clear = function () {
    if (self._interval) {
      clearInterval(self._interval);
      self._interval = undefined;
    }
  };
  
  this.destroy = function () {
    if (self._interval) {
      clearInterval(self._interval);
    }
    self._callback = undefined;
    self._interval = undefined;
    self._args = undefined;
  };
}

function reInterval () {
  if (typeof arguments[0] !== 'function')
    throw new Error('callback needed');
  if (typeof arguments[1] !== 'number')
    throw new Error('interval needed');

  var args;

  if (arguments.length > 0) {
    args = new Array(arguments.length - 2);

    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i + 2];
    }
  }

  return new ReInterval(arguments[0], arguments[1], args);
}

module.exports = reInterval;

},{}],140:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":33}],141:[function(require,module,exports){
module.exports = shift

function shift (stream) {
  var rs = stream._readableState
  if (!rs) return null
  return rs.objectMode ? stream.read() : stream.read(getStateLength(rs))
}

function getStateLength (state) {
  if (state.buffer.length) {
    // Since node 6.3.0 state.buffer is a BufferList not an array
    if (state.buffer.head) {
      return state.buffer.head.data.length
    }

    return state.buffer[0].length
  }

  return state.length
}

},{}],142:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":140}],143:[function(require,module,exports){
(function (setImmediate,clearImmediate){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate)
},{"process/browser.js":124,"timers":143}],144:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":145,"punycode":125,"querystring":128}],145:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],146:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],147:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],148:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":147,"_process":124,"inherits":102}],149:[function(require,module,exports){
(function (process,global){
'use strict'

var Transform = require('readable-stream').Transform
var duplexify = require('duplexify')
var WS = require('ws')
var Buffer = require('safe-buffer').Buffer

module.exports = WebSocketStream

function buildProxy (options, socketWrite, socketEnd) {
  var proxy = new Transform({
    objectMode: options.objectMode
  })

  proxy._write = socketWrite
  proxy._flush = socketEnd

  return proxy
}

function WebSocketStream(target, protocols, options) {
  var stream, socket

  var isBrowser = process.title === 'browser'
  var isNative = !!global.WebSocket
  var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode

  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {
    // accept the "options" Object as the 2nd argument
    options = protocols
    protocols = null

    if (typeof options.protocol === 'string' || Array.isArray(options.protocol)) {
      protocols = options.protocol;
    }
  }

  if (!options) options = {}

  if (options.objectMode === undefined) {
    options.objectMode = !(options.binary === true || options.binary === undefined)
  }

  var proxy = buildProxy(options, socketWrite, socketEnd)

  if (!options.objectMode) {
    proxy._writev = writev
  }

  // browser only: sets the maximum socket buffer size before throttling
  var bufferSize = options.browserBufferSize || 1024 * 512

  // browser only: how long to wait when throttling
  var bufferTimeout = options.browserBufferTimeout || 1000

  // use existing WebSocket object that was passed in
  if (typeof target === 'object') {
    socket = target
  // otherwise make a new one
  } else {
    // special constructor treatment for native websockets in browsers, see
    // https://github.com/maxogden/websocket-stream/issues/82
    if (isNative && isBrowser) {
      socket = new WS(target, protocols)
    } else {
      socket = new WS(target, protocols, options)
    }

    socket.binaryType = 'arraybuffer'
  }

  // was already open when passed in
  if (socket.readyState === socket.OPEN) {
    stream = proxy
  } else {
    stream = stream = duplexify(undefined, undefined, options)
    if (!options.objectMode) {
      stream._writev = writev
    }
    socket.onopen = onopen
  }

  stream.socket = socket

  socket.onclose = onclose
  socket.onerror = onerror
  socket.onmessage = onmessage

  proxy.on('close', destroy)

  var coerceToBuffer = !options.objectMode

  function socketWriteNode(chunk, enc, next) {
    // avoid errors, this never happens unless
    // destroy() is called
    if (socket.readyState !== socket.OPEN) {
      next()
      return
    }

    if (coerceToBuffer && typeof chunk === 'string') {
      chunk = Buffer.from(chunk, 'utf8')
    }
    socket.send(chunk, next)
  }

  function socketWriteBrowser(chunk, enc, next) {
    if (socket.bufferedAmount > bufferSize) {
      setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next)
      return
    }

    if (coerceToBuffer && typeof chunk === 'string') {
      chunk = Buffer.from(chunk, 'utf8')
    }

    try {
      socket.send(chunk)
    } catch(err) {
      return next(err)
    }

    next()
  }

  function socketEnd(done) {
    socket.close()
    done()
  }

  function onopen() {
    stream.setReadable(proxy)
    stream.setWritable(proxy)
    stream.emit('connect')
  }

  function onclose() {
    stream.end()
    stream.destroy()
  }

  function onerror(err) {
    stream.destroy(err)
  }

  function onmessage(event) {
    var data = event.data
    if (data instanceof ArrayBuffer) data = Buffer.from(data)
    else data = Buffer.from(data, 'utf8')
    proxy.push(data)
  }

  function destroy() {
    socket.close()
  }

  // this is to be enabled only if objectMode is false
  function writev (chunks, cb) {
    var buffers = new Array(chunks.length)
    for (var i = 0; i < chunks.length; i++) {
      if (typeof chunks[i].chunk === 'string') {
        buffers[i] = Buffer.from(chunks[i], 'utf8')
      } else {
        buffers[i] = chunks[i].chunk
      }
    }

    this._write(Buffer.concat(buffers), 'binary', cb)
  }

  return stream
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":124,"duplexify":37,"readable-stream":138,"safe-buffer":140,"ws":150}],150:[function(require,module,exports){

var ws = null

if (typeof WebSocket !== 'undefined') {
  ws = WebSocket
} else if (typeof MozWebSocket !== 'undefined') {
  ws = MozWebSocket
} else if (typeof window !== 'undefined') {
  ws = window.WebSocket || window.MozWebSocket
}

module.exports = ws

},{}],151:[function(require,module,exports){
// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}

},{}],152:[function(require,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],153:[function(require,module,exports){
(function (__dirname){
"use strict";

var cov_1niw1c7wxr = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\BaseClient.js";
  var hash = "a65ac7e44a931620981206c2cc7c9efcfc01cba4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\BaseClient.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "1": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 12
        }
      },
      "2": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 19
        }
      },
      "3": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "4": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "5": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 94
        }
      },
      "6": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "7": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 74
        }
      },
      "8": {
        start: {
          line: 35,
          column: 9
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "9": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 71
        }
      },
      "10": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "11": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "12": {
        start: {
          line: 42,
          column: 9
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "13": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 70
        }
      },
      "14": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 54
        }
      },
      "15": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "16": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 27
        }
      },
      "17": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "18": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 67,
          column: 4
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "20": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 85
        }
      },
      "21": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "22": {
        start: {
          line: 57,
          column: 9
        },
        end: {
          line: 67,
          column: 4
        }
      },
      "23": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "24": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 80
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 69
        }
      },
      "26": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "28": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 82
        }
      },
      "29": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "30": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "31": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 56
        }
      },
      "33": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "34": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "35": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 98,
          column: 7
        }
      },
      "36": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 52
        }
      },
      "37": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 36
        }
      },
      "38": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "39": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 113,
          column: 7
        }
      },
      "40": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 84
        }
      },
      "41": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "42": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 114,
          column: 31
        }
      },
      "43": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "44": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "45": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 83
        }
      },
      "46": {
        start: {
          line: 121,
          column: 11
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "47": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 80
        }
      },
      "48": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "49": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 109
        }
      },
      "50": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 108
        }
      },
      "51": {
        start: {
          line: 134,
          column: 6
        },
        end: {
          line: 134,
          column: 32
        }
      },
      "52": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 135,
          column: 52
        }
      },
      "53": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 139,
          column: 7
        }
      },
      "54": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 69
        }
      },
      "55": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "56": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 52
        }
      },
      "57": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 45
        }
      },
      "58": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 24
        }
      },
      "59": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "60": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 54
        }
      },
      "61": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 138
        }
      },
      "62": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "63": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 159,
          column: 138
        }
      },
      "64": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 160,
          column: 26
        }
      },
      "65": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 41
        }
      },
      "66": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 112
        }
      },
      "67": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 136
        }
      },
      "68": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 57
        }
      },
      "69": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 187,
          column: 7
        }
      },
      "70": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 172,
          column: 87
        }
      },
      "71": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "72": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "73": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 186,
          column: 7
        }
      },
      "74": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 88
        }
      },
      "75": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 49
        }
      },
      "76": {
        start: {
          line: 180,
          column: 13
        },
        end: {
          line: 186,
          column: 7
        }
      },
      "77": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 89
        }
      },
      "78": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 50
        }
      },
      "79": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 89
        }
      },
      "80": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 50
        }
      },
      "81": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "82": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 67
        }
      },
      "83": {
        start: {
          line: 191,
          column: 6
        },
        end: {
          line: 191,
          column: 31
        }
      },
      "84": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 30
        }
      },
      "85": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 205,
          column: 7
        }
      },
      "86": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 196,
          column: 72
        }
      },
      "87": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 31
        }
      },
      "88": {
        start: {
          line: 198,
          column: 21
        },
        end: {
          line: 198,
          column: 29
        }
      },
      "89": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 203,
          column: 7
        }
      },
      "90": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 132
        }
      },
      "91": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 39
        }
      },
      "92": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 46
        }
      },
      "93": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 32
        }
      },
      "94": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "95": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "96": {
        start: {
          line: 213,
          column: 10
        },
        end: {
          line: 213,
          column: 40
        }
      },
      "97": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 73
        }
      },
      "98": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 29
        }
      },
      "99": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 221,
          column: 7
        }
      },
      "100": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 77
        }
      },
      "101": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 150,
            column: 3
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 152,
            column: 2
          },
          end: {
            line: 152,
            column: 3
          }
        },
        loc: {
          start: {
            line: 152,
            column: 42
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 152
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 157,
            column: 2
          },
          end: {
            line: 157,
            column: 3
          }
        },
        loc: {
          start: {
            line: 157,
            column: 32
          },
          end: {
            line: 164,
            column: 3
          }
        },
        line: 157
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 166,
            column: 2
          },
          end: {
            line: 166,
            column: 3
          }
        },
        loc: {
          start: {
            line: 166,
            column: 11
          },
          end: {
            line: 206,
            column: 3
          }
        },
        line: 166
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 171,
            column: 29
          }
        },
        loc: {
          start: {
            line: 171,
            column: 34
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 171
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 189,
            column: 27
          }
        },
        loc: {
          start: {
            line: 189,
            column: 32
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 189
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 195,
            column: 26
          },
          end: {
            line: 195,
            column: 27
          }
        },
        loc: {
          start: {
            line: 195,
            column: 37
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 195
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        loc: {
          start: {
            line: 208,
            column: 14
          },
          end: {
            line: 224,
            column: 3
          }
        },
        line: 208
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 213,
            column: 30
          },
          end: {
            line: 213,
            column: 31
          }
        },
        loc: {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 213,
            column: 38
          }
        },
        line: 213
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 219,
            column: 25
          },
          end: {
            line: 219,
            column: 26
          }
        },
        loc: {
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 219
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 37,
            column: 5
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 67,
            column: 4
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 67,
            column: 4
          }
        }, {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 67,
            column: 4
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 67,
            column: 4
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 67,
            column: 4
          }
        }, {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 67,
            column: 4
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 81,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 81,
            column: 7
          }
        }, {
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 81,
            column: 7
          }
        }],
        line: 77
      },
      "11": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }],
        line: 92
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 6
          },
          end: {
            line: 98,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 6
          },
          end: {
            line: 98,
            column: 7
          }
        }, {
          start: {
            line: 94,
            column: 6
          },
          end: {
            line: 98,
            column: 7
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }, {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }],
        line: 104
      },
      "14": {
        loc: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 113,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 113,
            column: 7
          }
        }, {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 113,
            column: 7
          }
        }],
        line: 105
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 105,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 36
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        }, {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        }],
        line: 118
      },
      "17": {
        loc: {
          start: {
            line: 121,
            column: 11
          },
          end: {
            line: 123,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 11
          },
          end: {
            line: 123,
            column: 7
          }
        }, {
          start: {
            line: 121,
            column: 11
          },
          end: {
            line: 123,
            column: 7
          }
        }],
        line: 121
      },
      "18": {
        loc: {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }],
        line: 125
      },
      "19": {
        loc: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 17
          }
        }, {
          start: {
            line: 125,
            column: 21
          },
          end: {
            line: 125,
            column: 36
          }
        }],
        line: 125
      },
      "20": {
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 127,
            column: 69
          }
        }, {
          start: {
            line: 127,
            column: 72
          },
          end: {
            line: 127,
            column: 108
          }
        }],
        line: 127
      },
      "21": {
        loc: {
          start: {
            line: 130,
            column: 20
          },
          end: {
            line: 130,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 68
          }
        }, {
          start: {
            line: 130,
            column: 71
          },
          end: {
            line: 130,
            column: 107
          }
        }],
        line: 130
      },
      "22": {
        loc: {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 139,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 139,
            column: 7
          }
        }, {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 139,
            column: 7
          }
        }],
        line: 137
      },
      "23": {
        loc: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }],
        line: 143
      },
      "24": {
        loc: {
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 49
          }
        }, {
          start: {
            line: 153,
            column: 51
          },
          end: {
            line: 153,
            column: 53
          }
        }],
        line: 153
      },
      "25": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }],
        line: 158
      },
      "26": {
        loc: {
          start: {
            line: 158,
            column: 7
          },
          end: {
            line: 158,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 7
          },
          end: {
            line: 158,
            column: 31
          }
        }, {
          start: {
            line: 158,
            column: 35
          },
          end: {
            line: 158,
            column: 58
          }
        }, {
          start: {
            line: 158,
            column: 62
          },
          end: {
            line: 158,
            column: 86
          }
        }],
        line: 158
      },
      "27": {
        loc: {
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 186,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 186,
            column: 7
          }
        }, {
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 186,
            column: 7
          }
        }],
        line: 177
      },
      "28": {
        loc: {
          start: {
            line: 180,
            column: 13
          },
          end: {
            line: 186,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 13
          },
          end: {
            line: 186,
            column: 7
          }
        }, {
          start: {
            line: 180,
            column: 13
          },
          end: {
            line: 186,
            column: 7
          }
        }],
        line: 180
      },
      "29": {
        loc: {
          start: {
            line: 199,
            column: 6
          },
          end: {
            line: 203,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 6
          },
          end: {
            line: 203,
            column: 7
          }
        }, {
          start: {
            line: 199,
            column: 6
          },
          end: {
            line: 203,
            column: 7
          }
        }],
        line: 199
      },
      "30": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        }, {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        }],
        line: 209
      },
      "31": {
        loc: {
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        }, {
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        }],
        line: 210
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "a65ac7e44a931620981206c2cc7c9efcfc01cba4"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _events = _interopRequireDefault(require("events"));

var _mqtt = _interopRequireDefault(require("mqtt"));

var _loglevel = _interopRequireDefault(require("loglevel"));

var _util = require("./util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var QUICKSTART_ORG_ID = (cov_1niw1c7wxr.s[0]++, "quickstart");

var BaseClient =
/*#__PURE__*/
function (_ref) {
  _inherits(BaseClient, _ref);

  function BaseClient(config) {
    var _this;

    _classCallCheck(this, BaseClient);

    cov_1niw1c7wxr.f[0]++;
    cov_1niw1c7wxr.s[1]++;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseClient).call(this));
    cov_1niw1c7wxr.s[2]++;
    _this.log = _loglevel["default"];
    cov_1niw1c7wxr.s[3]++;

    _this.log.setDefaultLevel("warn"); //removed as now we have support of domain name in config.

    /*    this.staging = false;
        if(process.env.STAGING === '1') {
          this.staging = true;
        }*/


    cov_1niw1c7wxr.s[4]++;

    if (!config) {
      cov_1niw1c7wxr.b[0][0]++;
      cov_1niw1c7wxr.s[5]++;
      throw new Error('[BaseClient:constructor] Client instantiated with missing properties');
    } else {
      cov_1niw1c7wxr.b[0][1]++;
    }

    cov_1niw1c7wxr.s[6]++;

    if (!(0, _util.isDefined)(config.org)) {
      cov_1niw1c7wxr.b[1][0]++;
      cov_1niw1c7wxr.s[7]++;
      throw new Error('[BaseClient:constructor] config must contain org');
    } else {
      cov_1niw1c7wxr.b[1][1]++;
      cov_1niw1c7wxr.s[8]++;

      if (!(0, _util.isString)(config.org)) {
        cov_1niw1c7wxr.b[2][0]++;
        cov_1niw1c7wxr.s[9]++;
        throw new Error('[BaseClient:constructor] org must be a string');
      } else {
        cov_1niw1c7wxr.b[2][1]++;
      }
    }

    cov_1niw1c7wxr.s[10]++;

    if (!(0, _util.isDefined)(config.id)) {
      cov_1niw1c7wxr.b[3][0]++;
      cov_1niw1c7wxr.s[11]++;
      throw new Error('[BaseClient:constructor] config must contain id');
    } else {
      cov_1niw1c7wxr.b[3][1]++;
      cov_1niw1c7wxr.s[12]++;

      if (!(0, _util.isString)(config.id)) {
        cov_1niw1c7wxr.b[4][0]++;
        cov_1niw1c7wxr.s[13]++;
        throw new Error('[BaseClient:constructor] id must be a string');
      } else {
        cov_1niw1c7wxr.b[4][1]++;
      }
    }

    cov_1niw1c7wxr.s[14]++;
    _this.domainName = "internetofthings.ibmcloud.com";
    cov_1niw1c7wxr.s[15]++;
    _this.mqttServer = "";
    cov_1niw1c7wxr.s[16]++;
    _this.enforceWs = false;
    cov_1niw1c7wxr.s[17]++;
    _this.noSSL = false; // Parse mqtt-server & domain property. mqtt-server takes precedence over domain

    cov_1niw1c7wxr.s[18]++;

    if ((0, _util.isDefined)(config['mqtt-server'])) {
      cov_1niw1c7wxr.b[5][0]++;
      cov_1niw1c7wxr.s[19]++;

      if (!(0, _util.isString)(config['mqtt-server'])) {
        cov_1niw1c7wxr.b[6][0]++;
        cov_1niw1c7wxr.s[20]++;
        throw new Error('[BaseClient:constructor] mqtt-server must be a string');
      } else {
        cov_1niw1c7wxr.b[6][1]++;
      }

      cov_1niw1c7wxr.s[21]++;
      _this.mqttServer = config['mqtt-server'];
    } else {
      cov_1niw1c7wxr.b[5][1]++;
      cov_1niw1c7wxr.s[22]++;

      if ((0, _util.isDefined)(config['domain'])) {
        cov_1niw1c7wxr.b[7][0]++;
        cov_1niw1c7wxr.s[23]++;

        if (!(0, _util.isString)(config['domain'])) {
          cov_1niw1c7wxr.b[8][0]++;
          cov_1niw1c7wxr.s[24]++;
          throw new Error('[BaseClient:constructor] domain must be a string');
        } else {
          cov_1niw1c7wxr.b[8][1]++;
        }

        cov_1niw1c7wxr.s[25]++;
        _this.mqttServer = config.org + ".messaging." + config.domain;
        cov_1niw1c7wxr.s[26]++;
        _this.domainName = config.domain;
        cov_1niw1c7wxr.s[27]++;
        config['mqtt-server'] = _this.mqttServer;
      } else {
        cov_1niw1c7wxr.b[7][1]++;
        cov_1niw1c7wxr.s[28]++;
        _this.mqttServer = config.org + ".messaging.internetofthings.ibmcloud.com";
        cov_1niw1c7wxr.s[29]++;
        config['mqtt-server'] = _this.mqttServer;
      }
    } //property to enforce Websockets even in Node
    // CAUTION : This is deprecated and may be removed in future
    // Parse enforce-ws property


    cov_1niw1c7wxr.s[30]++;

    if ((0, _util.isDefined)(config['enforce-ws'])) {
      cov_1niw1c7wxr.b[9][0]++;
      cov_1niw1c7wxr.s[31]++;

      if (!(0, _util.isBoolean)(config['enforce-ws'])) {
        cov_1niw1c7wxr.b[10][0]++;
        cov_1niw1c7wxr.s[32]++;
        throw new Error('enforce-ws must be a boolean');
      } else {
        cov_1niw1c7wxr.b[10][1]++;
      }

      cov_1niw1c7wxr.s[33]++;
      _this.enforceWs = config['enforce-ws'];
    } else {
      cov_1niw1c7wxr.b[9][1]++;
    } //property to connect to unsecured endpoint
    // CAUTION : This is deprecated and may be removed in future
    // Parse enforce-ws property


    cov_1niw1c7wxr.s[34]++;

    if ((0, _util.isDefined)(config['no-ssl'])) {
      cov_1niw1c7wxr.b[11][0]++;
      cov_1niw1c7wxr.s[35]++;

      if (!(0, _util.isBoolean)(config['no-ssl'])) {
        cov_1niw1c7wxr.b[12][0]++;
        cov_1niw1c7wxr.s[36]++;
        throw new Error('no-ssl must be a boolean');
      } else {
        cov_1niw1c7wxr.b[12][1]++;
      }

      cov_1niw1c7wxr.s[37]++;
      _this.noSSL = config['no-ssl'];
    } else {
      cov_1niw1c7wxr.b[11][1]++;
    }

    cov_1niw1c7wxr.s[38]++;

    if (config.org === QUICKSTART_ORG_ID) {
      cov_1niw1c7wxr.b[13][0]++;
      cov_1niw1c7wxr.s[39]++;

      if ((cov_1niw1c7wxr.b[15][0]++, (0, _util.isNode)()) && (cov_1niw1c7wxr.b[15][1]++, !_this.enforceWs)) {
        cov_1niw1c7wxr.b[14][0]++;
        cov_1niw1c7wxr.s[40]++;
        _this.host = "tcp://quickstart.messaging.internetofthings.ibmcloud.com:1883";
      } else {
        cov_1niw1c7wxr.b[14][1]++;
        cov_1niw1c7wxr.s[41]++;
        _this.host = "ws://quickstart.messaging.internetofthings.ibmcloud.com:1883";
      }

      cov_1niw1c7wxr.s[42]++;
      _this.isQuickstart = true;
      cov_1niw1c7wxr.s[43]++;
      _this.mqttConfig = {};
    } else {
      cov_1niw1c7wxr.b[13][1]++;
      cov_1niw1c7wxr.s[44]++;

      if (!(0, _util.isDefined)(config['auth-token'])) {
        cov_1niw1c7wxr.b[16][0]++;
        cov_1niw1c7wxr.s[45]++;
        throw new Error('[BaseClient:constructor] config must contain auth-token');
      } else {
        cov_1niw1c7wxr.b[16][1]++;
        cov_1niw1c7wxr.s[46]++;

        if (!(0, _util.isString)(config['auth-token'])) {
          cov_1niw1c7wxr.b[17][0]++;
          cov_1niw1c7wxr.s[47]++;
          throw new Error('[BaseClient:constructor] auth-token must be a string');
        } else {
          cov_1niw1c7wxr.b[17][1]++;
        }
      }

      cov_1niw1c7wxr.s[48]++;

      if ((cov_1niw1c7wxr.b[19][0]++, (0, _util.isNode)()) && (cov_1niw1c7wxr.b[19][1]++, !_this.enforceWs)) {
        cov_1niw1c7wxr.b[18][0]++;
        cov_1niw1c7wxr.s[49]++;
        _this.host = _this.noSSL ? (cov_1niw1c7wxr.b[20][0]++, "tcp://" + _this.mqttServer + ":1883") : (cov_1niw1c7wxr.b[20][1]++, "ssl://" + _this.mqttServer + ":8883");
      } else {
        cov_1niw1c7wxr.b[18][1]++;
        cov_1niw1c7wxr.s[50]++;
        _this.host = _this.noSSL ? (cov_1niw1c7wxr.b[21][0]++, "ws://" + _this.mqttServer + ":1883") : (cov_1niw1c7wxr.b[21][1]++, "wss://" + _this.mqttServer + ":8883");
      }

      cov_1niw1c7wxr.s[51]++;
      _this.isQuickstart = false;
      cov_1niw1c7wxr.s[52]++;
      _this.mqttConfig = (0, _util.initializeMqttConfig)(config);
      cov_1niw1c7wxr.s[53]++;

      if ((0, _util.isNode)()) {
        cov_1niw1c7wxr.b[22][0]++;
        cov_1niw1c7wxr.s[54]++;
        _this.mqttConfig.caPaths = [__dirname + '/IoTFoundation.pem'];
      } else {
        cov_1niw1c7wxr.b[22][1]++;
      }
    } // Support for passing clean session from config


    cov_1niw1c7wxr.s[55]++;

    if ((0, _util.isDefined)(config['clean-session'])) {
      cov_1niw1c7wxr.b[23][0]++;
      cov_1niw1c7wxr.s[56]++;

      _this.setCleanSession(config['clean-session']);
    } else {
      cov_1niw1c7wxr.b[23][1]++;
    }

    cov_1niw1c7wxr.s[57]++;
    _this.mqttConfig.connectTimeout = 90 * 1000;
    cov_1niw1c7wxr.s[58]++;
    _this.retryCount = 0;
    cov_1niw1c7wxr.s[59]++;
    _this.isConnected = false;
    return _this;
  }

  _createClass(BaseClient, [{
    key: "setKeepAliveInterval",
    value: function setKeepAliveInterval(keepAliveInterval) {
      cov_1niw1c7wxr.f[1]++;
      cov_1niw1c7wxr.s[60]++;
      this.mqttConfig.keepalive = (cov_1niw1c7wxr.b[24][0]++, keepAliveInterval) || (cov_1niw1c7wxr.b[24][1]++, 60);
      cov_1niw1c7wxr.s[61]++;
      this.log.debug("[BaseClient:setKeepAliveInterval] Connection Keep Alive Interval value set to " + this.mqttConfig.keepalive + " Seconds");
    }
  }, {
    key: "setCleanSession",
    value: function setCleanSession(cleanSession) {
      cov_1niw1c7wxr.f[2]++;
      cov_1niw1c7wxr.s[62]++;

      if ((cov_1niw1c7wxr.b[26][0]++, !(0, _util.isBoolean)(cleanSession)) && (cov_1niw1c7wxr.b[26][1]++, cleanSession !== 'true') && (cov_1niw1c7wxr.b[26][2]++, cleanSession !== 'false')) {
        cov_1niw1c7wxr.b[25][0]++;
        cov_1niw1c7wxr.s[63]++;
        this.log.debug("[BaseClient:setCleanSession] Value given for cleanSession is " + cleanSession + " , is not a Boolean, setting to true");
        cov_1niw1c7wxr.s[64]++;
        cleanSession = true;
      } else {
        cov_1niw1c7wxr.b[25][1]++;
      }

      cov_1niw1c7wxr.s[65]++;
      this.mqttConfig.clean = cleanSession;
      cov_1niw1c7wxr.s[66]++;
      this.log.debug("[BaseClient:setCleanSession] Connection Clean Session value set to " + this.mqttConfig.clean);
    }
  }, {
    key: "connect",
    value: function connect() {
      var _this2 = this;

      cov_1niw1c7wxr.f[3]++;
      cov_1niw1c7wxr.s[67]++;
      this.log.info("[BaseClient:connect] Connecting to IoTF with host : " + this.host + " and with client id : " + this.mqttConfig.clientId);
      cov_1niw1c7wxr.s[68]++;
      this.mqtt = _mqtt["default"].connect(this.host, this.mqttConfig);
      cov_1niw1c7wxr.s[69]++;
      this.mqtt.on('offline', function () {
        cov_1niw1c7wxr.f[4]++;
        cov_1niw1c7wxr.s[70]++;

        _this2.log.warn("[BaseClient:connect] Iotfclient is offline. Retrying connection");

        cov_1niw1c7wxr.s[71]++;
        _this2.isConnected = false;
        cov_1niw1c7wxr.s[72]++;
        _this2.retryCount++;
        cov_1niw1c7wxr.s[73]++;

        if (_this2.retryCount < 5) {
          cov_1niw1c7wxr.b[27][0]++;
          cov_1niw1c7wxr.s[74]++;

          _this2.log.debug("[BaseClient:connect] Retry in 3 sec. Count : " + _this2.retryCount);

          cov_1niw1c7wxr.s[75]++;
          _this2.mqtt.options.reconnectPeriod = 3000;
        } else {
          cov_1niw1c7wxr.b[27][1]++;
          cov_1niw1c7wxr.s[76]++;

          if (_this2.retryCount < 10) {
            cov_1niw1c7wxr.b[28][0]++;
            cov_1niw1c7wxr.s[77]++;

            _this2.log.debug("[BaseClient:connect] Retry in 10 sec. Count : " + _this2.retryCount);

            cov_1niw1c7wxr.s[78]++;
            _this2.mqtt.options.reconnectPeriod = 10000;
          } else {
            cov_1niw1c7wxr.b[28][1]++;
            cov_1niw1c7wxr.s[79]++;

            _this2.log.debug("[BaseClient:connect] Retry in 60 sec. Count : " + _this2.retryCount);

            cov_1niw1c7wxr.s[80]++;
            _this2.mqtt.options.reconnectPeriod = 60000;
          }
        }
      });
      cov_1niw1c7wxr.s[81]++;
      this.mqtt.on('close', function () {
        cov_1niw1c7wxr.f[5]++;
        cov_1niw1c7wxr.s[82]++;

        _this2.log.info("[BaseClient:onClose] Connection was closed.");

        cov_1niw1c7wxr.s[83]++;
        _this2.isConnected = false;
        cov_1niw1c7wxr.s[84]++;

        _this2.emit('disconnect');
      });
      cov_1niw1c7wxr.s[85]++;
      this.mqtt.on('error', function (error) {
        cov_1niw1c7wxr.f[6]++;
        cov_1niw1c7wxr.s[86]++;

        _this2.log.error("[BaseClient:onError] Connection Error :: " + error);

        cov_1niw1c7wxr.s[87]++;
        _this2.isConnected = false;
        var errorMsg = (cov_1niw1c7wxr.s[88]++, '' + error);
        cov_1niw1c7wxr.s[89]++;

        if (errorMsg.indexOf('Not authorized') > -1) {
          cov_1niw1c7wxr.b[29][0]++;
          cov_1niw1c7wxr.s[90]++;

          _this2.log.error("[BaseClient:onError] One or more connection parameters are wrong. Update the configuration and try again.");

          cov_1niw1c7wxr.s[91]++;
          _this2.mqtt.reconnecting = false;
          cov_1niw1c7wxr.s[92]++;
          _this2.mqtt.options.reconnectPeriod = 0;
        } else {
          cov_1niw1c7wxr.b[29][1]++;
        }

        cov_1niw1c7wxr.s[93]++;

        _this2.emit('error', error);
      });
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      var _this3 = this;

      cov_1niw1c7wxr.f[7]++;
      cov_1niw1c7wxr.s[94]++;

      if (!this.isConnected) {
        cov_1niw1c7wxr.b[30][0]++;
        cov_1niw1c7wxr.s[95]++;

        if (this.mqtt) {
          cov_1niw1c7wxr.b[31][0]++;
          cov_1niw1c7wxr.s[96]++;
          // The client is disconnected, but the reconnect thread
          // is running. Need to stop it.
          this.mqtt.end(true, function () {
            cov_1niw1c7wxr.f[8]++;
          });
        } else {
          cov_1niw1c7wxr.b[31][1]++;
        }

        cov_1niw1c7wxr.s[97]++;
        throw new Error("[BaseClient:disconnect] Client is not connected");
      } else {
        cov_1niw1c7wxr.b[30][1]++;
      }

      cov_1niw1c7wxr.s[98]++;
      this.isConnected = false;
      cov_1niw1c7wxr.s[99]++;
      this.mqtt.end(false, function () {
        cov_1niw1c7wxr.f[9]++;
        cov_1niw1c7wxr.s[100]++;

        _this3.log.info("[BaseClient:disconnect] Disconnected from the client.");
      });
      cov_1niw1c7wxr.s[101]++;
      delete this.mqtt;
    }
  }]);

  return BaseClient;
}((_events["default"].EventEmitter));

exports["default"] = BaseClient;

}).call(this,"/src/wiotp/sdk")
},{"./util":163,"events":31,"loglevel":106,"mqtt":115}],154:[function(require,module,exports){
"use strict";

var cov_rvs8xv995 = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\ApiClient.js";
  var hash = "453204b231e6c1eaab3c6f80f0fbdae5a7452449";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\ApiClient.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 13
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "1": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "2": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 37
        }
      },
      "3": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 23
        }
      },
      "4": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "5": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "6": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "7": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "8": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "9": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "10": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "11": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 35
        }
      },
      "12": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "13": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 37
        }
      },
      "14": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 45
        }
      },
      "15": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "16": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "17": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "18": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "19": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "20": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "22": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 22
        }
      },
      "23": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 65,
          column: 40
        }
      },
      "24": {
        start: {
          line: 66,
          column: 10
        },
        end: {
          line: 66,
          column: 32
        }
      },
      "25": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "26": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "27": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "28": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 96
        }
      },
      "29": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "30": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 30
        }
      },
      "31": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "32": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 34
        }
      },
      "33": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "34": {
        start: {
          line: 95,
          column: 10
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "35": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "36": {
        start: {
          line: 97,
          column: 14
        },
        end: {
          line: 97,
          column: 49
        }
      },
      "37": {
        start: {
          line: 99,
          column: 14
        },
        end: {
          line: 99,
          column: 24
        }
      },
      "38": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 35
        }
      },
      "39": {
        start: {
          line: 105,
          column: 10
        },
        end: {
          line: 105,
          column: 172
        }
      },
      "40": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 67
        }
      },
      "41": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 53
        }
      },
      "42": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 59
        }
      },
      "43": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 54
        }
      },
      "44": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 53
        }
      },
      "45": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 68
        }
      },
      "46": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 79
        }
      },
      "47": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 28
        }
      },
      "48": {
        start: {
          line: 128,
          column: 17
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "49": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 85
        }
      },
      "50": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 85
        }
      },
      "51": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 28
        }
      },
      "52": {
        start: {
          line: 139,
          column: 17
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "53": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "54": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 75
        }
      },
      "55": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 149,
          column: 28
        }
      },
      "56": {
        start: {
          line: 150,
          column: 17
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "57": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 83
        }
      },
      "58": {
        start: {
          line: 161,
          column: 3
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "59": {
        start: {
          line: 162,
          column: 3
        },
        end: {
          line: 162,
          column: 75
        }
      },
      "60": {
        start: {
          line: 166,
          column: 3
        },
        end: {
          line: 166,
          column: 76
        }
      },
      "61": {
        start: {
          line: 167,
          column: 3
        },
        end: {
          line: 167,
          column: 81
        }
      },
      "62": {
        start: {
          line: 171,
          column: 3
        },
        end: {
          line: 171,
          column: 93
        }
      },
      "63": {
        start: {
          line: 172,
          column: 3
        },
        end: {
          line: 172,
          column: 102
        }
      },
      "64": {
        start: {
          line: 176,
          column: 3
        },
        end: {
          line: 176,
          column: 83
        }
      },
      "65": {
        start: {
          line: 177,
          column: 3
        },
        end: {
          line: 177,
          column: 98
        }
      },
      "66": {
        start: {
          line: 181,
          column: 3
        },
        end: {
          line: 181,
          column: 83
        }
      },
      "67": {
        start: {
          line: 182,
          column: 3
        },
        end: {
          line: 182,
          column: 83
        }
      },
      "68": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 57
        }
      },
      "69": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 77
        }
      },
      "70": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 69
        }
      },
      "71": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 89
        }
      },
      "72": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 76
        }
      },
      "73": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 219,
          column: 99
        }
      },
      "74": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 68
        }
      },
      "75": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 79
        }
      },
      "76": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 80
        }
      },
      "77": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 229,
          column: 93
        }
      },
      "78": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 85
        }
      },
      "79": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 96
        }
      },
      "80": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 49
        }
      },
      "81": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 60
        }
      },
      "82": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 70
        }
      },
      "83": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 264,
          column: 86
        }
      },
      "84": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 56
        }
      },
      "85": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 69
        }
      },
      "86": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 48
        }
      },
      "87": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 66
        }
      },
      "88": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 59
        }
      },
      "89": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 73
        }
      },
      "90": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 291,
          column: 72
        }
      },
      "91": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 292,
          column: 79
        }
      },
      "92": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 297,
          column: 81
        }
      },
      "93": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 97
        }
      },
      "94": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 84
        }
      },
      "95": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 304,
          column: 96
        }
      },
      "96": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 309,
          column: 118
        }
      },
      "97": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 310,
          column: 117
        }
      },
      "98": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 78
        }
      },
      "99": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 100
        }
      },
      "100": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 57
        }
      },
      "101": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 322,
          column: 69
        }
      },
      "102": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 466,
          column: 7
        }
      },
      "103": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 331,
          column: 57
        }
      },
      "104": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 337,
          column: 7
        }
      },
      "105": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "106": {
        start: {
          line: 334,
          column: 21
        },
        end: {
          line: 334,
          column: 22
        }
      },
      "107": {
        start: {
          line: 334,
          column: 28
        },
        end: {
          line: 334,
          column: 40
        }
      },
      "108": {
        start: {
          line: 335,
          column: 10
        },
        end: {
          line: 335,
          column: 32
        }
      },
      "109": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 345,
          column: 7
        }
      },
      "110": {
        start: {
          line: 347,
          column: 6
        },
        end: {
          line: 352,
          column: 7
        }
      },
      "111": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 41
        }
      },
      "112": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 96
        }
      },
      "113": {
        start: {
          line: 354,
          column: 6
        },
        end: {
          line: 386,
          column: 7
        }
      },
      "114": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 30
        }
      },
      "115": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "116": {
        start: {
          line: 357,
          column: 10
        },
        end: {
          line: 384,
          column: 12
        }
      },
      "117": {
        start: {
          line: 358,
          column: 25
        },
        end: {
          line: 358,
          column: 39
        }
      },
      "118": {
        start: {
          line: 360,
          column: 10
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "119": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "120": {
        start: {
          line: 362,
          column: 25
        },
        end: {
          line: 362,
          column: 82
        }
      },
      "121": {
        start: {
          line: 363,
          column: 14
        },
        end: {
          line: 363,
          column: 49
        }
      },
      "122": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "123": {
        start: {
          line: 367,
          column: 14
        },
        end: {
          line: 367,
          column: 48
        }
      },
      "124": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 372,
          column: 13
        }
      },
      "125": {
        start: {
          line: 371,
          column: 14
        },
        end: {
          line: 371,
          column: 58
        }
      },
      "126": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 375,
          column: 13
        }
      },
      "127": {
        start: {
          line: 374,
          column: 14
        },
        end: {
          line: 374,
          column: 62
        }
      },
      "128": {
        start: {
          line: 376,
          column: 17
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "129": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "130": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 378,
          column: 99
        }
      },
      "131": {
        start: {
          line: 379,
          column: 14
        },
        end: {
          line: 379,
          column: 49
        }
      },
      "132": {
        start: {
          line: 383,
          column: 10
        },
        end: {
          line: 383,
          column: 26
        }
      },
      "133": {
        start: {
          line: 388,
          column: 6
        },
        end: {
          line: 390,
          column: 7
        }
      },
      "134": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 34
        }
      },
      "135": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "136": {
        start: {
          line: 394,
          column: 10
        },
        end: {
          line: 402,
          column: 11
        }
      },
      "137": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "138": {
        start: {
          line: 396,
          column: 14
        },
        end: {
          line: 396,
          column: 49
        }
      },
      "139": {
        start: {
          line: 398,
          column: 14
        },
        end: {
          line: 398,
          column: 24
        }
      },
      "140": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 35
        }
      },
      "141": {
        start: {
          line: 404,
          column: 10
        },
        end: {
          line: 404,
          column: 188
        }
      },
      "142": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 67
        }
      },
      "143": {
        start: {
          line: 409,
          column: 6
        },
        end: {
          line: 465,
          column: 7
        }
      },
      "144": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 55
        }
      },
      "145": {
        start: {
          line: 412,
          column: 23
        },
        end: {
          line: 412,
          column: 27
        }
      },
      "146": {
        start: {
          line: 413,
          column: 21
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "147": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "148": {
        start: {
          line: 426,
          column: 10
        },
        end: {
          line: 436,
          column: 11
        }
      },
      "149": {
        start: {
          line: 437,
          column: 10
        },
        end: {
          line: 437,
          column: 36
        }
      },
      "150": {
        start: {
          line: 438,
          column: 15
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "151": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 447,
          column: 13
        }
      },
      "152": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 38
        }
      },
      "153": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 464,
          column: 11
        }
      },
      "154": {
        start: {
          line: 451,
          column: 10
        },
        end: {
          line: 463,
          column: 11
        }
      },
      "155": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 460,
          column: 13
        }
      },
      "156": {
        start: {
          line: 453,
          column: 14
        },
        end: {
          line: 457,
          column: 15
        }
      },
      "157": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 42
        }
      },
      "158": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 26
        }
      },
      "159": {
        start: {
          line: 459,
          column: 14
        },
        end: {
          line: 459,
          column: 28
        }
      },
      "160": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 168
        }
      },
      "161": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 472,
          column: 6
        }
      },
      "162": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        loc: {
          start: {
            line: 29,
            column: 78
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        loc: {
          start: {
            line: 55,
            column: 76
          },
          end: {
            line: 111,
            column: 3
          }
        },
        line: 55
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 24
          }
        },
        loc: {
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "transformResponse",
        decl: {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 93,
            column: 32
          }
        },
        loc: {
          start: {
            line: 93,
            column: 43
          },
          end: {
            line: 107,
            column: 7
          }
        },
        line: 93
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 113,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        loc: {
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 116,
            column: 3
          }
        },
        line: 113
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 119,
            column: 3
          }
        },
        loc: {
          start: {
            line: 119,
            column: 21
          },
          end: {
            line: 122,
            column: 3
          }
        },
        line: 119
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 125,
            column: 3
          }
        },
        loc: {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 134,
            column: 3
          }
        },
        line: 125
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 136,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        loc: {
          start: {
            line: 136,
            column: 45
          },
          end: {
            line: 145,
            column: 3
          }
        },
        line: 136
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 147,
            column: 2
          },
          end: {
            line: 147,
            column: 3
          }
        },
        loc: {
          start: {
            line: 147,
            column: 35
          },
          end: {
            line: 156,
            column: 3
          }
        },
        line: 147
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        },
        loc: {
          start: {
            line: 160,
            column: 23
          },
          end: {
            line: 163,
            column: 3
          }
        },
        line: 160
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 165,
            column: 2
          },
          end: {
            line: 165,
            column: 3
          }
        },
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 168,
            column: 3
          }
        },
        line: 165
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 170,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        },
        loc: {
          start: {
            line: 170,
            column: 39
          },
          end: {
            line: 173,
            column: 3
          }
        },
        line: 170
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 33
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 175
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 180,
            column: 2
          },
          end: {
            line: 180,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 183,
            column: 3
          }
        },
        line: 180
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 186,
            column: 2
          },
          end: {
            line: 186,
            column: 3
          }
        },
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 189,
            column: 3
          }
        },
        line: 186
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 212,
            column: 2
          },
          end: {
            line: 212,
            column: 3
          }
        },
        loc: {
          start: {
            line: 212,
            column: 32
          },
          end: {
            line: 215,
            column: 3
          }
        },
        line: 212
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        },
        loc: {
          start: {
            line: 217,
            column: 36
          },
          end: {
            line: 220,
            column: 3
          }
        },
        line: 217
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 222,
            column: 2
          },
          end: {
            line: 222,
            column: 3
          }
        },
        loc: {
          start: {
            line: 222,
            column: 31
          },
          end: {
            line: 225,
            column: 3
          }
        },
        line: 222
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 230,
            column: 3
          }
        },
        line: 227
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 232,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        },
        loc: {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 235,
            column: 3
          }
        },
        line: 232
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 254,
            column: 2
          },
          end: {
            line: 254,
            column: 3
          }
        },
        loc: {
          start: {
            line: 254,
            column: 16
          },
          end: {
            line: 257,
            column: 4
          }
        },
        line: 254
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 262,
            column: 3
          }
        },
        loc: {
          start: {
            line: 262,
            column: 33
          },
          end: {
            line: 265,
            column: 3
          }
        },
        line: 262
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 268,
            column: 3
          }
        },
        loc: {
          start: {
            line: 268,
            column: 19
          },
          end: {
            line: 271,
            column: 3
          }
        },
        line: 268
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 276,
            column: 2
          },
          end: {
            line: 276,
            column: 3
          }
        },
        loc: {
          start: {
            line: 276,
            column: 24
          },
          end: {
            line: 279,
            column: 3
          }
        },
        line: 276
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 282,
            column: 2
          },
          end: {
            line: 282,
            column: 3
          }
        },
        loc: {
          start: {
            line: 282,
            column: 22
          },
          end: {
            line: 285,
            column: 3
          }
        },
        line: 282
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 290,
            column: 2
          },
          end: {
            line: 290,
            column: 3
          }
        },
        loc: {
          start: {
            line: 290,
            column: 39
          },
          end: {
            line: 293,
            column: 3
          }
        },
        line: 290
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 296,
            column: 2
          },
          end: {
            line: 296,
            column: 3
          }
        },
        loc: {
          start: {
            line: 296,
            column: 44
          },
          end: {
            line: 299,
            column: 3
          }
        },
        line: 296
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 302,
            column: 2
          },
          end: {
            line: 302,
            column: 3
          }
        },
        loc: {
          start: {
            line: 302,
            column: 59
          },
          end: {
            line: 305,
            column: 3
          }
        },
        line: 302
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 308,
            column: 2
          },
          end: {
            line: 308,
            column: 3
          }
        },
        loc: {
          start: {
            line: 308,
            column: 78
          },
          end: {
            line: 311,
            column: 3
          }
        },
        line: 308
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 314,
            column: 2
          },
          end: {
            line: 314,
            column: 3
          }
        },
        loc: {
          start: {
            line: 314,
            column: 38
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 314
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 320,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        },
        loc: {
          start: {
            line: 320,
            column: 20
          },
          end: {
            line: 323,
            column: 3
          }
        },
        line: 320
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 326,
            column: 2
          },
          end: {
            line: 326,
            column: 3
          }
        },
        loc: {
          start: {
            line: 326,
            column: 84
          },
          end: {
            line: 467,
            column: 3
          }
        },
        line: 326
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 327,
            column: 23
          },
          end: {
            line: 327,
            column: 24
          }
        },
        loc: {
          start: {
            line: 327,
            column: 44
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 327
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 357,
            column: 40
          },
          end: {
            line: 357,
            column: 41
          }
        },
        loc: {
          start: {
            line: 357,
            column: 56
          },
          end: {
            line: 384,
            column: 11
          }
        },
        line: 357
      },
      "34": {
        name: "transformResponse",
        decl: {
          start: {
            line: 392,
            column: 15
          },
          end: {
            line: 392,
            column: 32
          }
        },
        loc: {
          start: {
            line: 392,
            column: 43
          },
          end: {
            line: 406,
            column: 7
          }
        },
        line: 392
      },
      "35": {
        name: "optionalCallback",
        decl: {
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 450,
            column: 49
          }
        },
        loc: {
          start: {
            line: 450,
            column: 71
          },
          end: {
            line: 464,
            column: 9
          }
        },
        line: 450
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 469,
            column: 2
          },
          end: {
            line: 469,
            column: 3
          }
        },
        loc: {
          start: {
            line: 469,
            column: 28
          },
          end: {
            line: 473,
            column: 3
          }
        },
        line: 469
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 470,
            column: 23
          },
          end: {
            line: 470,
            column: 24
          }
        },
        loc: {
          start: {
            line: 470,
            column: 44
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 470
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 17
          }
        }, {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 29
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 62,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 10
          },
          end: {
            line: 59,
            column: 22
          }
        }, {
          start: {
            line: 60,
            column: 10
          },
          end: {
            line: 62,
            column: 58
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 10
          },
          end: {
            line: 62,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 59
          }
        }, {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 58
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 68,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 68,
            column: 7
          }
        }, {
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 68,
            column: 7
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        }, {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        }, {
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        }],
        line: 89
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 10
          },
          end: {
            line: 103,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 10
          },
          end: {
            line: 103,
            column: 11
          }
        }, {
          start: {
            line: 95,
            column: 10
          },
          end: {
            line: 103,
            column: 11
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 14
          },
          end: {
            line: 95,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 14
          },
          end: {
            line: 95,
            column: 31
          }
        }, {
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 95,
            column: 71
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 331,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 330,
            column: 10
          },
          end: {
            line: 330,
            column: 22
          }
        }, {
          start: {
            line: 331,
            column: 10
          },
          end: {
            line: 331,
            column: 57
          }
        }],
        line: 329
      },
      "11": {
        loc: {
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        }, {
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        }],
        line: 333
      },
      "12": {
        loc: {
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        }, {
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        }],
        line: 347
      },
      "13": {
        loc: {
          start: {
            line: 354,
            column: 6
          },
          end: {
            line: 386,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 6
          },
          end: {
            line: 386,
            column: 7
          }
        }, {
          start: {
            line: 354,
            column: 6
          },
          end: {
            line: 386,
            column: 7
          }
        }],
        line: 354
      },
      "14": {
        loc: {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        }, {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        }],
        line: 356
      },
      "15": {
        loc: {
          start: {
            line: 360,
            column: 10
          },
          end: {
            line: 381,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 10
          },
          end: {
            line: 381,
            column: 11
          }
        }, {
          start: {
            line: 360,
            column: 10
          },
          end: {
            line: 381,
            column: 11
          }
        }],
        line: 360
      },
      "16": {
        loc: {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        }],
        line: 361
      },
      "17": {
        loc: {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        }, {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        }],
        line: 366
      },
      "18": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        }, {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        }],
        line: 370
      },
      "19": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        }, {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 375,
            column: 13
          }
        }],
        line: 373
      },
      "20": {
        loc: {
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 381,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 381,
            column: 11
          }
        }, {
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 381,
            column: 11
          }
        }],
        line: 376
      },
      "21": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        }, {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        }],
        line: 377
      },
      "22": {
        loc: {
          start: {
            line: 388,
            column: 6
          },
          end: {
            line: 390,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 6
          },
          end: {
            line: 390,
            column: 7
          }
        }, {
          start: {
            line: 388,
            column: 6
          },
          end: {
            line: 390,
            column: 7
          }
        }],
        line: 388
      },
      "23": {
        loc: {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }],
        line: 393
      },
      "24": {
        loc: {
          start: {
            line: 394,
            column: 10
          },
          end: {
            line: 402,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 10
          },
          end: {
            line: 402,
            column: 11
          }
        }, {
          start: {
            line: 394,
            column: 10
          },
          end: {
            line: 402,
            column: 11
          }
        }],
        line: 394
      },
      "25": {
        loc: {
          start: {
            line: 394,
            column: 14
          },
          end: {
            line: 394,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 14
          },
          end: {
            line: 394,
            column: 31
          }
        }, {
          start: {
            line: 394,
            column: 35
          },
          end: {
            line: 394,
            column: 71
          }
        }],
        line: 394
      },
      "26": {
        loc: {
          start: {
            line: 409,
            column: 6
          },
          end: {
            line: 465,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 6
          },
          end: {
            line: 465,
            column: 7
          }
        }, {
          start: {
            line: 409,
            column: 6
          },
          end: {
            line: 465,
            column: 7
          }
        }],
        line: 409
      },
      "27": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 449,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 449,
            column: 9
          }
        }, {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 449,
            column: 9
          }
        }],
        line: 425
      },
      "28": {
        loc: {
          start: {
            line: 438,
            column: 15
          },
          end: {
            line: 449,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 15
          },
          end: {
            line: 449,
            column: 9
          }
        }, {
          start: {
            line: 438,
            column: 15
          },
          end: {
            line: 449,
            column: 9
          }
        }],
        line: 438
      },
      "29": {
        loc: {
          start: {
            line: 451,
            column: 10
          },
          end: {
            line: 463,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 10
          },
          end: {
            line: 463,
            column: 11
          }
        }, {
          start: {
            line: 451,
            column: 10
          },
          end: {
            line: 463,
            column: 11
          }
        }],
        line: 451
      },
      "30": {
        loc: {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        }, {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        }],
        line: 452
      },
      "31": {
        loc: {
          start: {
            line: 452,
            column: 16
          },
          end: {
            line: 452,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 16
          },
          end: {
            line: 452,
            column: 33
          }
        }, {
          start: {
            line: 452,
            column: 37
          },
          end: {
            line: 452,
            column: 73
          }
        }],
        line: 452
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "453204b231e6c1eaab3c6f80f0fbdae5a7452449"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _bluebird = _interopRequireDefault(require("bluebird"));

var _format = _interopRequireDefault(require("format"));

var _btoa = _interopRequireDefault(require("btoa"));

var _formData = _interopRequireDefault(require("form-data"));

var _logLevel = _interopRequireDefault(require("logLevel"));

var _util = require("../util");

var _RegistryClient = _interopRequireDefault(require("./RegistryClient"));

var _MgmtClient = _interopRequireDefault(require("./MgmtClient"));

var _LecClient = _interopRequireDefault(require("./LecClient"));

var _DscClient = _interopRequireDefault(require("./DscClient"));

var _RulesClient = _interopRequireDefault(require("./RulesClient"));

var _StateClient = _interopRequireDefault(require("./StateClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var btoa = (cov_rvs8xv995.s[0]++, (cov_rvs8xv995.b[0][0]++, btoa) || (cov_rvs8xv995.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

var ApiClient =
/*#__PURE__*/
function () {
  function ApiClient(orgId, domain, apiKey, apiToken, withProxy, useLtpa, draftMode) {
    _classCallCheck(this, ApiClient);

    cov_rvs8xv995.f[0]++;
    cov_rvs8xv995.s[1]++;
    this.log = _logLevel["default"];
    cov_rvs8xv995.s[2]++;
    this.log.setDefaultLevel("warn");
    cov_rvs8xv995.s[3]++;
    this.orgId = orgId;
    cov_rvs8xv995.s[4]++;
    this.apiKey = apiKey;
    cov_rvs8xv995.s[5]++;
    this.apiToken = apiToken;
    cov_rvs8xv995.s[6]++;
    this.httpServer = orgId + "." + domain;
    cov_rvs8xv995.s[7]++;
    this.domainName = domain;
    cov_rvs8xv995.s[8]++;
    this.withProxy = withProxy;
    cov_rvs8xv995.s[9]++;
    this.useLtpa = useLtpa;
    cov_rvs8xv995.s[10]++;
    this.draftMode = draftMode;
    cov_rvs8xv995.s[11]++;
    this.dsc = new _DscClient["default"](this);
    cov_rvs8xv995.s[12]++;
    this.lec = new _LecClient["default"](this);
    cov_rvs8xv995.s[13]++;
    this.mgmt = new _MgmtClient["default"](this);
    cov_rvs8xv995.s[14]++;
    this.registry = new _RegistryClient["default"](this);
    cov_rvs8xv995.s[15]++;
    this.rules = new _RulesClient["default"](this);
    cov_rvs8xv995.s[16]++;
    this.state = new _StateClient["default"](this, draftMode);
    cov_rvs8xv995.s[17]++;
    this.log.info("[ApiClient:constructor] ApiClient initialized for organization : " + orgId);
  }

  _createClass(ApiClient, [{
    key: "callApi",
    value: function callApi(method, expectedHttpCode, expectJsonContent, paths, body, params) {
      var _this = this;

      cov_rvs8xv995.f[1]++;
      cov_rvs8xv995.s[18]++;
      return new _bluebird["default"](function (resolve, reject) {
        cov_rvs8xv995.f[2]++;
        // const API_HOST = "https://%s.internetofthings.ibmcloud.com/api/v0002";
        var uri = (cov_rvs8xv995.s[19]++, _this.withProxy ? (cov_rvs8xv995.b[1][0]++, "/api/v0002") : (cov_rvs8xv995.b[1][1]++, _this.withHttps ? (cov_rvs8xv995.b[2][0]++, (0, _format["default"])("https://%s/api/v0002", _this.httpServer)) : (cov_rvs8xv995.b[2][1]++, (0, _format["default"])("http://%s/api/v0002", _this.httpServer))));
        cov_rvs8xv995.s[20]++;

        if (Array.isArray(paths)) {
          cov_rvs8xv995.b[3][0]++;
          cov_rvs8xv995.s[21]++;

          for (var i = (cov_rvs8xv995.s[22]++, 0), l = (cov_rvs8xv995.s[23]++, paths.length); i < l; i++) {
            cov_rvs8xv995.s[24]++;
            uri += '/' + paths[i];
          }
        } else {
          cov_rvs8xv995.b[3][1]++;
        }

        var xhrConfig = (cov_rvs8xv995.s[25]++, {
          url: uri,
          method: method,
          headers: {
            'Content-Type': 'application/json'
          }
        });
        cov_rvs8xv995.s[26]++;

        if (_this.useLtpa) {
          cov_rvs8xv995.b[4][0]++;
          cov_rvs8xv995.s[27]++;
          xhrConfig.withCredentials = true;
        } else {
          cov_rvs8xv995.b[4][1]++;
          cov_rvs8xv995.s[28]++;
          xhrConfig.headers['Authorization'] = 'Basic ' + btoa(_this.apiKey + ':' + _this.apiToken);
        }

        cov_rvs8xv995.s[29]++;

        if (body) {
          cov_rvs8xv995.b[5][0]++;
          cov_rvs8xv995.s[30]++;
          xhrConfig.data = body;
        } else {
          cov_rvs8xv995.b[5][1]++;
        }

        cov_rvs8xv995.s[31]++;

        if (params) {
          cov_rvs8xv995.b[6][0]++;
          cov_rvs8xv995.s[32]++;
          xhrConfig.params = params;
        } else {
          cov_rvs8xv995.b[6][1]++;
        }

        function transformResponse(response) {
          cov_rvs8xv995.f[3]++;
          cov_rvs8xv995.s[33]++;

          if (response.status === expectedHttpCode) {
            cov_rvs8xv995.b[7][0]++;
            cov_rvs8xv995.s[34]++;

            if ((cov_rvs8xv995.b[9][0]++, expectJsonContent) && (cov_rvs8xv995.b[9][1]++, !(_typeof(response.data) === 'object'))) {
              cov_rvs8xv995.b[8][0]++;
              cov_rvs8xv995.s[35]++;

              try {
                cov_rvs8xv995.s[36]++;
                resolve(JSON.parse(response.data));
              } catch (e) {
                cov_rvs8xv995.s[37]++;
                reject(e);
              }
            } else {
              cov_rvs8xv995.b[8][1]++;
              cov_rvs8xv995.s[38]++;
              resolve(response.data);
            }
          } else {
            cov_rvs8xv995.b[7][1]++;
            cov_rvs8xv995.s[39]++;
            reject(new Error(method + " " + uri + ": Expected HTTP " + expectedHttpCode + " from server but got HTTP " + response.status + ". Error Body: " + response.data));
          }
        }

        cov_rvs8xv995.s[40]++;

        _this.log.debug("[ApiClient:transformResponse] " + xhrConfig);

        cov_rvs8xv995.s[41]++;
        (0, _axios["default"])(xhrConfig).then(transformResponse, reject);
      });
    }
  }, {
    key: "getOrganizationDetails",
    value: function getOrganizationDetails() {
      cov_rvs8xv995.f[4]++;
      cov_rvs8xv995.s[42]++;
      this.log.debug("[ApiClient] getOrganizationDetails()");
      cov_rvs8xv995.s[43]++;
      return this.callApi('GET', 200, true, null, null);
    }
  }, {
    key: "getServiceStatus",
    value: function getServiceStatus() {
      cov_rvs8xv995.f[5]++;
      cov_rvs8xv995.s[44]++;
      this.log.debug("[ApiClient] getServiceStatus()");
      cov_rvs8xv995.s[45]++;
      return this.callApi('GET', 200, true, ['service-status'], null);
    } //Usage Management

  }, {
    key: "getActiveDevices",
    value: function getActiveDevices(start, end, detail) {
      cov_rvs8xv995.f[6]++;
      cov_rvs8xv995.s[46]++;
      this.log.debug("[ApiClient] getActiveDevices(" + start + ", " + end + ")");
      cov_rvs8xv995.s[47]++;
      detail = detail | false;
      var params = (cov_rvs8xv995.s[48]++, {
        start: start,
        end: end,
        detail: detail
      });
      cov_rvs8xv995.s[49]++;
      return this.callApi('GET', 200, true, ['usage', 'active-devices'], null, params);
    }
  }, {
    key: "getHistoricalDataUsage",
    value: function getHistoricalDataUsage(start, end, detail) {
      cov_rvs8xv995.f[7]++;
      cov_rvs8xv995.s[50]++;
      this.log.debug("[ApiClient] getHistoricalDataUsage(" + start + ", " + end + ")");
      cov_rvs8xv995.s[51]++;
      detail = detail | false;
      var params = (cov_rvs8xv995.s[52]++, {
        start: start,
        end: end,
        detail: detail
      });
      cov_rvs8xv995.s[53]++;
      return this.callApi('GET', 200, true, ['usage', 'historical-data'], null, params);
    }
  }, {
    key: "getDataUsage",
    value: function getDataUsage(start, end, detail) {
      cov_rvs8xv995.f[8]++;
      cov_rvs8xv995.s[54]++;
      this.log.debug("[ApiClient] getDataUsage(" + start + ", " + end + ")");
      cov_rvs8xv995.s[55]++;
      detail = detail | false;
      var params = (cov_rvs8xv995.s[56]++, {
        start: start,
        end: end,
        detail: detail
      });
      cov_rvs8xv995.s[57]++;
      return this.callApi('GET', 200, true, ['usage', 'data-traffic'], null, params);
    } //client connectivity status

  }, {
    key: "getConnectionStates",
    value: function getConnectionStates() {
      cov_rvs8xv995.f[9]++;
      cov_rvs8xv995.s[58]++;
      this.log.debug("[ApiClient] getConnectionStates() - client connectivity");
      cov_rvs8xv995.s[59]++;
      return this.callApi('GET', 200, true, ["clientconnectionstates"], null);
    }
  }, {
    key: "getConnectionState",
    value: function getConnectionState(id) {
      cov_rvs8xv995.f[10]++;
      cov_rvs8xv995.s[60]++;
      this.log.debug("[ApiClient] getConnectionState() - client connectivity");
      cov_rvs8xv995.s[61]++;
      return this.callApi('GET', 200, true, ["clientconnectionstates/" + id], null);
    }
  }, {
    key: "getConnectedClientsConnectionStates",
    value: function getConnectedClientsConnectionStates() {
      cov_rvs8xv995.f[11]++;
      cov_rvs8xv995.s[62]++;
      this.log.debug("[ApiClient] getConnectedClientsConnectionStates() - client connectivity");
      cov_rvs8xv995.s[63]++;
      return this.callApi('GET', 200, true, ["clientconnectionstates?connectionStatus=connected"], null);
    }
  }, {
    key: "getRecentConnectionStates",
    value: function getRecentConnectionStates(date) {
      cov_rvs8xv995.f[12]++;
      cov_rvs8xv995.s[64]++;
      this.log.debug("[ApiClient] getRecentConnectionStates() - client connectivity");
      cov_rvs8xv995.s[65]++;
      return this.callApi('GET', 200, true, ["clientconnectionstates?connectedAfter=" + date], null);
    }
  }, {
    key: "getCustomConnectionState",
    value: function getCustomConnectionState(query) {
      cov_rvs8xv995.f[13]++;
      cov_rvs8xv995.s[66]++;
      this.log.debug("[ApiClient] getCustomConnectionStates() - client connectivity");
      cov_rvs8xv995.s[67]++;
      return this.callApi('GET', 200, true, ["clientconnectionstates" + query], null);
    } //bulk apis

  }, {
    key: "getAllDevices",
    value: function getAllDevices(params) {
      cov_rvs8xv995.f[14]++;
      cov_rvs8xv995.s[68]++;
      this.log.debug("[ApiClient] getAllDevices() - BULK");
      cov_rvs8xv995.s[69]++;
      return this.callApi('GET', 200, true, ["bulk", "devices"], null, params);
    }
    /**
    * Gateway Access Control (Beta)
    * The methods in this section follow the documentation listed under the link:
    * https://console.ng.bluemix.net/docs/services/IoT/gateways/gateway-access-control.html#gateway-access-control-beta-
    * Involves the following sections from the above mentioned link:
    * Assigning a role to a gateway
    * Adding devices to and removing devices from a resource group
    * Finding a resource group
    * Querying a resource group
    * Creating and deleting a resource group
    * Updating group properties
    * Retrieving and updating device properties
    * 
    */
    //getGatewayGroup(gatewayId)
    //updateDeviceRoles(deviceId, roles[])
    //getAllDevicesInGropu(groupId)
    //addDevicesToGroup(groupId, deviceList[])
    //removeDevicesFromGroup(groupId, deviceList[])

  }, {
    key: "getGroupIdsForDevice",
    value: function getGroupIdsForDevice(deviceId) {
      cov_rvs8xv995.f[15]++;
      cov_rvs8xv995.s[70]++;
      this.log.debug("[ApiClient] getGroupIdsForDevice(" + deviceId + ")");
      cov_rvs8xv995.s[71]++;
      return this.callApi('GET', 200, true, ['authorization', 'devices', deviceId], null);
    }
  }, {
    key: "updateDeviceRoles",
    value: function updateDeviceRoles(deviceId, roles) {
      cov_rvs8xv995.f[16]++;
      cov_rvs8xv995.s[72]++;
      this.log.debug("[ApiClient] updateDeviceRoles(" + deviceId + "," + roles + ")");
      cov_rvs8xv995.s[73]++;
      return this.callApi('PUT', 200, false, ['authorization', 'devices', deviceId, 'roles'], roles);
    }
  }, {
    key: "getAllDevicesInGroup",
    value: function getAllDevicesInGroup(groupId) {
      cov_rvs8xv995.f[17]++;
      cov_rvs8xv995.s[74]++;
      this.log.debug("[ApiClient] getAllDevicesInGropu(" + groupId + ")");
      cov_rvs8xv995.s[75]++;
      return this.callApi('GET', 200, true, ['bulk', 'devices', groupId], null);
    }
  }, {
    key: "addDevicesToGroup",
    value: function addDevicesToGroup(groupId, deviceList) {
      cov_rvs8xv995.f[18]++;
      cov_rvs8xv995.s[76]++;
      this.log.debug("[ApiClient] addDevicesToGroup(" + groupId + "," + deviceList + ")");
      cov_rvs8xv995.s[77]++;
      return this.callApi('PUT', 200, false, ['bulk', 'devices', groupId, "add"], deviceList);
    }
  }, {
    key: "removeDevicesFromGroup",
    value: function removeDevicesFromGroup(groupId, deviceList) {
      cov_rvs8xv995.f[19]++;
      cov_rvs8xv995.s[78]++;
      this.log.debug("[ApiClient] removeDevicesFromGroup(" + groupId + "," + deviceList + ")");
      cov_rvs8xv995.s[79]++;
      return this.callApi('PUT', 200, false, ['bulk', 'devices', groupId, "remove"], deviceList);
    } // https://console.ng.bluemix.net/docs/services/IoT/gateways/gateway-access-control.html
    // Finding a Resource Group
    // getGatewayGroups()
    // Querying a resource group
    // getUniqueDevicesInGroup(groupId)
    // getUniqueGatewayGroup(groupId)
    // Creating and deleting a resource group
    // createGatewayGroup(groupName)
    // deleteGatewayGroup(groupId)
    // Retrieving and updating device properties
    // getGatewayGroupProperties()
    // getDeviceRoles(deviceId)
    // updateGatewayProperties(gatewayId,control_props)
    // updateDeviceControlProperties(deviceId, withroles)
    // Finding a Resource Group

  }, {
    key: "getAllGroups",
    value: function getAllGroups() {
      cov_rvs8xv995.f[20]++;
      cov_rvs8xv995.s[80]++;
      this.log.debug("[ApiClient] getAllGroups()");
      cov_rvs8xv995.s[81]++;
      return this.callApi('GET', 200, true, ['groups'], null);
    } // Querying a resource group
    // Get unique identifiers of the members of the resource group

  }, {
    key: "getAllDeviceIdsInGroup",
    value: function getAllDeviceIdsInGroup(groupId) {
      cov_rvs8xv995.f[21]++;
      cov_rvs8xv995.s[82]++;
      this.log.debug("[ApiClient] getAllDeviceIdsInGroup(" + groupId + ")");
      cov_rvs8xv995.s[83]++;
      return this.callApi('GET', 200, true, ['bulk', 'devices', groupId, "ids"], null);
    } // properties of the resource group

  }, {
    key: "getGroup",
    value: function getGroup(groupId) {
      cov_rvs8xv995.f[22]++;
      cov_rvs8xv995.s[84]++;
      this.log.debug("[ApiClient] getGroup(" + groupId + ")");
      cov_rvs8xv995.s[85]++;
      return this.callApi('GET', 200, true, ['groups', groupId], null);
    } // Creating and deleting a resource group
    // Create a Resource Group

  }, {
    key: "createGroup",
    value: function createGroup(groupInfo) {
      cov_rvs8xv995.f[23]++;
      cov_rvs8xv995.s[86]++;
      this.log.debug("[ApiClient] createGroup()");
      cov_rvs8xv995.s[87]++;
      return this.callApi('POST', 201, true, ['groups'], groupInfo);
    } // Delete a Resource Group

  }, {
    key: "deleteGroup",
    value: function deleteGroup(groupId) {
      cov_rvs8xv995.f[24]++;
      cov_rvs8xv995.s[88]++;
      this.log.debug("[ApiClient] deleteGroup(" + groupId + ")");
      cov_rvs8xv995.s[89]++;
      return this.callApi('DELETE', 200, false, ['groups', groupId], null);
    } // Retrieving and updating device properties
    // Get the ID of the devices group of a gateway

  }, {
    key: "getAllDeviceAccessControlProperties",
    value: function getAllDeviceAccessControlProperties() {
      cov_rvs8xv995.f[25]++;
      cov_rvs8xv995.s[90]++;
      this.log.debug("[ApiClient] getAllDeviceAccessControlProperties()");
      cov_rvs8xv995.s[91]++;
      return this.callApi('GET', 200, true, ['authorization', 'devices'], null);
    } // Get standard role of a gateway

  }, {
    key: "getDeviceAccessControlProperties",
    value: function getDeviceAccessControlProperties(deviceId) {
      cov_rvs8xv995.f[26]++;
      cov_rvs8xv995.s[92]++;
      this.log.debug("[ApiClient] getDeviceAccessControlProperties(" + deviceId + ")");
      cov_rvs8xv995.s[93]++;
      return this.callApi('GET', 200, true, ['authorization', 'devices', deviceId, 'roles'], null);
    } // Update device properties without affecting the access control properties

  }, {
    key: "updateDeviceAccessControlProperties",
    value: function updateDeviceAccessControlProperties(deviceId, deviceProps) {
      cov_rvs8xv995.f[27]++;
      cov_rvs8xv995.s[94]++;
      this.log.debug("[ApiClient] updateDeviceAccessControlProperties(" + deviceId + ")");
      cov_rvs8xv995.s[95]++;
      return this.callApi('PUT', 200, true, ['authorization', 'devices', deviceId], deviceProps);
    } // Assign a standard role to a gateway

  }, {
    key: "updateDeviceAccessControlPropertiesWithRoles",
    value: function updateDeviceAccessControlPropertiesWithRoles(deviceId, devicePropsWithRoles) {
      cov_rvs8xv995.f[28]++;
      cov_rvs8xv995.s[96]++;
      this.log.debug("[ApiClient] updateDeviceAccessControlPropertiesWithRoles(" + deviceId + "," + devicePropsWithRoles + ")");
      cov_rvs8xv995.s[97]++;
      return this.callApi('PUT', 200, true, ['authorization', 'devices', deviceId, 'withroles'], devicePropsWithRoles);
    } // Duplicating updateDeviceRoles(deviceId, roles) for Gateway Roles

  }, {
    key: "updateGatewayRoles",
    value: function updateGatewayRoles(gatewayId, roles) {
      cov_rvs8xv995.f[29]++;
      cov_rvs8xv995.s[98]++;
      this.log.debug("[ApiClient] updateGatewayRoles(" + gatewayId + "," + roles + ")");
      cov_rvs8xv995.s[99]++;
      return this.callApi('PUT', 200, false, ['authorization', 'devices', gatewayId, 'roles'], roles);
    } // Extending getAllGroups() to fetch individual Groups

  }, {
    key: "getGroups",
    value: function getGroups(groupId) {
      cov_rvs8xv995.f[30]++;
      cov_rvs8xv995.s[100]++;
      this.log.debug("[ApiClient] getGroups(" + groupId + ")");
      cov_rvs8xv995.s[101]++;
      return this.callApi('GET', 200, true, ['groups', groupId], null);
    }
  }, {
    key: "callFormDataApi",
    value: function callFormDataApi(method, expectedHttpCode, expectJsonContent, paths, body, params) {
      var _this2 = this;

      cov_rvs8xv995.f[31]++;
      cov_rvs8xv995.s[102]++;
      return new _bluebird["default"](function (resolve, reject) {
        cov_rvs8xv995.f[32]++;
        // const API_HOST = "https://%s.internetofthings.ibmcloud.com/api/v0002";
        var uri = (cov_rvs8xv995.s[103]++, _this2.withProxy ? (cov_rvs8xv995.b[10][0]++, "/api/v0002") : (cov_rvs8xv995.b[10][1]++, (0, _format["default"])("https://%s/api/v0002", _this2.httpServer)));
        cov_rvs8xv995.s[104]++;

        if (Array.isArray(paths)) {
          cov_rvs8xv995.b[11][0]++;
          cov_rvs8xv995.s[105]++;

          for (var i = (cov_rvs8xv995.s[106]++, 0), l = (cov_rvs8xv995.s[107]++, paths.length); i < l; i++) {
            cov_rvs8xv995.s[108]++;
            uri += '/' + paths[i];
          }
        } else {
          cov_rvs8xv995.b[11][1]++;
        }

        var xhrConfig = (cov_rvs8xv995.s[109]++, {
          url: uri,
          method: method,
          headers: {
            'Content-Type': 'multipart/form-data'
          }
        });
        cov_rvs8xv995.s[110]++;

        if (_this2.useLtpa) {
          cov_rvs8xv995.b[12][0]++;
          cov_rvs8xv995.s[111]++;
          xhrConfig.withCredentials = true;
        } else {
          cov_rvs8xv995.b[12][1]++;
          cov_rvs8xv995.s[112]++;
          xhrConfig.headers['Authorization'] = 'Basic ' + btoa(_this2.apiKey + ':' + _this2.apiToken);
        }

        cov_rvs8xv995.s[113]++;

        if (body) {
          cov_rvs8xv995.b[13][0]++;
          cov_rvs8xv995.s[114]++;
          xhrConfig.data = body;
          cov_rvs8xv995.s[115]++;

          if ((0, _util.isBrowser)()) {
            cov_rvs8xv995.b[14][0]++;
            cov_rvs8xv995.s[116]++;
            xhrConfig.transformRequest = [function (data) {
              cov_rvs8xv995.f[33]++;
              var formData = (cov_rvs8xv995.s[117]++, new _formData["default"]());
              cov_rvs8xv995.s[118]++;

              if (xhrConfig.method == "POST") {
                cov_rvs8xv995.b[15][0]++;
                cov_rvs8xv995.s[119]++;

                if (data.schemaFile) {
                  cov_rvs8xv995.b[16][0]++;
                  var blob = (cov_rvs8xv995.s[120]++, new Blob([data.schemaFile], {
                    type: "application/json"
                  }));
                  cov_rvs8xv995.s[121]++;
                  formData.append('schemaFile', blob);
                } else {
                  cov_rvs8xv995.b[16][1]++;
                }

                cov_rvs8xv995.s[122]++;

                if (data.name) {
                  cov_rvs8xv995.b[17][0]++;
                  cov_rvs8xv995.s[123]++;
                  formData.append('name', data.name);
                } else {
                  cov_rvs8xv995.b[17][1]++;
                }

                cov_rvs8xv995.s[124]++;

                if (data.schemaType) {
                  cov_rvs8xv995.b[18][0]++;
                  cov_rvs8xv995.s[125]++;
                  formData.append('schemaType', 'json-schema');
                } else {
                  cov_rvs8xv995.b[18][1]++;
                }

                cov_rvs8xv995.s[126]++;

                if (data.description) {
                  cov_rvs8xv995.b[19][0]++;
                  cov_rvs8xv995.s[127]++;
                  formData.append('description', data.description);
                } else {
                  cov_rvs8xv995.b[19][1]++;
                }
              } else {
                cov_rvs8xv995.b[15][1]++;
                cov_rvs8xv995.s[128]++;

                if (xhrConfig.method == "PUT") {
                  cov_rvs8xv995.b[20][0]++;
                  cov_rvs8xv995.s[129]++;

                  if (data.schemaFile) {
                    cov_rvs8xv995.b[21][0]++;
                    var blob = (cov_rvs8xv995.s[130]++, new Blob([data.schemaFile], {
                      type: "application/json",
                      name: data.name
                    }));
                    cov_rvs8xv995.s[131]++;
                    formData.append('schemaFile', blob);
                  } else {
                    cov_rvs8xv995.b[21][1]++;
                  }
                } else {
                  cov_rvs8xv995.b[20][1]++;
                }
              }

              cov_rvs8xv995.s[132]++;
              return formData;
            }];
          } else {
            cov_rvs8xv995.b[14][1]++;
          }
        } else {
          cov_rvs8xv995.b[13][1]++;
        }

        cov_rvs8xv995.s[133]++;

        if (params) {
          cov_rvs8xv995.b[22][0]++;
          cov_rvs8xv995.s[134]++;
          xhrConfig.params = params;
        } else {
          cov_rvs8xv995.b[22][1]++;
        }

        function transformResponse(response) {
          cov_rvs8xv995.f[34]++;
          cov_rvs8xv995.s[135]++;

          if (response.status === expectedHttpCode) {
            cov_rvs8xv995.b[23][0]++;
            cov_rvs8xv995.s[136]++;

            if ((cov_rvs8xv995.b[25][0]++, expectJsonContent) && (cov_rvs8xv995.b[25][1]++, !(_typeof(response.data) === 'object'))) {
              cov_rvs8xv995.b[24][0]++;
              cov_rvs8xv995.s[137]++;

              try {
                cov_rvs8xv995.s[138]++;
                resolve(JSON.parse(response.data));
              } catch (e) {
                cov_rvs8xv995.s[139]++;
                reject(e);
              }
            } else {
              cov_rvs8xv995.b[24][1]++;
              cov_rvs8xv995.s[140]++;
              resolve(response.data);
            }
          } else {
            cov_rvs8xv995.b[23][1]++;
            cov_rvs8xv995.s[141]++;
            reject(new Error(method + " " + uri + ": Expected HTTP " + expectedHttpCode + " from server but got HTTP " + response.status + ". Error Body: " + JSON.stringify(response.data)));
          }
        }

        cov_rvs8xv995.s[142]++;

        _this2.log.debug("[ApiClient:transformResponse] " + xhrConfig);

        cov_rvs8xv995.s[143]++;

        if ((0, _util.isBrowser)()) {
          cov_rvs8xv995.b[26][0]++;
          cov_rvs8xv995.s[144]++;
          (0, _axios["default"])(xhrConfig).then(transformResponse, reject);
        } else {
          cov_rvs8xv995.b[26][1]++;
          var formData = (cov_rvs8xv995.s[145]++, null);
          var config = (cov_rvs8xv995.s[146]++, {
            url: uri,
            method: method,
            headers: {
              'Content-Type': 'multipart/form-data'
            },
            auth: {
              user: _this2.apiKey,
              pass: _this2.apiToken
            },
            formData: {},
            rejectUnauthorized: false
          });
          cov_rvs8xv995.s[147]++;

          if (xhrConfig.method == "POST") {
            cov_rvs8xv995.b[27][0]++;
            cov_rvs8xv995.s[148]++;
            formData = {
              'schemaFile': {
                'value': body.schemaFile,
                'options': {
                  'contentType': 'application/json',
                  'filename': body.name
                }
              },
              'schemaType': 'json-schema',
              'name': body.name
            };
            cov_rvs8xv995.s[149]++;
            config.formData = formData;
          } else {
            cov_rvs8xv995.b[27][1]++;
            cov_rvs8xv995.s[150]++;

            if (xhrConfig.method == "PUT") {
              cov_rvs8xv995.b[28][0]++;
              cov_rvs8xv995.s[151]++;
              formData = {
                'schemaFile': {
                  'value': body.schemaFile,
                  'options': {
                    'contentType': 'application/json',
                    'filename': body.name
                  }
                }
              };
              cov_rvs8xv995.s[152]++;
              config.formData = formData;
            } else {
              cov_rvs8xv995.b[28][1]++;
            }
          }

          cov_rvs8xv995.s[153]++;
          request(config, function optionalCallback(err, response, body) {
            cov_rvs8xv995.f[35]++;
            cov_rvs8xv995.s[154]++;

            if (response.statusCode === expectedHttpCode) {
              cov_rvs8xv995.b[29][0]++;
              cov_rvs8xv995.s[155]++;

              if ((cov_rvs8xv995.b[31][0]++, expectJsonContent) && (cov_rvs8xv995.b[31][1]++, !(_typeof(response.data) === 'object'))) {
                cov_rvs8xv995.b[30][0]++;
                cov_rvs8xv995.s[156]++;

                try {
                  cov_rvs8xv995.s[157]++;
                  resolve(JSON.parse(body));
                } catch (e) {
                  cov_rvs8xv995.s[158]++;
                  reject(e);
                }
              } else {
                cov_rvs8xv995.b[30][1]++;
                cov_rvs8xv995.s[159]++;
                resolve(body);
              }
            } else {
              cov_rvs8xv995.b[29][1]++;
              cov_rvs8xv995.s[160]++;
              reject(new Error(method + " " + uri + ": Expected HTTP " + expectedHttpCode + " from server but got HTTP " + response.statusCode + ". Error Body: " + err));
            }
          });
        }
      });
    }
  }, {
    key: "invalidOperation",
    value: function invalidOperation(message) {
      cov_rvs8xv995.f[36]++;
      cov_rvs8xv995.s[161]++;
      return new _bluebird["default"](function (resolve, reject) {
        cov_rvs8xv995.f[37]++;
        cov_rvs8xv995.s[162]++;
        resolve(message);
      });
    }
  }]);

  return ApiClient;
}();

exports["default"] = ApiClient;

},{"../util":163,"./DscClient":155,"./LecClient":156,"./MgmtClient":157,"./RegistryClient":158,"./RulesClient":159,"./StateClient":160,"axios":1,"bluebird":28,"btoa":32,"form-data":99,"format":100,"logLevel":105}],155:[function(require,module,exports){
"use strict";

var cov_1zx1a0itw7 = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\DscClient.js";
  var hash = "324b03af7061d7f9f26e03f703795be42c4d56ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\DscClient.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 17
          }
        }, {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 29
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "324b03af7061d7f9f26e03f703795be42c4d56ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _logLevel = _interopRequireDefault(require("logLevel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var btoa = (cov_1zx1a0itw7.s[0]++, (cov_1zx1a0itw7.b[0][0]++, btoa) || (cov_1zx1a0itw7.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

var DscClient = function DscClient(apiClient) {
  _classCallCheck(this, DscClient);

  cov_1zx1a0itw7.f[0]++;
  cov_1zx1a0itw7.s[1]++;
  this.log = _logLevel["default"];
  cov_1zx1a0itw7.s[2]++;
  this.log.setDefaultLevel("warn");
  cov_1zx1a0itw7.s[3]++;
  this.apiClient = apiClient;
} // Not implemented (yet!
;

exports["default"] = DscClient;

},{"btoa":32,"logLevel":105}],156:[function(require,module,exports){
"use strict";

var cov_hy3lr6k43 = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\LecClient.js";
  var hash = "4fef94d762bb7265a2637e205de1a450fb1e2a2d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\LecClient.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 19
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "3": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "4": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 42
        }
      },
      "5": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "6": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 100
        }
      },
      "7": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 75
        }
      },
      "8": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 111
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        loc: {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 17
          }
        }, {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 29
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "4fef94d762bb7265a2637e205de1a450fb1e2a2d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _logLevel = _interopRequireDefault(require("logLevel"));

var _util = require("../util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var btoa = (cov_hy3lr6k43.s[0]++, (cov_hy3lr6k43.b[0][0]++, btoa) || (cov_hy3lr6k43.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

// import request from 'request'
var LecClient =
/*#__PURE__*/
function () {
  function LecClient(apiClient) {
    _classCallCheck(this, LecClient);

    cov_hy3lr6k43.f[0]++;
    cov_hy3lr6k43.s[1]++;
    this.log = _logLevel["default"];
    cov_hy3lr6k43.s[2]++;
    this.log.setDefaultLevel("warn");
    cov_hy3lr6k43.s[3]++;
    this.apiClient = apiClient; // Create an alias to the apiClient's callApi

    cov_hy3lr6k43.s[4]++;
    this.callApi = this.apiClient.callApi;
  }

  _createClass(LecClient, [{
    key: "getLastEvents",
    value: function getLastEvents(type, id) {
      cov_hy3lr6k43.f[1]++;
      cov_hy3lr6k43.s[5]++;
      this.log.debug("[ApiClient] getLastEvents() - event cache");
      cov_hy3lr6k43.s[6]++;
      return this.callApi('GET', 200, true, ["device", "types", type, "devices", id, "events"], null);
    }
  }, {
    key: "getLastEventsByEventType",
    value: function getLastEventsByEventType(type, id, eventType) {
      cov_hy3lr6k43.f[2]++;
      cov_hy3lr6k43.s[7]++;
      this.log.debug("[ApiClient] getLastEventsByEventType() - event cache");
      cov_hy3lr6k43.s[8]++;
      return this.callApi('GET', 200, true, ["device", "types", type, "devices", id, "events", eventType], null);
    }
  }]);

  return LecClient;
}();

exports["default"] = LecClient;
;

},{"../util":163,"btoa":32,"logLevel":105}],157:[function(require,module,exports){
"use strict";

var cov_hgrd3dzbi = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\MgmtClient.js";
  var hash = "503a10f2b017daebc82945cd506483c731bd7615";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\MgmtClient.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "4": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "6": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 70
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 119
        }
      },
      "8": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "9": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 87
        }
      },
      "10": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 80
        }
      },
      "11": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 81
        }
      },
      "12": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 83
        }
      },
      "13": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 85
        }
      },
      "14": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 86
        }
      },
      "15": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 97
        }
      },
      "16": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 128
        }
      },
      "17": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 115
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 63
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        loc: {
          start: {
            line: 42,
            column: 40
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 43
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 52,
            column: 3
          }
        },
        loc: {
          start: {
            line: 52,
            column: 46
          },
          end: {
            line: 55,
            column: 3
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 3
          }
        },
        loc: {
          start: {
            line: 57,
            column: 72
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 17
          }
        }, {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 29
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "503a10f2b017daebc82945cd506483c731bd7615"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _logLevel = _interopRequireDefault(require("logLevel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var btoa = (cov_hgrd3dzbi.s[0]++, (cov_hgrd3dzbi.b[0][0]++, btoa) || (cov_hgrd3dzbi.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

var MgmtClient =
/*#__PURE__*/
function () {
  function MgmtClient(apiClient) {
    _classCallCheck(this, MgmtClient);

    cov_hgrd3dzbi.f[0]++;
    cov_hgrd3dzbi.s[1]++;
    this.log = _logLevel["default"];
    cov_hgrd3dzbi.s[2]++;
    this.log.setDefaultLevel("warn");
    cov_hgrd3dzbi.s[3]++;
    this.apiClient = apiClient; // Create an alias to the apiClient's callApi

    cov_hgrd3dzbi.s[4]++;
    this.callApi = this.apiClient.callApi;
  }

  _createClass(MgmtClient, [{
    key: "getAllDeviceManagementRequests",
    value: function getAllDeviceManagementRequests() {
      cov_hgrd3dzbi.f[1]++;
      cov_hgrd3dzbi.s[5]++;
      this.log.debug("[ApiClient] getAllDeviceManagementRequests()");
      cov_hgrd3dzbi.s[6]++;
      return this.callApi('GET', 200, true, ['mgmt', 'requests'], null);
    }
  }, {
    key: "initiateDeviceManagementRequest",
    value: function initiateDeviceManagementRequest(action, parameters, devices) {
      cov_hgrd3dzbi.f[2]++;
      cov_hgrd3dzbi.s[7]++;
      this.log.debug("[ApiClient] initiateDeviceManagementRequest(" + action + ", " + parameters + ", " + devices + ")");
      var body = (cov_hgrd3dzbi.s[8]++, {
        action: action,
        parameters: parameters,
        devices: devices
      });
      cov_hgrd3dzbi.s[9]++;
      return this.callApi('POST', 202, true, ['mgmt', 'requests'], JSON.stringify(body));
    }
  }, {
    key: "getDeviceManagementRequest",
    value: function getDeviceManagementRequest(requestId) {
      cov_hgrd3dzbi.f[3]++;
      cov_hgrd3dzbi.s[10]++;
      this.log.debug("[ApiClient] getDeviceManagementRequest(" + requestId + ")");
      cov_hgrd3dzbi.s[11]++;
      return this.callApi('GET', 200, true, ['mgmt', 'requests', requestId], null);
    }
  }, {
    key: "deleteDeviceManagementRequest",
    value: function deleteDeviceManagementRequest(requestId) {
      cov_hgrd3dzbi.f[4]++;
      cov_hgrd3dzbi.s[12]++;
      this.log.debug("[ApiClient] deleteDeviceManagementRequest(" + requestId + ")");
      cov_hgrd3dzbi.s[13]++;
      return this.callApi('DELETE', 204, false, ['mgmt', 'requests', requestId], null);
    }
  }, {
    key: "getDeviceManagementRequestStatus",
    value: function getDeviceManagementRequestStatus(requestId) {
      cov_hgrd3dzbi.f[5]++;
      cov_hgrd3dzbi.s[14]++;
      this.log.debug("[ApiClient] getDeviceManagementRequestStatus(" + requestId + ")");
      cov_hgrd3dzbi.s[15]++;
      return this.callApi('GET', 200, true, ['mgmt', 'requests', requestId, 'deviceStatus'], null);
    }
  }, {
    key: "getDeviceManagementRequestStatusByDevice",
    value: function getDeviceManagementRequestStatusByDevice(requestId, typeId, deviceId) {
      cov_hgrd3dzbi.f[6]++;
      cov_hgrd3dzbi.s[16]++;
      this.log.debug("[ApiClient] getDeviceManagementRequestStatusByDevice(" + requestId + ", " + typeId + ", " + deviceId + ")");
      cov_hgrd3dzbi.s[17]++;
      return this.callApi('GET', 200, true, ['mgmt', 'requests', requestId, 'deviceStatus', typeId, deviceId], null);
    }
  }]);

  return MgmtClient;
}();

exports["default"] = MgmtClient;
;

},{"btoa":32,"logLevel":105}],158:[function(require,module,exports){
"use strict";

var cov_2m3f6dg52m = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\RegistryClient.js";
  var hash = "2c50a164575701a6ba327560644b1175331f4d7b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\RegistryClient.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "4": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "6": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 86
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 79
        }
      },
      "9": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "10": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "11": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 54
        }
      },
      "12": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 69
        }
      },
      "13": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 124
        }
      },
      "14": {
        start: {
          line: 49,
          column: 15
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "15": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 91
        }
      },
      "16": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 145
        }
      },
      "17": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 34
        }
      },
      "18": {
        start: {
          line: 62,
          column: 15
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "19": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 86
        }
      },
      "20": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 137
        }
      },
      "21": {
        start: {
          line: 76,
          column: 15
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "22": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 103
        }
      },
      "23": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 83
        }
      },
      "24": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 100
        }
      },
      "25": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 133
        }
      },
      "26": {
        start: {
          line: 94,
          column: 15
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "27": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 112
        }
      },
      "28": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "29": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 96
        }
      },
      "30": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 66
        }
      },
      "31": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 111
        }
      },
      "32": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 65
        }
      },
      "33": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 116
        }
      },
      "34": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 84
        }
      },
      "35": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 108
        }
      },
      "36": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 105
        }
      },
      "37": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 128
        }
      },
      "38": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 97
        }
      },
      "39": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 104
        }
      },
      "40": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 87
        }
      },
      "41": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 112
        }
      },
      "42": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 89
        }
      },
      "43": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 116
        }
      },
      "44": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 97
        }
      },
      "45": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 129
        }
      },
      "46": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 102
        }
      },
      "47": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 119
        }
      },
      "48": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 101
        }
      },
      "49": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 123
        }
      },
      "50": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 86
        }
      },
      "51": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 118
        }
      },
      "52": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 88
        }
      },
      "53": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 122
        }
      },
      "54": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 92
        }
      },
      "55": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 135
        }
      },
      "56": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 92
        }
      },
      "57": {
        start: {
          line: 197,
          column: 17
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "58": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 201,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        loc: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        loc: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 60
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 3
          }
        },
        loc: {
          start: {
            line: 58,
            column: 73
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 73,
            column: 3
          }
        },
        loc: {
          start: {
            line: 73,
            column: 76
          },
          end: {
            line: 85,
            column: 3
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 3
          }
        },
        loc: {
          start: {
            line: 87,
            column: 35
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 87
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 92,
            column: 2
          },
          end: {
            line: 92,
            column: 3
          }
        },
        loc: {
          start: {
            line: 92,
            column: 73
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 92
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        loc: {
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 107,
            column: 3
          }
        },
        line: 104
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        },
        loc: {
          start: {
            line: 120,
            column: 50
          },
          end: {
            line: 123,
            column: 3
          }
        },
        line: 120
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 136,
            column: 3
          }
        },
        line: 132
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 138,
            column: 2
          },
          end: {
            line: 138,
            column: 3
          }
        },
        loc: {
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 141,
            column: 3
          }
        },
        line: 138
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 143,
            column: 3
          }
        },
        loc: {
          start: {
            line: 143,
            column: 49
          },
          end: {
            line: 147,
            column: 3
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 150,
            column: 2
          },
          end: {
            line: 150,
            column: 3
          }
        },
        loc: {
          start: {
            line: 150,
            column: 49
          },
          end: {
            line: 153,
            column: 3
          }
        },
        line: 150
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 2
          },
          end: {
            line: 155,
            column: 3
          }
        },
        loc: {
          start: {
            line: 155,
            column: 39
          },
          end: {
            line: 158,
            column: 3
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        },
        loc: {
          start: {
            line: 160,
            column: 41
          },
          end: {
            line: 163,
            column: 3
          }
        },
        line: 160
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 165,
            column: 2
          },
          end: {
            line: 165,
            column: 3
          }
        },
        loc: {
          start: {
            line: 165,
            column: 41
          },
          end: {
            line: 168,
            column: 3
          }
        },
        line: 165
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 170,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        },
        loc: {
          start: {
            line: 170,
            column: 42
          },
          end: {
            line: 173,
            column: 3
          }
        },
        line: 170
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 45
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 175
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 180,
            column: 2
          },
          end: {
            line: 180,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 38
          },
          end: {
            line: 183,
            column: 3
          }
        },
        line: 180
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        loc: {
          start: {
            line: 185,
            column: 40
          },
          end: {
            line: 188,
            column: 3
          }
        },
        line: 185
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 190,
            column: 2
          },
          end: {
            line: 190,
            column: 3
          }
        },
        loc: {
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 193,
            column: 3
          }
        },
        line: 190
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 195,
            column: 3
          }
        },
        loc: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 202,
            column: 3
          }
        },
        line: 195
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 17
          }
        }, {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 29
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 14
          },
          end: {
            line: 61,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 14
          },
          end: {
            line: 61,
            column: 21
          }
        }, {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 33
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "2c50a164575701a6ba327560644b1175331f4d7b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _logLevel = _interopRequireDefault(require("logLevel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var btoa = (cov_2m3f6dg52m.s[0]++, (cov_2m3f6dg52m.b[0][0]++, btoa) || (cov_2m3f6dg52m.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

var RegistryClient =
/*#__PURE__*/
function () {
  function RegistryClient(apiClient) {
    _classCallCheck(this, RegistryClient);

    cov_2m3f6dg52m.f[0]++;
    cov_2m3f6dg52m.s[1]++;
    this.log = _logLevel["default"];
    cov_2m3f6dg52m.s[2]++;
    this.log.setDefaultLevel("warn");
    cov_2m3f6dg52m.s[3]++;
    this.apiClient = apiClient; // Create an alias to the apiClient's callApi

    cov_2m3f6dg52m.s[4]++;
    this.callApi = this.apiClient.callApi;
  }

  _createClass(RegistryClient, [{
    key: "listAllDevicesOfType",
    value: function listAllDevicesOfType(type) {
      cov_2m3f6dg52m.f[1]++;
      cov_2m3f6dg52m.s[5]++;
      this.log.debug("[ApiClient] listAllDevicesOfType(" + type + ")");
      cov_2m3f6dg52m.s[6]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices'], null);
    }
  }, {
    key: "deleteDeviceType",
    value: function deleteDeviceType(type) {
      cov_2m3f6dg52m.f[2]++;
      cov_2m3f6dg52m.s[7]++;
      this.log.debug("[ApiClient] deleteDeviceType(" + type + ")");
      cov_2m3f6dg52m.s[8]++;
      return this.callApi('DELETE', 204, false, ['device', 'types', type], null);
    }
  }, {
    key: "getDeviceType",
    value: function getDeviceType(type) {
      cov_2m3f6dg52m.f[3]++;
      cov_2m3f6dg52m.s[9]++;
      this.log.debug("[ApiClient] getDeviceType(" + type + ")");
      cov_2m3f6dg52m.s[10]++;
      return this.callApi('GET', 200, true, ['device', 'types', type], null);
    }
  }, {
    key: "getAllDeviceTypes",
    value: function getAllDeviceTypes() {
      cov_2m3f6dg52m.f[4]++;
      cov_2m3f6dg52m.s[11]++;
      this.log.debug("[ApiClient] getAllDeviceTypes()");
      cov_2m3f6dg52m.s[12]++;
      return this.callApi('GET', 200, true, ['device', 'types'], null);
    }
  }, {
    key: "updateDeviceType",
    value: function updateDeviceType(type, description, deviceInfo, metadata) {
      cov_2m3f6dg52m.f[5]++;
      cov_2m3f6dg52m.s[13]++;
      this.log.debug("[ApiClient] updateDeviceType(" + type + ", " + description + ", " + deviceInfo + ", " + metadata + ")");
      var body = (cov_2m3f6dg52m.s[14]++, {
        deviceInfo: deviceInfo,
        description: description,
        metadata: metadata
      });
      cov_2m3f6dg52m.s[15]++;
      return this.callApi('PUT', 200, true, ['device', 'types', type], JSON.stringify(body));
    }
  }, {
    key: "registerDeviceType",
    value: function registerDeviceType(typeId, description, deviceInfo, metadata, classId) {
      cov_2m3f6dg52m.f[6]++;
      cov_2m3f6dg52m.s[16]++;
      this.log.debug("[ApiClient] registerDeviceType(" + typeId + ", " + description + ", " + deviceInfo + ", " + metadata + ", " + classId + ")"); // TODO: field validation

      cov_2m3f6dg52m.s[17]++;
      classId = (cov_2m3f6dg52m.b[1][0]++, classId) || (cov_2m3f6dg52m.b[1][1]++, "Device");
      var body = (cov_2m3f6dg52m.s[18]++, {
        id: typeId,
        classId: classId,
        deviceInfo: deviceInfo,
        description: description,
        metadata: metadata
      });
      cov_2m3f6dg52m.s[19]++;
      return this.callApi('POST', 201, true, ['device', 'types'], JSON.stringify(body));
    }
  }, {
    key: "registerDevice",
    value: function registerDevice(type, deviceId, authToken, deviceInfo, location, metadata) {
      cov_2m3f6dg52m.f[7]++;
      cov_2m3f6dg52m.s[20]++;
      this.log.debug("[ApiClient] registerDevice(" + type + ", " + deviceId + ", " + deviceInfo + ", " + location + ", " + metadata + ")"); // TODO: field validation

      var body = (cov_2m3f6dg52m.s[21]++, {
        deviceId: deviceId,
        authToken: authToken,
        deviceInfo: deviceInfo,
        location: location,
        metadata: metadata
      });
      cov_2m3f6dg52m.s[22]++;
      return this.callApi('POST', 201, true, ['device', 'types', type, 'devices'], JSON.stringify(body));
    }
  }, {
    key: "unregisterDevice",
    value: function unregisterDevice(type, deviceId) {
      cov_2m3f6dg52m.f[8]++;
      cov_2m3f6dg52m.s[23]++;
      this.log.debug("[ApiClient] unregisterDevice(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[24]++;
      return this.callApi('DELETE', 204, false, ['device', 'types', type, 'devices', deviceId], null);
    }
  }, {
    key: "updateDevice",
    value: function updateDevice(type, deviceId, deviceInfo, status, metadata, extensions) {
      cov_2m3f6dg52m.f[9]++;
      cov_2m3f6dg52m.s[25]++;
      this.log.debug("[ApiClient] updateDevice(" + type + ", " + deviceId + ", " + deviceInfo + ", " + status + ", " + metadata + ")");
      var body = (cov_2m3f6dg52m.s[26]++, {
        deviceInfo: deviceInfo,
        status: status,
        metadata: metadata,
        extensions: extensions
      });
      cov_2m3f6dg52m.s[27]++;
      return this.callApi('PUT', 200, true, ['device', 'types', type, 'devices', deviceId], JSON.stringify(body));
    }
  }, {
    key: "getDevice",
    value: function getDevice(type, deviceId) {
      cov_2m3f6dg52m.f[10]++;
      cov_2m3f6dg52m.s[28]++;
      this.log.debug("[ApiClient] getDevice(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[29]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices', deviceId], null);
    }
    /**
    * Register multiple new devices, each request can contain a maximum of 512KB.
    * The response body will contain the generated authentication tokens for all devices.
    * The caller of the method must make sure to record these tokens when processing
    * the response. The IBM Watson IoT Platform will not be able to retrieve lost authentication tokens
    *
    * @param arryOfDevicesToBeAdded Array of JSON devices to be added. Refer to
    * <a href="https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/post_bulk_devices_add">link</a>
    * for more information about the schema to be used
    */

  }, {
    key: "registerMultipleDevices",
    value: function registerMultipleDevices(arryOfDevicesToBeAdded) {
      cov_2m3f6dg52m.f[11]++;
      cov_2m3f6dg52m.s[30]++;
      this.log.debug("[ApiClient] arryOfDevicesToBeAdded() - BULK");
      cov_2m3f6dg52m.s[31]++;
      return this.callApi('POST', 201, true, ["bulk", "devices", "add"], JSON.stringify(arryOfDevicesToBeAdded));
    }
    /**
    * Delete multiple devices, each request can contain a maximum of 512Kb
    *
    * @param arryOfDevicesToBeDeleted Array of JSON devices to be deleted. Refer to
    * <a href="https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/post_bulk_devices_remove">link</a>
    * for more information about the schema to be used.
    */

  }, {
    key: "deleteMultipleDevices",
    value: function deleteMultipleDevices(arryOfDevicesToBeDeleted) {
      cov_2m3f6dg52m.f[12]++;
      cov_2m3f6dg52m.s[32]++;
      this.log.debug("[ApiClient] deleteMultipleDevices() - BULK");
      cov_2m3f6dg52m.s[33]++;
      return this.callApi('POST', 201, true, ["bulk", "devices", "remove"], JSON.stringify(arryOfDevicesToBeDeleted));
    }
  }, {
    key: "getDeviceLocation",
    value: function getDeviceLocation(type, deviceId) {
      cov_2m3f6dg52m.f[13]++;
      cov_2m3f6dg52m.s[34]++;
      this.log.debug("[ApiClient] getDeviceLocation(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[35]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices', deviceId, 'location'], null);
    }
  }, {
    key: "updateDeviceLocation",
    value: function updateDeviceLocation(type, deviceId, location) {
      cov_2m3f6dg52m.f[14]++;
      cov_2m3f6dg52m.s[36]++;
      this.log.debug("[ApiClient] updateDeviceLocation(" + type + ", " + deviceId + ", " + location + ")");
      cov_2m3f6dg52m.s[37]++;
      return this.callApi('PUT', 200, true, ['device', 'types', type, 'devices', deviceId, 'location'], JSON.stringify(location));
    }
  }, {
    key: "getDeviceManagementInformation",
    value: function getDeviceManagementInformation(type, deviceId) {
      cov_2m3f6dg52m.f[15]++;
      cov_2m3f6dg52m.s[38]++;
      this.log.debug("[ApiClient] getDeviceManagementInformation(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[39]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices', deviceId, 'mgmt'], null);
    }
  }, {
    key: "getAllDiagnosticLogs",
    value: function getAllDiagnosticLogs(type, deviceId) {
      cov_2m3f6dg52m.f[16]++;
      cov_2m3f6dg52m.s[40]++;
      this.log.debug("[ApiClient] getAllDiagnosticLogs(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[41]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices', deviceId, 'diag', 'logs'], null);
    }
  }, {
    key: "clearAllDiagnosticLogs",
    value: function clearAllDiagnosticLogs(type, deviceId) {
      cov_2m3f6dg52m.f[17]++;
      cov_2m3f6dg52m.s[42]++;
      this.log.debug("[ApiClient] clearAllDiagnosticLogs(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[43]++;
      return this.callApi('DELETE', 204, false, ['device', 'types', type, 'devices', deviceId, 'diag', 'logs'], null);
    }
  }, {
    key: "addDeviceDiagLogs",
    value: function addDeviceDiagLogs(type, deviceId, log) {
      cov_2m3f6dg52m.f[18]++;
      cov_2m3f6dg52m.s[44]++;
      this.log.debug("[ApiClient] addDeviceDiagLogs(" + type + ", " + deviceId + ", " + log + ")");
      cov_2m3f6dg52m.s[45]++;
      return this.callApi('POST', 201, false, ['device', 'types', type, 'devices', deviceId, 'diag', 'logs'], JSON.stringify(log));
    }
  }, {
    key: "getDiagnosticLog",
    value: function getDiagnosticLog(type, deviceId, logId) {
      cov_2m3f6dg52m.f[19]++;
      cov_2m3f6dg52m.s[46]++;
      this.log.debug("[ApiClient] getAllDiagnosticLogs(" + type + ", " + deviceId + ", " + logId + ")");
      cov_2m3f6dg52m.s[47]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices', deviceId, 'diag', 'logs', logId], null);
    }
  }, {
    key: "deleteDiagnosticLog",
    value: function deleteDiagnosticLog(type, deviceId, logId) {
      cov_2m3f6dg52m.f[20]++;
      cov_2m3f6dg52m.s[48]++;
      this.log.debug("[ApiClient] deleteDiagnosticLog(" + type + ", " + deviceId + ", " + logId + ")");
      cov_2m3f6dg52m.s[49]++;
      return this.callApi('DELETE', 204, false, ['device', 'types', type, 'devices', deviceId, 'diag', 'logs', logId], null);
    }
  }, {
    key: "getDeviceErrorCodes",
    value: function getDeviceErrorCodes(type, deviceId) {
      cov_2m3f6dg52m.f[21]++;
      cov_2m3f6dg52m.s[50]++;
      this.log.debug("[ApiClient] getDeviceErrorCodes(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[51]++;
      return this.callApi('GET', 200, true, ['device', 'types', type, 'devices', deviceId, 'diag', 'errorCodes'], null);
    }
  }, {
    key: "clearDeviceErrorCodes",
    value: function clearDeviceErrorCodes(type, deviceId) {
      cov_2m3f6dg52m.f[22]++;
      cov_2m3f6dg52m.s[52]++;
      this.log.debug("[ApiClient] clearDeviceErrorCodes(" + type + ", " + deviceId + ")");
      cov_2m3f6dg52m.s[53]++;
      return this.callApi('DELETE', 204, false, ['device', 'types', type, 'devices', deviceId, 'diag', 'errorCodes'], null);
    }
  }, {
    key: "addErrorCode",
    value: function addErrorCode(type, deviceId, log) {
      cov_2m3f6dg52m.f[23]++;
      cov_2m3f6dg52m.s[54]++;
      this.log.debug("[ApiClient] addErrorCode(" + type + ", " + deviceId + ", " + log + ")");
      cov_2m3f6dg52m.s[55]++;
      return this.callApi('POST', 201, false, ['device', 'types', type, 'devices', deviceId, 'diag', 'errorCodes'], JSON.stringify(log));
    }
  }, {
    key: "getDeviceConnectionLogs",
    value: function getDeviceConnectionLogs(typeId, deviceId) {
      cov_2m3f6dg52m.f[24]++;
      cov_2m3f6dg52m.s[56]++;
      this.log.debug("[ApiClient] getDeviceConnectionLogs(" + typeId + ", " + deviceId + ")");
      var params = (cov_2m3f6dg52m.s[57]++, {
        typeId: typeId,
        deviceId: deviceId
      });
      cov_2m3f6dg52m.s[58]++;
      return this.callApi('GET', 200, true, ['logs', 'connection'], null, params);
    }
  }]);

  return RegistryClient;
}();

exports["default"] = RegistryClient;
;

},{"btoa":32,"logLevel":105}],159:[function(require,module,exports){
"use strict";

var cov_1l6346iy13 = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\RulesClient.js";
  var hash = "d3a5c5a591c3f4e009ef523f8e2faabf4eb9db41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\RulesClient.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "4": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "5": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "6": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "7": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "8": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 103
        }
      },
      "9": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 94
        }
      },
      "10": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "11": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 55
        }
      },
      "12": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 53,
          column: 55
        }
      },
      "13": {
        start: {
          line: 54,
          column: 15
        },
        end: {
          line: 54,
          column: 144
        }
      },
      "14": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 71
        }
      },
      "15": {
        start: {
          line: 60,
          column: 15
        },
        end: {
          line: 60,
          column: 172
        }
      },
      "16": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 70
        }
      },
      "17": {
        start: {
          line: 66,
          column: 15
        },
        end: {
          line: 66,
          column: 160
        }
      },
      "18": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "19": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 89,
          column: 2
        }
      },
      "20": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "21": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "22": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "23": {
        start: {
          line: 83,
          column: 36
        },
        end: {
          line: 87,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        },
        loc: {
          start: {
            line: 28,
            column: 50
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        loc: {
          start: {
            line: 37,
            column: 55
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        loc: {
          start: {
            line: 42,
            column: 56
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 145
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 65,
            column: 3
          }
        },
        loc: {
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 14
          },
          end: {
            line: 73,
            column: 15
          }
        },
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 75,
            column: 3
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        loc: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 78,
            column: 3
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 10
          },
          end: {
            line: 79,
            column: 11
          }
        },
        loc: {
          start: {
            line: 79,
            column: 22
          },
          end: {
            line: 82,
            column: 3
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 87,
            column: 3
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 17
          }
        }, {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 29
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 50
          },
          end: {
            line: 47,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 62
          },
          end: {
            line: 47,
            column: 71
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 73
          },
          end: {
            line: 47,
            column: 143
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 94
          },
          end: {
            line: 47,
            column: 143
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 55
          }
        }, {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 55
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 91
          }
        }, {
          start: {
            line: 54,
            column: 94
          },
          end: {
            line: 54,
            column: 144
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 60,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 60,
            column: 105
          }
        }, {
          start: {
            line: 60,
            column: 108
          },
          end: {
            line: 60,
            column: 172
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 99
          }
        }, {
          start: {
            line: 66,
            column: 102
          },
          end: {
            line: 66,
            column: 160
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "d3a5c5a591c3f4e009ef523f8e2faabf4eb9db41"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _logLevel = _interopRequireDefault(require("logLevel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var btoa = (cov_1l6346iy13.s[0]++, (cov_1l6346iy13.b[0][0]++, btoa) || (cov_1l6346iy13.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

var RulesClient =
/*#__PURE__*/
function () {
  function RulesClient(apiClient) {
    _classCallCheck(this, RulesClient);

    cov_1l6346iy13.f[0]++;
    cov_1l6346iy13.s[1]++;
    this.log = _logLevel["default"];
    cov_1l6346iy13.s[2]++;
    this.log.setDefaultLevel("warn");
    cov_1l6346iy13.s[3]++;
    this.apiClient = apiClient; // Create an alias to the apiClient's callApi

    cov_1l6346iy13.s[4]++;
    this.callApi = this.apiClient.callApi;
  }

  _createClass(RulesClient, [{
    key: "getRulesForLogicalInterface",
    value: function getRulesForLogicalInterface(logicalInterfaceId) {
      cov_1l6346iy13.f[1]++;
      cov_1l6346iy13.s[5]++;

      if (this.draftMode) {
        cov_1l6346iy13.b[1][0]++;
        cov_1l6346iy13.s[6]++;
        return this.getRulesForLogicalInterface(logicalInterfaceId);
      } else {
        cov_1l6346iy13.b[1][1]++;
        cov_1l6346iy13.s[7]++;
        return this.getActiveRulesForLogicalInterface(logicalInterfaceId);
      }
    }
  }, {
    key: "getDraftRulesForLogicalInterface",
    value: function getDraftRulesForLogicalInterface(logicalInterfaceId) {
      cov_1l6346iy13.f[2]++;
      cov_1l6346iy13.s[8]++;
      return this.callApi('GET', 200, true, ['draft', 'logicalinterfaces', logicalInterfaceId, 'rules']);
    }
  }, {
    key: "getActiveRulesForLogicalInterface",
    value: function getActiveRulesForLogicalInterface(logicalInterfaceId) {
      cov_1l6346iy13.f[3]++;
      cov_1l6346iy13.s[9]++;
      return this.callApi('GET', 200, true, ['logicalinterfaces', logicalInterfaceId, 'rules']);
    }
  }, {
    key: "createRule",
    value: function createRule(logicalInterfaceId, name, condition) {
      var description = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (cov_1l6346iy13.b[2][0]++, undefined);
      var notificationStrategy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : (cov_1l6346iy13.b[3][0]++, RulesClient.RuleNotificationStrategy.EVERY_TIME());
      cov_1l6346iy13.f[4]++;
      var body = (cov_1l6346iy13.s[10]++, {
        name: name,
        condition: condition,
        notificationStrategy: notificationStrategy
      });
      cov_1l6346iy13.s[11]++;

      if (description) {
        cov_1l6346iy13.b[4][0]++;
        cov_1l6346iy13.s[12]++;
        body['description'] = description;
      } else {
        cov_1l6346iy13.b[4][1]++;
      }

      var base = (cov_1l6346iy13.s[13]++, this.draftMode ? (cov_1l6346iy13.b[5][0]++, ['draft', 'logicalinterfaces', logicalInterfaceId, 'rules']) : (cov_1l6346iy13.b[5][1]++, ['logicalinterfaces', logicalInterfaceId, 'rules']));
      cov_1l6346iy13.s[14]++;
      return this.callApi('POST', 201, true, base, JSON.stringify(body));
    }
  }, {
    key: "updateRule",
    value: function updateRule(rule) {
      cov_1l6346iy13.f[5]++;
      var base = (cov_1l6346iy13.s[15]++, this.draftMode ? (cov_1l6346iy13.b[6][0]++, ['draft', 'logicalinterfaces', rule.logicalInterfaceId, 'rules', rule.id]) : (cov_1l6346iy13.b[6][1]++, ['logicalinterfaces', rule.logicalInterfaceId, 'rules', rule.id]));
      cov_1l6346iy13.s[16]++;
      return this.callApi('PUT', 200, true, base, JSON.stringify(rule));
    }
  }, {
    key: "deleteRule",
    value: function deleteRule(logicalInterfaceId, ruleId) {
      cov_1l6346iy13.f[6]++;
      var base = (cov_1l6346iy13.s[17]++, this.draftMode ? (cov_1l6346iy13.b[7][0]++, ['draft', 'logicalinterfaces', logicalInterfaceId, 'rules', ruleId]) : (cov_1l6346iy13.b[7][1]++, ['logicalinterfaces', logicalInterfaceId, 'rules', ruleId]));
      cov_1l6346iy13.s[18]++;
      return this.callApi('DELETE', 204, false, base);
    }
  }]);

  return RulesClient;
}();

exports["default"] = RulesClient;
cov_1l6346iy13.s[19]++;
RulesClient.RuleNotificationStrategy = {
  EVERY_TIME: function EVERY_TIME() {
    cov_1l6346iy13.f[7]++;
    cov_1l6346iy13.s[20]++;
    return {
      when: 'every-time'
    };
  },
  BECOMES_TRUE: function BECOMES_TRUE() {
    cov_1l6346iy13.f[8]++;
    cov_1l6346iy13.s[21]++;
    return {
      when: 'becomes-true'
    };
  },
  X_IN_Y: function X_IN_Y(count) {
    cov_1l6346iy13.f[9]++;
    cov_1l6346iy13.s[22]++;
    return {
      when: 'x-in-y',
      count: count
    };
  },
  PERSISTS: function PERSISTS(count, timePeriod) {
    cov_1l6346iy13.f[10]++;
    cov_1l6346iy13.s[23]++;
    return {
      when: 'persists',
      count: count,
      timePeriod: timePeriod
    };
  }
};

},{"btoa":32,"logLevel":105}],160:[function(require,module,exports){
"use strict";

var cov_2nbbz5g7i5 = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\StateClient.js";
  var hash = "079d1384dfbf7887ab1d9c1406acb923cbffab45";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\api\\StateClient.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 13
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 19
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "3": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "4": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "6": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 58
        }
      },
      "7": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "8": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "9": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "10": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "11": {
        start: {
          line: 46,
          column: 15
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "12": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 69
        }
      },
      "13": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 86
        }
      },
      "14": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "15": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 65
        }
      },
      "16": {
        start: {
          line: 60,
          column: 15
        },
        end: {
          line: 60,
          column: 66
        }
      },
      "17": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 48
        }
      },
      "18": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "19": {
        start: {
          line: 69,
          column: 15
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "20": {
        start: {
          line: 75,
          column: 15
        },
        end: {
          line: 75,
          column: 86
        }
      },
      "21": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "22": {
        start: {
          line: 80,
          column: 15
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "23": {
        start: {
          line: 85,
          column: 15
        },
        end: {
          line: 85,
          column: 108
        }
      },
      "24": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 69
        }
      },
      "25": {
        start: {
          line: 90,
          column: 15
        },
        end: {
          line: 90,
          column: 108
        }
      },
      "26": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 48
        }
      },
      "27": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 76
        }
      },
      "28": {
        start: {
          line: 99,
          column: 15
        },
        end: {
          line: 99,
          column: 86
        }
      },
      "29": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 58
        }
      },
      "30": {
        start: {
          line: 105,
          column: 15
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "31": {
        start: {
          line: 110,
          column: 15
        },
        end: {
          line: 110,
          column: 80
        }
      },
      "32": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 71
        }
      },
      "33": {
        start: {
          line: 115,
          column: 15
        },
        end: {
          line: 115,
          column: 106
        }
      },
      "34": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 48
        }
      },
      "35": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 75
        }
      },
      "36": {
        start: {
          line: 124,
          column: 15
        },
        end: {
          line: 124,
          column: 106
        }
      },
      "37": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 52
        }
      },
      "38": {
        start: {
          line: 129,
          column: 15
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "39": {
        start: {
          line: 136,
          column: 15
        },
        end: {
          line: 136,
          column: 106
        }
      },
      "40": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 54
        }
      },
      "41": {
        start: {
          line: 141,
          column: 15
        },
        end: {
          line: 141,
          column: 80
        }
      },
      "42": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "43": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 62
        }
      },
      "44": {
        start: {
          line: 150,
          column: 15
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "45": {
        start: {
          line: 155,
          column: 15
        },
        end: {
          line: 155,
          column: 88
        }
      },
      "46": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 55
        }
      },
      "47": {
        start: {
          line: 160,
          column: 15
        },
        end: {
          line: 160,
          column: 130
        }
      },
      "48": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "49": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 87
        }
      },
      "50": {
        start: {
          line: 169,
          column: 15
        },
        end: {
          line: 169,
          column: 130
        }
      },
      "51": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 52
        }
      },
      "52": {
        start: {
          line: 174,
          column: 15
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "53": {
        start: {
          line: 180,
          column: 15
        },
        end: {
          line: 180,
          column: 130
        }
      },
      "54": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 54
        }
      },
      "55": {
        start: {
          line: 185,
          column: 15
        },
        end: {
          line: 185,
          column: 88
        }
      },
      "56": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 48
        }
      },
      "57": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 66
        }
      },
      "58": {
        start: {
          line: 194,
          column: 15
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "59": {
        start: {
          line: 199,
          column: 15
        },
        end: {
          line: 199,
          column: 150
        }
      },
      "60": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 55
        }
      },
      "61": {
        start: {
          line: 204,
          column: 15
        },
        end: {
          line: 204,
          column: 150
        }
      },
      "62": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 205,
          column: 48
        }
      },
      "63": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 209,
          column: 97
        }
      },
      "64": {
        start: {
          line: 213,
          column: 15
        },
        end: {
          line: 213,
          column: 168
        }
      },
      "65": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 52
        }
      },
      "66": {
        start: {
          line: 218,
          column: 15
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "67": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "68": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 25
        }
      },
      "69": {
        start: {
          line: 227,
          column: 15
        },
        end: {
          line: 227,
          column: 90
        }
      },
      "70": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 55
        }
      },
      "71": {
        start: {
          line: 232,
          column: 15
        },
        end: {
          line: 232,
          column: 130
        }
      },
      "72": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 48
        }
      },
      "73": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 85
        }
      },
      "74": {
        start: {
          line: 241,
          column: 15
        },
        end: {
          line: 241,
          column: 130
        }
      },
      "75": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 52
        }
      },
      "76": {
        start: {
          line: 246,
          column: 15
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "77": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "78": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 253,
          column: 25
        }
      },
      "79": {
        start: {
          line: 256,
          column: 15
        },
        end: {
          line: 256,
          column: 130
        }
      },
      "80": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 54
        }
      },
      "81": {
        start: {
          line: 261,
          column: 15
        },
        end: {
          line: 261,
          column: 90
        }
      },
      "82": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 65
        }
      },
      "83": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 266,
          column: 65
        }
      },
      "84": {
        start: {
          line: 272,
          column: 15
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "85": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 292,
          column: 5
        }
      },
      "86": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 289,
          column: 7
        }
      },
      "87": {
        start: {
          line: 279,
          column: 10
        },
        end: {
          line: 279,
          column: 108
        }
      },
      "88": {
        start: {
          line: 280,
          column: 10
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "89": {
        start: {
          line: 282,
          column: 10
        },
        end: {
          line: 282,
          column: 108
        }
      },
      "90": {
        start: {
          line: 284,
          column: 10
        },
        end: {
          line: 284,
          column: 108
        }
      },
      "91": {
        start: {
          line: 286,
          column: 10
        },
        end: {
          line: 286,
          column: 108
        }
      },
      "92": {
        start: {
          line: 288,
          column: 10
        },
        end: {
          line: 288,
          column: 108
        }
      },
      "93": {
        start: {
          line: 291,
          column: 7
        },
        end: {
          line: 291,
          column: 88
        }
      },
      "94": {
        start: {
          line: 298,
          column: 15
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "95": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "96": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 303,
          column: 94
        }
      },
      "97": {
        start: {
          line: 306,
          column: 6
        },
        end: {
          line: 306,
          column: 114
        }
      },
      "98": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 174
        }
      },
      "99": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 313,
          column: 34
        }
      },
      "100": {
        start: {
          line: 314,
          column: 15
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "101": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 86
        }
      },
      "102": {
        start: {
          line: 327,
          column: 15
        },
        end: {
          line: 329,
          column: 5
        }
      },
      "103": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "104": {
        start: {
          line: 332,
          column: 7
        },
        end: {
          line: 332,
          column: 127
        }
      },
      "105": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 334,
          column: 134
        }
      },
      "106": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "107": {
        start: {
          line: 341,
          column: 6
        },
        end: {
          line: 341,
          column: 103
        }
      },
      "108": {
        start: {
          line: 343,
          column: 6
        },
        end: {
          line: 343,
          column: 90
        }
      },
      "109": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 348,
          column: 92
        }
      },
      "110": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "111": {
        start: {
          line: 354,
          column: 6
        },
        end: {
          line: 354,
          column: 107
        }
      },
      "112": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 356,
          column: 93
        }
      },
      "113": {
        start: {
          line: 361,
          column: 15
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "114": {
        start: {
          line: 365,
          column: 15
        },
        end: {
          line: 365,
          column: 144
        }
      },
      "115": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 366,
          column: 55
        }
      },
      "116": {
        start: {
          line: 370,
          column: 15
        },
        end: {
          line: 370,
          column: 144
        }
      },
      "117": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 371,
          column: 48
        }
      },
      "118": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 375,
          column: 92
        }
      },
      "119": {
        start: {
          line: 379,
          column: 15
        },
        end: {
          line: 379,
          column: 19
        }
      },
      "120": {
        start: {
          line: 379,
          column: 28
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "121": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "122": {
        start: {
          line: 381,
          column: 6
        },
        end: {
          line: 385,
          column: 7
        }
      },
      "123": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 389,
          column: 7
        }
      },
      "124": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 56
        }
      },
      "125": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 61
        }
      },
      "126": {
        start: {
          line: 393,
          column: 6
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "127": {
        start: {
          line: 397,
          column: 6
        },
        end: {
          line: 397,
          column: 53
        }
      },
      "128": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 55
        }
      },
      "129": {
        start: {
          line: 404,
          column: 15
        },
        end: {
          line: 404,
          column: 122
        }
      },
      "130": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 48
        }
      },
      "131": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 409,
          column: 83
        }
      },
      "132": {
        start: {
          line: 413,
          column: 15
        },
        end: {
          line: 413,
          column: 162
        }
      },
      "133": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 414,
          column: 48
        }
      },
      "134": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 418,
          column: 103
        }
      },
      "135": {
        start: {
          line: 422,
          column: 15
        },
        end: {
          line: 422,
          column: 19
        }
      },
      "136": {
        start: {
          line: 422,
          column: 28
        },
        end: {
          line: 422,
          column: 32
        }
      },
      "137": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "138": {
        start: {
          line: 424,
          column: 6
        },
        end: {
          line: 428,
          column: 7
        }
      },
      "139": {
        start: {
          line: 430,
          column: 6
        },
        end: {
          line: 432,
          column: 7
        }
      },
      "140": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 56
        }
      },
      "141": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 434,
          column: 81
        }
      },
      "142": {
        start: {
          line: 436,
          column: 6
        },
        end: {
          line: 439,
          column: 7
        }
      },
      "143": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 440,
          column: 73
        }
      },
      "144": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 55
        }
      },
      "145": {
        start: {
          line: 446,
          column: 15
        },
        end: {
          line: 446,
          column: 162
        }
      },
      "146": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 447,
          column: 52
        }
      },
      "147": {
        start: {
          line: 451,
          column: 15
        },
        end: {
          line: 451,
          column: 184
        }
      },
      "148": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 452,
          column: 52
        }
      },
      "149": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 460,
          column: 5
        }
      },
      "150": {
        start: {
          line: 459,
          column: 6
        },
        end: {
          line: 459,
          column: 89
        }
      },
      "151": {
        start: {
          line: 462,
          column: 15
        },
        end: {
          line: 464,
          column: 5
        }
      },
      "152": {
        start: {
          line: 466,
          column: 15
        },
        end: {
          line: 466,
          column: 97
        }
      },
      "153": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 502,
          column: 5
        }
      },
      "154": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 484,
          column: 7
        }
      },
      "155": {
        start: {
          line: 471,
          column: 10
        },
        end: {
          line: 471,
          column: 62
        }
      },
      "156": {
        start: {
          line: 472,
          column: 10
        },
        end: {
          line: 472,
          column: 15
        }
      },
      "157": {
        start: {
          line: 474,
          column: 10
        },
        end: {
          line: 474,
          column: 62
        }
      },
      "158": {
        start: {
          line: 475,
          column: 10
        },
        end: {
          line: 475,
          column: 15
        }
      },
      "159": {
        start: {
          line: 477,
          column: 10
        },
        end: {
          line: 477,
          column: 62
        }
      },
      "160": {
        start: {
          line: 478,
          column: 10
        },
        end: {
          line: 478,
          column: 15
        }
      },
      "161": {
        start: {
          line: 480,
          column: 10
        },
        end: {
          line: 480,
          column: 62
        }
      },
      "162": {
        start: {
          line: 481,
          column: 10
        },
        end: {
          line: 481,
          column: 15
        }
      },
      "163": {
        start: {
          line: 483,
          column: 10
        },
        end: {
          line: 483,
          column: 94
        }
      },
      "164": {
        start: {
          line: 486,
          column: 6
        },
        end: {
          line: 501,
          column: 7
        }
      },
      "165": {
        start: {
          line: 488,
          column: 10
        },
        end: {
          line: 488,
          column: 62
        }
      },
      "166": {
        start: {
          line: 489,
          column: 10
        },
        end: {
          line: 489,
          column: 15
        }
      },
      "167": {
        start: {
          line: 491,
          column: 10
        },
        end: {
          line: 491,
          column: 62
        }
      },
      "168": {
        start: {
          line: 492,
          column: 10
        },
        end: {
          line: 492,
          column: 15
        }
      },
      "169": {
        start: {
          line: 494,
          column: 10
        },
        end: {
          line: 494,
          column: 62
        }
      },
      "170": {
        start: {
          line: 495,
          column: 10
        },
        end: {
          line: 495,
          column: 15
        }
      },
      "171": {
        start: {
          line: 497,
          column: 10
        },
        end: {
          line: 497,
          column: 91
        }
      },
      "172": {
        start: {
          line: 498,
          column: 10
        },
        end: {
          line: 498,
          column: 15
        }
      },
      "173": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 500,
          column: 92
        }
      },
      "174": {
        start: {
          line: 509,
          column: 15
        },
        end: {
          line: 511,
          column: 5
        }
      },
      "175": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 518,
          column: 5
        }
      },
      "176": {
        start: {
          line: 514,
          column: 6
        },
        end: {
          line: 514,
          column: 81
        }
      },
      "177": {
        start: {
          line: 517,
          column: 6
        },
        end: {
          line: 517,
          column: 96
        }
      },
      "178": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 526,
          column: 5
        }
      },
      "179": {
        start: {
          line: 523,
          column: 7
        },
        end: {
          line: 523,
          column: 81
        }
      },
      "180": {
        start: {
          line: 525,
          column: 6
        },
        end: {
          line: 525,
          column: 98
        }
      },
      "181": {
        start: {
          line: 530,
          column: 4
        },
        end: {
          line: 530,
          column: 121
        }
      },
      "182": {
        start: {
          line: 534,
          column: 15
        },
        end: {
          line: 538,
          column: 5
        }
      },
      "183": {
        start: {
          line: 540,
          column: 23
        },
        end: {
          line: 547,
          column: 6
        }
      },
      "184": {
        start: {
          line: 541,
          column: 17
        },
        end: {
          line: 541,
          column: 68
        }
      },
      "185": {
        start: {
          line: 542,
          column: 6
        },
        end: {
          line: 546,
          column: 8
        }
      },
      "186": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 23
        }
      },
      "187": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 21
        }
      },
      "188": {
        start: {
          line: 549,
          column: 4
        },
        end: {
          line: 552,
          column: 6
        }
      },
      "189": {
        start: {
          line: 550,
          column: 21
        },
        end: {
          line: 550,
          column: 32
        }
      },
      "190": {
        start: {
          line: 551,
          column: 6
        },
        end: {
          line: 551,
          column: 76
        }
      },
      "191": {
        start: {
          line: 556,
          column: 15
        },
        end: {
          line: 560,
          column: 5
        }
      },
      "192": {
        start: {
          line: 562,
          column: 23
        },
        end: {
          line: 569,
          column: 6
        }
      },
      "193": {
        start: {
          line: 563,
          column: 17
        },
        end: {
          line: 563,
          column: 68
        }
      },
      "194": {
        start: {
          line: 564,
          column: 6
        },
        end: {
          line: 568,
          column: 8
        }
      },
      "195": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 565,
          column: 23
        }
      },
      "196": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 21
        }
      },
      "197": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 574,
          column: 6
        }
      },
      "198": {
        start: {
          line: 572,
          column: 21
        },
        end: {
          line: 572,
          column: 29
        }
      },
      "199": {
        start: {
          line: 573,
          column: 6
        },
        end: {
          line: 573,
          column: 112
        }
      },
      "200": {
        start: {
          line: 578,
          column: 34
        },
        end: {
          line: 584,
          column: 6
        }
      },
      "201": {
        start: {
          line: 579,
          column: 6
        },
        end: {
          line: 583,
          column: 8
        }
      },
      "202": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 23
        }
      },
      "203": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 582,
          column: 21
        }
      },
      "204": {
        start: {
          line: 586,
          column: 4
        },
        end: {
          line: 600,
          column: 6
        }
      },
      "205": {
        start: {
          line: 587,
          column: 30
        },
        end: {
          line: 587,
          column: 35
        }
      },
      "206": {
        start: {
          line: 589,
          column: 42
        },
        end: {
          line: 595,
          column: 8
        }
      },
      "207": {
        start: {
          line: 590,
          column: 8
        },
        end: {
          line: 594,
          column: 10
        }
      },
      "208": {
        start: {
          line: 591,
          column: 10
        },
        end: {
          line: 591,
          column: 46
        }
      },
      "209": {
        start: {
          line: 593,
          column: 10
        },
        end: {
          line: 593,
          column: 23
        }
      },
      "210": {
        start: {
          line: 597,
          column: 6
        },
        end: {
          line: 599,
          column: 8
        }
      },
      "211": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 598,
          column: 21
        }
      },
      "212": {
        start: {
          line: 604,
          column: 27
        },
        end: {
          line: 610,
          column: 6
        }
      },
      "213": {
        start: {
          line: 605,
          column: 6
        },
        end: {
          line: 609,
          column: 8
        }
      },
      "214": {
        start: {
          line: 606,
          column: 8
        },
        end: {
          line: 606,
          column: 23
        }
      },
      "215": {
        start: {
          line: 608,
          column: 8
        },
        end: {
          line: 608,
          column: 21
        }
      },
      "216": {
        start: {
          line: 612,
          column: 4
        },
        end: {
          line: 643,
          column: 6
        }
      },
      "217": {
        start: {
          line: 613,
          column: 25
        },
        end: {
          line: 613,
          column: 31
        }
      },
      "218": {
        start: {
          line: 614,
          column: 39
        },
        end: {
          line: 614,
          column: 43
        }
      },
      "219": {
        start: {
          line: 615,
          column: 39
        },
        end: {
          line: 621,
          column: 8
        }
      },
      "220": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 620,
          column: 10
        }
      },
      "221": {
        start: {
          line: 617,
          column: 10
        },
        end: {
          line: 617,
          column: 25
        }
      },
      "222": {
        start: {
          line: 619,
          column: 10
        },
        end: {
          line: 619,
          column: 23
        }
      },
      "223": {
        start: {
          line: 623,
          column: 6
        },
        end: {
          line: 642,
          column: 8
        }
      },
      "224": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 43
        }
      },
      "225": {
        start: {
          line: 625,
          column: 57
        },
        end: {
          line: 637,
          column: 10
        }
      },
      "226": {
        start: {
          line: 626,
          column: 37
        },
        end: {
          line: 626,
          column: 44
        }
      },
      "227": {
        start: {
          line: 627,
          column: 10
        },
        end: {
          line: 629,
          column: 11
        }
      },
      "228": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 55
        }
      },
      "229": {
        start: {
          line: 631,
          column: 10
        },
        end: {
          line: 636,
          column: 12
        }
      },
      "230": {
        start: {
          line: 632,
          column: 22
        },
        end: {
          line: 632,
          column: 72
        }
      },
      "231": {
        start: {
          line: 633,
          column: 12
        },
        end: {
          line: 633,
          column: 24
        }
      },
      "232": {
        start: {
          line: 635,
          column: 12
        },
        end: {
          line: 635,
          column: 25
        }
      },
      "233": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 641,
          column: 10
        }
      },
      "234": {
        start: {
          line: 640,
          column: 11
        },
        end: {
          line: 640,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        loc: {
          start: {
            line: 20,
            column: 36
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        loc: {
          start: {
            line: 35,
            column: 50
          },
          end: {
            line: 48,
            column: 3
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        loc: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 15
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 66,
            column: 3
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 68,
            column: 3
          }
        },
        loc: {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        },
        loc: {
          start: {
            line: 79,
            column: 58
          },
          end: {
            line: 87,
            column: 3
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 89,
            column: 3
          }
        },
        loc: {
          start: {
            line: 89,
            column: 29
          },
          end: {
            line: 92,
            column: 3
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 94,
            column: 3
          }
        },
        loc: {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 94
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        loc: {
          start: {
            line: 98,
            column: 25
          },
          end: {
            line: 101,
            column: 3
          }
        },
        line: 98
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        loc: {
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 112,
            column: 3
          }
        },
        line: 104
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 114,
            column: 2
          },
          end: {
            line: 114,
            column: 3
          }
        },
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 117,
            column: 3
          }
        },
        line: 114
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 119,
            column: 3
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 121,
            column: 3
          }
        },
        line: 119
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 126,
            column: 3
          }
        },
        line: 123
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 128,
            column: 3
          }
        },
        loc: {
          start: {
            line: 128,
            column: 60
          },
          end: {
            line: 138,
            column: 3
          }
        },
        line: 128
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 140,
            column: 3
          }
        },
        loc: {
          start: {
            line: 140,
            column: 18
          },
          end: {
            line: 143,
            column: 3
          }
        },
        line: 140
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 145,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 145,
            column: 24
          },
          end: {
            line: 147,
            column: 3
          }
        },
        line: 145
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 149,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 45
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 149
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 159,
            column: 2
          },
          end: {
            line: 159,
            column: 3
          }
        },
        loc: {
          start: {
            line: 159,
            column: 44
          },
          end: {
            line: 162,
            column: 3
          }
        },
        line: 159
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 164,
            column: 2
          },
          end: {
            line: 164,
            column: 3
          }
        },
        loc: {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 166,
            column: 3
          }
        },
        line: 164
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 168,
            column: 2
          },
          end: {
            line: 168,
            column: 3
          }
        },
        loc: {
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 171,
            column: 3
          }
        },
        line: 168
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 173,
            column: 2
          },
          end: {
            line: 173,
            column: 3
          }
        },
        loc: {
          start: {
            line: 173,
            column: 66
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 173
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 184,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        },
        loc: {
          start: {
            line: 184,
            column: 26
          },
          end: {
            line: 187,
            column: 3
          }
        },
        line: 184
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 189,
            column: 2
          },
          end: {
            line: 189,
            column: 3
          }
        },
        loc: {
          start: {
            line: 189,
            column: 32
          },
          end: {
            line: 191,
            column: 3
          }
        },
        line: 189
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 193,
            column: 2
          },
          end: {
            line: 193,
            column: 3
          }
        },
        loc: {
          start: {
            line: 193,
            column: 81
          },
          end: {
            line: 201,
            column: 3
          }
        },
        line: 193
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 203,
            column: 2
          },
          end: {
            line: 203,
            column: 3
          }
        },
        loc: {
          start: {
            line: 203,
            column: 57
          },
          end: {
            line: 206,
            column: 3
          }
        },
        line: 203
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        loc: {
          start: {
            line: 208,
            column: 63
          },
          end: {
            line: 210,
            column: 3
          }
        },
        line: 208
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 212,
            column: 2
          },
          end: {
            line: 212,
            column: 3
          }
        },
        loc: {
          start: {
            line: 212,
            column: 68
          },
          end: {
            line: 215,
            column: 3
          }
        },
        line: 212
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        },
        loc: {
          start: {
            line: 217,
            column: 61
          },
          end: {
            line: 229,
            column: 3
          }
        },
        line: 217
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 231,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        loc: {
          start: {
            line: 231,
            column: 42
          },
          end: {
            line: 234,
            column: 3
          }
        },
        line: 231
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 236,
            column: 2
          },
          end: {
            line: 236,
            column: 3
          }
        },
        loc: {
          start: {
            line: 236,
            column: 48
          },
          end: {
            line: 238,
            column: 3
          }
        },
        line: 236
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 240,
            column: 3
          }
        },
        loc: {
          start: {
            line: 240,
            column: 45
          },
          end: {
            line: 243,
            column: 3
          }
        },
        line: 240
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 245,
            column: 2
          },
          end: {
            line: 245,
            column: 3
          }
        },
        loc: {
          start: {
            line: 245,
            column: 81
          },
          end: {
            line: 258,
            column: 3
          }
        },
        line: 245
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 260,
            column: 2
          },
          end: {
            line: 260,
            column: 3
          }
        },
        loc: {
          start: {
            line: 260,
            column: 25
          },
          end: {
            line: 263,
            column: 3
          }
        },
        line: 260
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 265,
            column: 2
          },
          end: {
            line: 265,
            column: 3
          }
        },
        loc: {
          start: {
            line: 265,
            column: 31
          },
          end: {
            line: 267,
            column: 3
          }
        },
        line: 265
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 271,
            column: 2
          },
          end: {
            line: 271,
            column: 3
          }
        },
        loc: {
          start: {
            line: 271,
            column: 66
          },
          end: {
            line: 293,
            column: 3
          }
        },
        line: 271
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 297,
            column: 2
          },
          end: {
            line: 297,
            column: 3
          }
        },
        loc: {
          start: {
            line: 297,
            column: 72
          },
          end: {
            line: 308,
            column: 3
          }
        },
        line: 297
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 311,
            column: 3
          }
        },
        loc: {
          start: {
            line: 311,
            column: 92
          },
          end: {
            line: 324,
            column: 3
          }
        },
        line: 311
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 326,
            column: 2
          },
          end: {
            line: 326,
            column: 3
          }
        },
        loc: {
          start: {
            line: 326,
            column: 76
          },
          end: {
            line: 337,
            column: 3
          }
        },
        line: 326
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 339,
            column: 2
          },
          end: {
            line: 339,
            column: 3
          }
        },
        loc: {
          start: {
            line: 339,
            column: 42
          },
          end: {
            line: 345,
            column: 3
          }
        },
        line: 339
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 347,
            column: 2
          },
          end: {
            line: 347,
            column: 3
          }
        },
        loc: {
          start: {
            line: 347,
            column: 48
          },
          end: {
            line: 349,
            column: 3
          }
        },
        line: 347
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 352,
            column: 2
          },
          end: {
            line: 352,
            column: 3
          }
        },
        loc: {
          start: {
            line: 352,
            column: 55
          },
          end: {
            line: 358,
            column: 3
          }
        },
        line: 352
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 360,
            column: 2
          },
          end: {
            line: 360,
            column: 3
          }
        },
        loc: {
          start: {
            line: 360,
            column: 74
          },
          end: {
            line: 367,
            column: 3
          }
        },
        line: 360
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 369,
            column: 2
          },
          end: {
            line: 369,
            column: 3
          }
        },
        loc: {
          start: {
            line: 369,
            column: 41
          },
          end: {
            line: 372,
            column: 3
          }
        },
        line: 369
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 374,
            column: 2
          },
          end: {
            line: 374,
            column: 3
          }
        },
        loc: {
          start: {
            line: 374,
            column: 47
          },
          end: {
            line: 376,
            column: 3
          }
        },
        line: 374
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 378,
            column: 2
          },
          end: {
            line: 378,
            column: 3
          }
        },
        loc: {
          start: {
            line: 378,
            column: 111
          },
          end: {
            line: 401,
            column: 3
          }
        },
        line: 378
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 403,
            column: 2
          },
          end: {
            line: 403,
            column: 3
          }
        },
        loc: {
          start: {
            line: 403,
            column: 40
          },
          end: {
            line: 406,
            column: 3
          }
        },
        line: 403
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 408,
            column: 2
          },
          end: {
            line: 408,
            column: 3
          }
        },
        loc: {
          start: {
            line: 408,
            column: 46
          },
          end: {
            line: 410,
            column: 3
          }
        },
        line: 408
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 412,
            column: 2
          },
          end: {
            line: 412,
            column: 3
          }
        },
        loc: {
          start: {
            line: 412,
            column: 76
          },
          end: {
            line: 415,
            column: 3
          }
        },
        line: 412
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 417,
            column: 3
          }
        },
        loc: {
          start: {
            line: 417,
            column: 82
          },
          end: {
            line: 419,
            column: 3
          }
        },
        line: 417
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 421,
            column: 2
          },
          end: {
            line: 421,
            column: 3
          }
        },
        loc: {
          start: {
            line: 421,
            column: 111
          },
          end: {
            line: 443,
            column: 3
          }
        },
        line: 421
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 445,
            column: 2
          },
          end: {
            line: 445,
            column: 3
          }
        },
        loc: {
          start: {
            line: 445,
            column: 79
          },
          end: {
            line: 448,
            column: 3
          }
        },
        line: 445
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 450,
            column: 2
          },
          end: {
            line: 450,
            column: 3
          }
        },
        loc: {
          start: {
            line: 450,
            column: 74
          },
          end: {
            line: 453,
            column: 3
          }
        },
        line: 450
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 457,
            column: 2
          },
          end: {
            line: 457,
            column: 3
          }
        },
        loc: {
          start: {
            line: 457,
            column: 48
          },
          end: {
            line: 503,
            column: 3
          }
        },
        line: 457
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 508,
            column: 2
          },
          end: {
            line: 508,
            column: 3
          }
        },
        loc: {
          start: {
            line: 508,
            column: 54
          },
          end: {
            line: 519,
            column: 3
          }
        },
        line: 508
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 521,
            column: 2
          },
          end: {
            line: 521,
            column: 3
          }
        },
        loc: {
          start: {
            line: 521,
            column: 45
          },
          end: {
            line: 527,
            column: 3
          }
        },
        line: 521
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 529,
            column: 2
          },
          end: {
            line: 529,
            column: 3
          }
        },
        loc: {
          start: {
            line: 529,
            column: 55
          },
          end: {
            line: 531,
            column: 3
          }
        },
        line: 529
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 533,
            column: 2
          },
          end: {
            line: 533,
            column: 3
          }
        },
        loc: {
          start: {
            line: 533,
            column: 92
          },
          end: {
            line: 553,
            column: 3
          }
        },
        line: 533
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 540,
            column: 35
          },
          end: {
            line: 540,
            column: 36
          }
        },
        loc: {
          start: {
            line: 540,
            column: 56
          },
          end: {
            line: 547,
            column: 5
          }
        },
        line: 540
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 542,
            column: 69
          },
          end: {
            line: 542,
            column: 70
          }
        },
        loc: {
          start: {
            line: 542,
            column: 79
          },
          end: {
            line: 544,
            column: 7
          }
        },
        line: 542
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 544,
            column: 9
          },
          end: {
            line: 544,
            column: 10
          }
        },
        loc: {
          start: {
            line: 544,
            column: 18
          },
          end: {
            line: 546,
            column: 7
          }
        },
        line: 544
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 549,
            column: 29
          },
          end: {
            line: 549,
            column: 30
          }
        },
        loc: {
          start: {
            line: 549,
            column: 38
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 549
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 555,
            column: 2
          },
          end: {
            line: 555,
            column: 3
          }
        },
        loc: {
          start: {
            line: 555,
            column: 128
          },
          end: {
            line: 575,
            column: 3
          }
        },
        line: 555
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 562,
            column: 35
          },
          end: {
            line: 562,
            column: 36
          }
        },
        loc: {
          start: {
            line: 562,
            column: 56
          },
          end: {
            line: 569,
            column: 5
          }
        },
        line: 562
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 564,
            column: 69
          },
          end: {
            line: 564,
            column: 70
          }
        },
        loc: {
          start: {
            line: 564,
            column: 79
          },
          end: {
            line: 566,
            column: 7
          }
        },
        line: 564
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 566,
            column: 9
          },
          end: {
            line: 566,
            column: 10
          }
        },
        loc: {
          start: {
            line: 566,
            column: 18
          },
          end: {
            line: 568,
            column: 7
          }
        },
        line: 566
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 571,
            column: 29
          },
          end: {
            line: 571,
            column: 30
          }
        },
        loc: {
          start: {
            line: 571,
            column: 38
          },
          end: {
            line: 574,
            column: 5
          }
        },
        line: 571
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 577,
            column: 2
          },
          end: {
            line: 577,
            column: 3
          }
        },
        loc: {
          start: {
            line: 577,
            column: 100
          },
          end: {
            line: 601,
            column: 3
          }
        },
        line: 577
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 578,
            column: 46
          },
          end: {
            line: 578,
            column: 47
          }
        },
        loc: {
          start: {
            line: 578,
            column: 67
          },
          end: {
            line: 584,
            column: 5
          }
        },
        line: 578
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 579,
            column: 76
          },
          end: {
            line: 579,
            column: 77
          }
        },
        loc: {
          start: {
            line: 579,
            column: 86
          },
          end: {
            line: 581,
            column: 7
          }
        },
        line: 579
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 581,
            column: 9
          },
          end: {
            line: 581,
            column: 10
          }
        },
        loc: {
          start: {
            line: 581,
            column: 18
          },
          end: {
            line: 583,
            column: 7
          }
        },
        line: 581
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 586,
            column: 40
          },
          end: {
            line: 586,
            column: 41
          }
        },
        loc: {
          start: {
            line: 586,
            column: 49
          },
          end: {
            line: 600,
            column: 5
          }
        },
        line: 586
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 589,
            column: 54
          },
          end: {
            line: 589,
            column: 55
          }
        },
        loc: {
          start: {
            line: 589,
            column: 75
          },
          end: {
            line: 595,
            column: 7
          }
        },
        line: 589
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 590,
            column: 98
          },
          end: {
            line: 590,
            column: 99
          }
        },
        loc: {
          start: {
            line: 590,
            column: 108
          },
          end: {
            line: 592,
            column: 9
          }
        },
        line: 590
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 592,
            column: 11
          },
          end: {
            line: 592,
            column: 12
          }
        },
        loc: {
          start: {
            line: 592,
            column: 20
          },
          end: {
            line: 594,
            column: 9
          }
        },
        line: 592
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 597,
            column: 48
          },
          end: {
            line: 597,
            column: 49
          }
        },
        loc: {
          start: {
            line: 597,
            column: 58
          },
          end: {
            line: 599,
            column: 7
          }
        },
        line: 597
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 603,
            column: 2
          },
          end: {
            line: 603,
            column: 3
          }
        },
        loc: {
          start: {
            line: 603,
            column: 132
          },
          end: {
            line: 644,
            column: 3
          }
        },
        line: 603
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 604,
            column: 39
          },
          end: {
            line: 604,
            column: 40
          }
        },
        loc: {
          start: {
            line: 604,
            column: 60
          },
          end: {
            line: 610,
            column: 5
          }
        },
        line: 604
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 605,
            column: 62
          },
          end: {
            line: 605,
            column: 63
          }
        },
        loc: {
          start: {
            line: 605,
            column: 72
          },
          end: {
            line: 607,
            column: 7
          }
        },
        line: 605
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 607,
            column: 9
          },
          end: {
            line: 607,
            column: 10
          }
        },
        loc: {
          start: {
            line: 607,
            column: 18
          },
          end: {
            line: 609,
            column: 7
          }
        },
        line: 607
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 612,
            column: 33
          },
          end: {
            line: 612,
            column: 34
          }
        },
        loc: {
          start: {
            line: 612,
            column: 43
          },
          end: {
            line: 643,
            column: 5
          }
        },
        line: 612
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 615,
            column: 51
          },
          end: {
            line: 615,
            column: 52
          }
        },
        loc: {
          start: {
            line: 615,
            column: 72
          },
          end: {
            line: 621,
            column: 7
          }
        },
        line: 615
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 616,
            column: 99
          },
          end: {
            line: 616,
            column: 100
          }
        },
        loc: {
          start: {
            line: 616,
            column: 109
          },
          end: {
            line: 618,
            column: 9
          }
        },
        line: 616
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 618,
            column: 11
          },
          end: {
            line: 618,
            column: 12
          }
        },
        loc: {
          start: {
            line: 618,
            column: 20
          },
          end: {
            line: 620,
            column: 9
          }
        },
        line: 618
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 623,
            column: 45
          },
          end: {
            line: 623,
            column: 46
          }
        },
        loc: {
          start: {
            line: 623,
            column: 55
          },
          end: {
            line: 642,
            column: 7
          }
        },
        line: 623
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 625,
            column: 69
          },
          end: {
            line: 625,
            column: 70
          }
        },
        loc: {
          start: {
            line: 625,
            column: 90
          },
          end: {
            line: 637,
            column: 9
          }
        },
        line: 625
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 631,
            column: 142
          },
          end: {
            line: 631,
            column: 143
          }
        },
        loc: {
          start: {
            line: 631,
            column: 152
          },
          end: {
            line: 634,
            column: 11
          }
        },
        line: 631
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 634,
            column: 13
          },
          end: {
            line: 634,
            column: 14
          }
        },
        loc: {
          start: {
            line: 634,
            column: 22
          },
          end: {
            line: 636,
            column: 11
          }
        },
        line: 634
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 639,
            column: 63
          },
          end: {
            line: 639,
            column: 64
          }
        },
        loc: {
          start: {
            line: 639,
            column: 73
          },
          end: {
            line: 641,
            column: 9
          }
        },
        line: 639
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 13
          },
          end: {
            line: 14,
            column: 17
          }
        }, {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 29
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 52
          }
        }, {
          start: {
            line: 46,
            column: 55
          },
          end: {
            line: 46,
            column: 66
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 62
          }
        }, {
          start: {
            line: 51,
            column: 65
          },
          end: {
            line: 51,
            column: 86
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 60,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 60,
            column: 52
          }
        }, {
          start: {
            line: 60,
            column: 55
          },
          end: {
            line: 60,
            column: 66
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 62
          }
        }, {
          start: {
            line: 75,
            column: 65
          },
          end: {
            line: 75,
            column: 86
          }
        }],
        line: 75
      },
      "6": {
        loc: {
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 85,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 73
          }
        }, {
          start: {
            line: 85,
            column: 76
          },
          end: {
            line: 85,
            column: 108
          }
        }],
        line: 85
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 90,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 73
          }
        }, {
          start: {
            line: 90,
            column: 76
          },
          end: {
            line: 90,
            column: 108
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 62
          }
        }, {
          start: {
            line: 99,
            column: 65
          },
          end: {
            line: 99,
            column: 86
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 59
          }
        }, {
          start: {
            line: 110,
            column: 62
          },
          end: {
            line: 110,
            column: 80
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 32
          },
          end: {
            line: 115,
            column: 72
          }
        }, {
          start: {
            line: 115,
            column: 75
          },
          end: {
            line: 115,
            column: 106
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 124,
            column: 15
          },
          end: {
            line: 124,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 72
          }
        }, {
          start: {
            line: 124,
            column: 75
          },
          end: {
            line: 124,
            column: 106
          }
        }],
        line: 124
      },
      "12": {
        loc: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 32
          },
          end: {
            line: 136,
            column: 72
          }
        }, {
          start: {
            line: 136,
            column: 75
          },
          end: {
            line: 136,
            column: 106
          }
        }],
        line: 136
      },
      "13": {
        loc: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 32
          },
          end: {
            line: 141,
            column: 59
          }
        }, {
          start: {
            line: 141,
            column: 62
          },
          end: {
            line: 141,
            column: 80
          }
        }],
        line: 141
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 15
          },
          end: {
            line: 155,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 63
          }
        }, {
          start: {
            line: 155,
            column: 66
          },
          end: {
            line: 155,
            column: 88
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 160,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 32
          },
          end: {
            line: 160,
            column: 84
          }
        }, {
          start: {
            line: 160,
            column: 87
          },
          end: {
            line: 160,
            column: 130
          }
        }],
        line: 160
      },
      "16": {
        loc: {
          start: {
            line: 169,
            column: 15
          },
          end: {
            line: 169,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 32
          },
          end: {
            line: 169,
            column: 84
          }
        }, {
          start: {
            line: 169,
            column: 87
          },
          end: {
            line: 169,
            column: 130
          }
        }],
        line: 169
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 180,
            column: 84
          }
        }, {
          start: {
            line: 180,
            column: 87
          },
          end: {
            line: 180,
            column: 130
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 185,
            column: 15
          },
          end: {
            line: 185,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 63
          }
        }, {
          start: {
            line: 185,
            column: 66
          },
          end: {
            line: 185,
            column: 88
          }
        }],
        line: 185
      },
      "19": {
        loc: {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 199,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 32
          },
          end: {
            line: 199,
            column: 94
          }
        }, {
          start: {
            line: 199,
            column: 97
          },
          end: {
            line: 199,
            column: 150
          }
        }],
        line: 199
      },
      "20": {
        loc: {
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 32
          },
          end: {
            line: 204,
            column: 94
          }
        }, {
          start: {
            line: 204,
            column: 97
          },
          end: {
            line: 204,
            column: 150
          }
        }],
        line: 204
      },
      "21": {
        loc: {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 213,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 103
          }
        }, {
          start: {
            line: 213,
            column: 106
          },
          end: {
            line: 213,
            column: 168
          }
        }],
        line: 213
      },
      "22": {
        loc: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }, {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }],
        line: 223
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 227,
            column: 62
          }
        }, {
          start: {
            line: 227,
            column: 65
          },
          end: {
            line: 227,
            column: 90
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 232,
            column: 15
          },
          end: {
            line: 232,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 32
          },
          end: {
            line: 232,
            column: 82
          }
        }, {
          start: {
            line: 232,
            column: 85
          },
          end: {
            line: 232,
            column: 130
          }
        }],
        line: 232
      },
      "25": {
        loc: {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 32
          },
          end: {
            line: 241,
            column: 82
          }
        }, {
          start: {
            line: 241,
            column: 85
          },
          end: {
            line: 241,
            column: 130
          }
        }],
        line: 241
      },
      "26": {
        loc: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        }, {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        }],
        line: 252
      },
      "27": {
        loc: {
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 256,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 32
          },
          end: {
            line: 256,
            column: 82
          }
        }, {
          start: {
            line: 256,
            column: 85
          },
          end: {
            line: 256,
            column: 130
          }
        }],
        line: 256
      },
      "28": {
        loc: {
          start: {
            line: 261,
            column: 15
          },
          end: {
            line: 261,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 261,
            column: 32
          },
          end: {
            line: 261,
            column: 62
          }
        }, {
          start: {
            line: 261,
            column: 65
          },
          end: {
            line: 261,
            column: 90
          }
        }],
        line: 261
      },
      "29": {
        loc: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        }, {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        }],
        line: 276
      },
      "30": {
        loc: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 289,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 15
          }
        }, {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 282,
            column: 108
          }
        }, {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 284,
            column: 108
          }
        }, {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 286,
            column: 108
          }
        }, {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 288,
            column: 108
          }
        }],
        line: 277
      },
      "31": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        }, {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        }],
        line: 302
      },
      "32": {
        loc: {
          start: {
            line: 313,
            column: 14
          },
          end: {
            line: 313,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 14
          },
          end: {
            line: 313,
            column: 21
          }
        }, {
          start: {
            line: 313,
            column: 25
          },
          end: {
            line: 313,
            column: 33
          }
        }],
        line: 313
      },
      "33": {
        loc: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        }, {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        }],
        line: 331
      },
      "34": {
        loc: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        }, {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        }],
        line: 340
      },
      "35": {
        loc: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        }, {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        }],
        line: 353
      },
      "36": {
        loc: {
          start: {
            line: 365,
            column: 15
          },
          end: {
            line: 365,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 365,
            column: 89
          }
        }, {
          start: {
            line: 365,
            column: 92
          },
          end: {
            line: 365,
            column: 144
          }
        }],
        line: 365
      },
      "37": {
        loc: {
          start: {
            line: 370,
            column: 15
          },
          end: {
            line: 370,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 370,
            column: 32
          },
          end: {
            line: 370,
            column: 89
          }
        }, {
          start: {
            line: 370,
            column: 92
          },
          end: {
            line: 370,
            column: 144
          }
        }],
        line: 370
      },
      "38": {
        loc: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        }, {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        }],
        line: 380
      },
      "39": {
        loc: {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 389,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 389,
            column: 7
          }
        }, {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 389,
            column: 7
          }
        }],
        line: 387
      },
      "40": {
        loc: {
          start: {
            line: 404,
            column: 15
          },
          end: {
            line: 404,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 32
          },
          end: {
            line: 404,
            column: 80
          }
        }, {
          start: {
            line: 404,
            column: 83
          },
          end: {
            line: 404,
            column: 122
          }
        }],
        line: 404
      },
      "41": {
        loc: {
          start: {
            line: 413,
            column: 15
          },
          end: {
            line: 413,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 413,
            column: 32
          },
          end: {
            line: 413,
            column: 100
          }
        }, {
          start: {
            line: 413,
            column: 103
          },
          end: {
            line: 413,
            column: 162
          }
        }],
        line: 413
      },
      "42": {
        loc: {
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        }, {
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        }],
        line: 423
      },
      "43": {
        loc: {
          start: {
            line: 430,
            column: 6
          },
          end: {
            line: 432,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 6
          },
          end: {
            line: 432,
            column: 7
          }
        }, {
          start: {
            line: 430,
            column: 6
          },
          end: {
            line: 432,
            column: 7
          }
        }],
        line: 430
      },
      "44": {
        loc: {
          start: {
            line: 446,
            column: 15
          },
          end: {
            line: 446,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 446,
            column: 32
          },
          end: {
            line: 446,
            column: 100
          }
        }, {
          start: {
            line: 446,
            column: 103
          },
          end: {
            line: 446,
            column: 162
          }
        }],
        line: 446
      },
      "45": {
        loc: {
          start: {
            line: 451,
            column: 15
          },
          end: {
            line: 451,
            column: 184
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 451,
            column: 32
          },
          end: {
            line: 451,
            column: 109
          }
        }, {
          start: {
            line: 451,
            column: 112
          },
          end: {
            line: 451,
            column: 184
          }
        }],
        line: 451
      },
      "46": {
        loc: {
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        }, {
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        }],
        line: 458
      },
      "47": {
        loc: {
          start: {
            line: 466,
            column: 15
          },
          end: {
            line: 466,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 466,
            column: 32
          },
          end: {
            line: 466,
            column: 68
          }
        }, {
          start: {
            line: 466,
            column: 70
          },
          end: {
            line: 466,
            column: 97
          }
        }],
        line: 466
      },
      "48": {
        loc: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        }, {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        }],
        line: 468
      },
      "49": {
        loc: {
          start: {
            line: 469,
            column: 6
          },
          end: {
            line: 484,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 472,
            column: 15
          }
        }, {
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 475,
            column: 15
          }
        }, {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 478,
            column: 15
          }
        }, {
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 15
          }
        }, {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 483,
            column: 94
          }
        }],
        line: 469
      },
      "50": {
        loc: {
          start: {
            line: 486,
            column: 6
          },
          end: {
            line: 501,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 489,
            column: 15
          }
        }, {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 15
          }
        }, {
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 495,
            column: 15
          }
        }, {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 15
          }
        }, {
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 500,
            column: 92
          }
        }],
        line: 486
      },
      "51": {
        loc: {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        }, {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        }],
        line: 513
      },
      "52": {
        loc: {
          start: {
            line: 522,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 522,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        }, {
          start: {
            line: 522,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        }],
        line: 522
      },
      "53": {
        loc: {
          start: {
            line: 541,
            column: 17
          },
          end: {
            line: 541,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 541,
            column: 34
          },
          end: {
            line: 541,
            column: 54
          }
        }, {
          start: {
            line: 541,
            column: 57
          },
          end: {
            line: 541,
            column: 68
          }
        }],
        line: 541
      },
      "54": {
        loc: {
          start: {
            line: 563,
            column: 17
          },
          end: {
            line: 563,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 563,
            column: 34
          },
          end: {
            line: 563,
            column: 54
          }
        }, {
          start: {
            line: 563,
            column: 57
          },
          end: {
            line: 563,
            column: 68
          }
        }],
        line: 563
      },
      "55": {
        loc: {
          start: {
            line: 627,
            column: 10
          },
          end: {
            line: 629,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 10
          },
          end: {
            line: 629,
            column: 11
          }
        }, {
          start: {
            line: 627,
            column: 10
          },
          end: {
            line: 629,
            column: 11
          }
        }],
        line: 627
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0, 0, 0],
      "50": [0, 0, 0, 0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "079d1384dfbf7887ab1d9c1406acb923cbffab45"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _logLevel = _interopRequireDefault(require("logLevel"));

var _util = require("../util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var btoa = (cov_2nbbz5g7i5.s[0]++, (cov_2nbbz5g7i5.b[0][0]++, btoa) || (cov_2nbbz5g7i5.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

// import request from 'request'
var StateClient =
/*#__PURE__*/
function () {
  function StateClient(apiClient, draftMode) {
    _classCallCheck(this, StateClient);

    cov_2nbbz5g7i5.f[0]++;
    cov_2nbbz5g7i5.s[1]++;
    this.log = _logLevel["default"];
    cov_2nbbz5g7i5.s[2]++;
    this.log.setDefaultLevel("warn");
    cov_2nbbz5g7i5.s[3]++;
    this.apiClient = apiClient;
    cov_2nbbz5g7i5.s[4]++;
    this.draftMode = draftMode; // Create an alias to the apiClient's methods that we use

    cov_2nbbz5g7i5.s[5]++;
    this.callApi = this.apiClient.callApi;
    cov_2nbbz5g7i5.s[6]++;
    this.callFormDataApi = this.apiClient.callFormDataApi;
    cov_2nbbz5g7i5.s[7]++;
    this.invalidOperation = this.apiClient.invalidOperation;
  } // IM Device state API


  _createClass(StateClient, [{
    key: "createSchema",
    value: function createSchema(schemaContents, name, description) {
      cov_2nbbz5g7i5.f[1]++;
      var body = (cov_2nbbz5g7i5.s[8]++, {
        'schemaFile': schemaContents,
        'schemaType': 'json-schema',
        'name': name
      });
      cov_2nbbz5g7i5.s[9]++;

      if (description) {
        cov_2nbbz5g7i5.b[1][0]++;
        cov_2nbbz5g7i5.s[10]++;
        body.description = description;
      } else {
        cov_2nbbz5g7i5.b[1][1]++;
      }

      var base = (cov_2nbbz5g7i5.s[11]++, this.draftMode ? (cov_2nbbz5g7i5.b[2][0]++, ["draft", "schemas"]) : (cov_2nbbz5g7i5.b[2][1]++, ["schemas"]));
      cov_2nbbz5g7i5.s[12]++;
      return this.callFormDataApi('POST', 201, true, base, body, null);
    }
  }, {
    key: "getSchema",
    value: function getSchema(schemaId) {
      cov_2nbbz5g7i5.f[2]++;
      var base = (cov_2nbbz5g7i5.s[13]++, this.draftMode ? (cov_2nbbz5g7i5.b[3][0]++, ["draft", "schemas", schemaId]) : (cov_2nbbz5g7i5.b[3][1]++, ["schemas", schemaId]));
      cov_2nbbz5g7i5.s[14]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveSchema",
    value: function getActiveSchema(schemaId) {
      cov_2nbbz5g7i5.f[3]++;
      cov_2nbbz5g7i5.s[15]++;
      return this.callApi('GET', 200, true, ["schemas", schemaId]);
    }
  }, {
    key: "getSchemas",
    value: function getSchemas() {
      cov_2nbbz5g7i5.f[4]++;
      var base = (cov_2nbbz5g7i5.s[16]++, this.draftMode ? (cov_2nbbz5g7i5.b[4][0]++, ["draft", "schemas"]) : (cov_2nbbz5g7i5.b[4][1]++, ["schemas"]));
      cov_2nbbz5g7i5.s[17]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveSchemas",
    value: function getActiveSchemas() {
      cov_2nbbz5g7i5.f[5]++;
      cov_2nbbz5g7i5.s[18]++;
      return this.callApi('GET', 200, true, ["schemas"]);
    }
  }, {
    key: "updateSchema",
    value: function updateSchema(schemaId, name, description) {
      cov_2nbbz5g7i5.f[6]++;
      var body = (cov_2nbbz5g7i5.s[19]++, {
        "id": schemaId,
        "name": name,
        "description": description
      });
      var base = (cov_2nbbz5g7i5.s[20]++, this.draftMode ? (cov_2nbbz5g7i5.b[5][0]++, ["draft", "schemas", schemaId]) : (cov_2nbbz5g7i5.b[5][1]++, ["schemas", schemaId]));
      cov_2nbbz5g7i5.s[21]++;
      return this.callApi('PUT', 200, true, base, body);
    }
  }, {
    key: "updateSchemaContent",
    value: function updateSchemaContent(schemaId, schemaContents, filename) {
      cov_2nbbz5g7i5.f[7]++;
      var body = (cov_2nbbz5g7i5.s[22]++, {
        'schemaFile': schemaContents,
        'name': filename
      });
      var base = (cov_2nbbz5g7i5.s[23]++, this.draftMode ? (cov_2nbbz5g7i5.b[6][0]++, ["draft", "schemas", schemaId, "content"]) : (cov_2nbbz5g7i5.b[6][1]++, ["schemas", schemaId, "content"]));
      cov_2nbbz5g7i5.s[24]++;
      return this.callFormDataApi('PUT', 204, false, base, body, null);
    }
  }, {
    key: "getSchemaContent",
    value: function getSchemaContent(schemaId) {
      cov_2nbbz5g7i5.f[8]++;
      var base = (cov_2nbbz5g7i5.s[25]++, this.draftMode ? (cov_2nbbz5g7i5.b[7][0]++, ["draft", "schemas", schemaId, "content"]) : (cov_2nbbz5g7i5.b[7][1]++, ["schemas", schemaId, "content"]));
      cov_2nbbz5g7i5.s[26]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveSchemaContent",
    value: function getActiveSchemaContent(schemaId) {
      cov_2nbbz5g7i5.f[9]++;
      cov_2nbbz5g7i5.s[27]++;
      return this.callApi('GET', 200, true, ["schemas", schemaId, "content"]);
    }
  }, {
    key: "deleteSchema",
    value: function deleteSchema(schemaId) {
      cov_2nbbz5g7i5.f[10]++;
      var base = (cov_2nbbz5g7i5.s[28]++, this.draftMode ? (cov_2nbbz5g7i5.b[8][0]++, ["draft", "schemas", schemaId]) : (cov_2nbbz5g7i5.b[8][1]++, ["schemas", schemaId]));
      cov_2nbbz5g7i5.s[29]++;
      return this.callApi('DELETE', 204, false, base, null);
    }
  }, {
    key: "createEventType",
    value: function createEventType(name, description, schemaId) {
      cov_2nbbz5g7i5.f[11]++;
      var body = (cov_2nbbz5g7i5.s[30]++, {
        'name': name,
        'description': description,
        'schemaId': schemaId
      });
      var base = (cov_2nbbz5g7i5.s[31]++, this.draftMode ? (cov_2nbbz5g7i5.b[9][0]++, ["draft", "event", "types"]) : (cov_2nbbz5g7i5.b[9][1]++, ["event", "types"]));
      cov_2nbbz5g7i5.s[32]++;
      return this.callApi('POST', 201, true, base, JSON.stringify(body));
    }
  }, {
    key: "getEventType",
    value: function getEventType(eventTypeId) {
      cov_2nbbz5g7i5.f[12]++;
      var base = (cov_2nbbz5g7i5.s[33]++, this.draftMode ? (cov_2nbbz5g7i5.b[10][0]++, ["draft", "event", "types", eventTypeId]) : (cov_2nbbz5g7i5.b[10][1]++, ["event", "types", eventTypeId]));
      cov_2nbbz5g7i5.s[34]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveEventType",
    value: function getActiveEventType(eventTypeId) {
      cov_2nbbz5g7i5.f[13]++;
      cov_2nbbz5g7i5.s[35]++;
      return this.callApi('GET', 200, true, ["event", "types", eventTypeId]);
    }
  }, {
    key: "deleteEventType",
    value: function deleteEventType(eventTypeId) {
      cov_2nbbz5g7i5.f[14]++;
      var base = (cov_2nbbz5g7i5.s[36]++, this.draftMode ? (cov_2nbbz5g7i5.b[11][0]++, ["draft", "event", "types", eventTypeId]) : (cov_2nbbz5g7i5.b[11][1]++, ["event", "types", eventTypeId]));
      cov_2nbbz5g7i5.s[37]++;
      return this.callApi('DELETE', 204, false, base);
    }
  }, {
    key: "updateEventType",
    value: function updateEventType(eventTypeId, name, description, schemaId) {
      cov_2nbbz5g7i5.f[15]++;
      var body = (cov_2nbbz5g7i5.s[38]++, {
        "id": eventTypeId,
        "name": name,
        "description": description,
        "schemaId": schemaId
      });
      var base = (cov_2nbbz5g7i5.s[39]++, this.draftMode ? (cov_2nbbz5g7i5.b[12][0]++, ["draft", "event", "types", eventTypeId]) : (cov_2nbbz5g7i5.b[12][1]++, ["event", "types", eventTypeId]));
      cov_2nbbz5g7i5.s[40]++;
      return this.callApi('PUT', 200, true, base, body);
    }
  }, {
    key: "getEventTypes",
    value: function getEventTypes() {
      cov_2nbbz5g7i5.f[16]++;
      var base = (cov_2nbbz5g7i5.s[41]++, this.draftMode ? (cov_2nbbz5g7i5.b[13][0]++, ["draft", "event", "types"]) : (cov_2nbbz5g7i5.b[13][1]++, ["event", "types"]));
      cov_2nbbz5g7i5.s[42]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveEventTypes",
    value: function getActiveEventTypes() {
      cov_2nbbz5g7i5.f[17]++;
      cov_2nbbz5g7i5.s[43]++;
      return this.callApi('GET', 200, true, ["event", "types"]);
    }
  }, {
    key: "createPhysicalInterface",
    value: function createPhysicalInterface(name, description) {
      cov_2nbbz5g7i5.f[18]++;
      var body = (cov_2nbbz5g7i5.s[44]++, {
        'name': name,
        'description': description
      });
      var base = (cov_2nbbz5g7i5.s[45]++, this.draftMode ? (cov_2nbbz5g7i5.b[14][0]++, ["draft", "physicalinterfaces"]) : (cov_2nbbz5g7i5.b[14][1]++, ["physicalinterfaces"]));
      cov_2nbbz5g7i5.s[46]++;
      return this.callApi('POST', 201, true, base, body);
    }
  }, {
    key: "getPhysicalInterface",
    value: function getPhysicalInterface(physicalInterfaceId) {
      cov_2nbbz5g7i5.f[19]++;
      var base = (cov_2nbbz5g7i5.s[47]++, this.draftMode ? (cov_2nbbz5g7i5.b[15][0]++, ["draft", "physicalinterfaces", physicalInterfaceId]) : (cov_2nbbz5g7i5.b[15][1]++, ["physicalinterfaces", physicalInterfaceId]));
      cov_2nbbz5g7i5.s[48]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActivePhysicalInterface",
    value: function getActivePhysicalInterface(physicalInterfaceId) {
      cov_2nbbz5g7i5.f[20]++;
      cov_2nbbz5g7i5.s[49]++;
      return this.callApi('GET', 200, true, ["physicalinterfaces", physicalInterfaceId]);
    }
  }, {
    key: "deletePhysicalInterface",
    value: function deletePhysicalInterface(physicalInterfaceId) {
      cov_2nbbz5g7i5.f[21]++;
      var base = (cov_2nbbz5g7i5.s[50]++, this.draftMode ? (cov_2nbbz5g7i5.b[16][0]++, ["draft", "physicalinterfaces", physicalInterfaceId]) : (cov_2nbbz5g7i5.b[16][1]++, ["physicalinterfaces", physicalInterfaceId]));
      cov_2nbbz5g7i5.s[51]++;
      return this.callApi('DELETE', 204, false, base);
    }
  }, {
    key: "updatePhysicalInterface",
    value: function updatePhysicalInterface(physicalInterfaceId, name, description) {
      cov_2nbbz5g7i5.f[22]++;
      var body = (cov_2nbbz5g7i5.s[52]++, {
        'id': physicalInterfaceId,
        'name': name,
        'description': description
      });
      var base = (cov_2nbbz5g7i5.s[53]++, this.draftMode ? (cov_2nbbz5g7i5.b[17][0]++, ["draft", "physicalinterfaces", physicalInterfaceId]) : (cov_2nbbz5g7i5.b[17][1]++, ["physicalinterfaces", physicalInterfaceId]));
      cov_2nbbz5g7i5.s[54]++;
      return this.callApi('PUT', 200, true, base, body);
    }
  }, {
    key: "getPhysicalInterfaces",
    value: function getPhysicalInterfaces() {
      cov_2nbbz5g7i5.f[23]++;
      var base = (cov_2nbbz5g7i5.s[55]++, this.draftMode ? (cov_2nbbz5g7i5.b[18][0]++, ["draft", "physicalinterfaces"]) : (cov_2nbbz5g7i5.b[18][1]++, ["physicalinterfaces"]));
      cov_2nbbz5g7i5.s[56]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActivePhysicalInterfaces",
    value: function getActivePhysicalInterfaces() {
      cov_2nbbz5g7i5.f[24]++;
      cov_2nbbz5g7i5.s[57]++;
      return this.callApi('GET', 200, true, ["physicalinterfaces"]);
    }
  }, {
    key: "createPhysicalInterfaceEventMapping",
    value: function createPhysicalInterfaceEventMapping(physicalInterfaceId, eventId, eventTypeId) {
      cov_2nbbz5g7i5.f[25]++;
      var body = (cov_2nbbz5g7i5.s[58]++, {
        "eventId": eventId,
        "eventTypeId": eventTypeId
      });
      var base = (cov_2nbbz5g7i5.s[59]++, this.draftMode ? (cov_2nbbz5g7i5.b[19][0]++, ["draft", "physicalinterfaces", physicalInterfaceId, "events"]) : (cov_2nbbz5g7i5.b[19][1]++, ["physicalinterfaces", physicalInterfaceId, "events"]));
      cov_2nbbz5g7i5.s[60]++;
      return this.callApi('POST', 201, true, base, body);
    }
  }, {
    key: "getPhysicalInterfaceEventMappings",
    value: function getPhysicalInterfaceEventMappings(physicalInterfaceId) {
      cov_2nbbz5g7i5.f[26]++;
      var base = (cov_2nbbz5g7i5.s[61]++, this.draftMode ? (cov_2nbbz5g7i5.b[20][0]++, ["draft", "physicalinterfaces", physicalInterfaceId, "events"]) : (cov_2nbbz5g7i5.b[20][1]++, ["physicalinterfaces", physicalInterfaceId, "events"]));
      cov_2nbbz5g7i5.s[62]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActivePhysicalInterfaceEventMappings",
    value: function getActivePhysicalInterfaceEventMappings(physicalInterfaceId) {
      cov_2nbbz5g7i5.f[27]++;
      cov_2nbbz5g7i5.s[63]++;
      return this.callApi('GET', 200, true, ["physicalinterfaces", physicalInterfaceId, "events"]);
    }
  }, {
    key: "deletePhysicalInterfaceEventMapping",
    value: function deletePhysicalInterfaceEventMapping(physicalInterfaceId, eventId) {
      cov_2nbbz5g7i5.f[28]++;
      var base = (cov_2nbbz5g7i5.s[64]++, this.draftMode ? (cov_2nbbz5g7i5.b[21][0]++, ["draft", "physicalinterfaces", physicalInterfaceId, "events", eventId]) : (cov_2nbbz5g7i5.b[21][1]++, ["physicalinterfaces", physicalInterfaceId, "events", eventId]));
      cov_2nbbz5g7i5.s[65]++;
      return this.callApi('DELETE', 204, false, base);
    }
  }, {
    key: "createLogicalInterface",
    value: function createLogicalInterface(name, description, schemaId, alias) {
      cov_2nbbz5g7i5.f[29]++;
      var body = (cov_2nbbz5g7i5.s[66]++, {
        'name': name,
        'description': description,
        'schemaId': schemaId
      });
      cov_2nbbz5g7i5.s[67]++;

      if (alias !== undefined) {
        cov_2nbbz5g7i5.b[22][0]++;
        cov_2nbbz5g7i5.s[68]++;
        body.alias = alias;
      } else {
        cov_2nbbz5g7i5.b[22][1]++;
      }

      var base = (cov_2nbbz5g7i5.s[69]++, this.draftMode ? (cov_2nbbz5g7i5.b[23][0]++, ["draft", "logicalinterfaces"]) : (cov_2nbbz5g7i5.b[23][1]++, ["applicationinterfaces"]));
      cov_2nbbz5g7i5.s[70]++;
      return this.callApi('POST', 201, true, base, body);
    }
  }, {
    key: "getLogicalInterface",
    value: function getLogicalInterface(logicalInterfaceId) {
      cov_2nbbz5g7i5.f[30]++;
      var base = (cov_2nbbz5g7i5.s[71]++, this.draftMode ? (cov_2nbbz5g7i5.b[24][0]++, ["draft", "logicalinterfaces", logicalInterfaceId]) : (cov_2nbbz5g7i5.b[24][1]++, ["applicationinterfaces", logicalInterfaceId]));
      cov_2nbbz5g7i5.s[72]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveLogicalInterface",
    value: function getActiveLogicalInterface(logicalInterfaceId) {
      cov_2nbbz5g7i5.f[31]++;
      cov_2nbbz5g7i5.s[73]++;
      return this.callApi('GET', 200, true, ["logicalinterfaces", logicalInterfaceId]);
    }
  }, {
    key: "deleteLogicalInterface",
    value: function deleteLogicalInterface(logicalInterfaceId) {
      cov_2nbbz5g7i5.f[32]++;
      var base = (cov_2nbbz5g7i5.s[74]++, this.draftMode ? (cov_2nbbz5g7i5.b[25][0]++, ["draft", "logicalinterfaces", logicalInterfaceId]) : (cov_2nbbz5g7i5.b[25][1]++, ["applicationinterfaces", logicalInterfaceId]));
      cov_2nbbz5g7i5.s[75]++;
      return this.callApi('DELETE', 204, false, base);
    }
  }, {
    key: "updateLogicalInterface",
    value: function updateLogicalInterface(logicalInterfaceId, name, description, schemaId, alias) {
      cov_2nbbz5g7i5.f[33]++;
      var body = (cov_2nbbz5g7i5.s[76]++, {
        "id": logicalInterfaceId,
        "name": name,
        "description": description,
        "schemaId": schemaId
      });
      cov_2nbbz5g7i5.s[77]++;

      if (alias !== undefined) {
        cov_2nbbz5g7i5.b[26][0]++;
        cov_2nbbz5g7i5.s[78]++;
        body.alias = alias;
      } else {
        cov_2nbbz5g7i5.b[26][1]++;
      }

      var base = (cov_2nbbz5g7i5.s[79]++, this.draftMode ? (cov_2nbbz5g7i5.b[27][0]++, ["draft", "logicalinterfaces", logicalInterfaceId]) : (cov_2nbbz5g7i5.b[27][1]++, ["applicationinterfaces", logicalInterfaceId]));
      cov_2nbbz5g7i5.s[80]++;
      return this.callApi('PUT', 200, true, base, body);
    }
  }, {
    key: "getLogicalInterfaces",
    value: function getLogicalInterfaces() {
      cov_2nbbz5g7i5.f[34]++;
      var base = (cov_2nbbz5g7i5.s[81]++, this.draftMode ? (cov_2nbbz5g7i5.b[28][0]++, ["draft", "logicalinterfaces"]) : (cov_2nbbz5g7i5.b[28][1]++, ["applicationinterfaces"]));
      cov_2nbbz5g7i5.s[82]++;
      return this.callApi('GET', 200, true, ["logicalinterfaces"]);
    }
  }, {
    key: "getActiveLogicalInterfaces",
    value: function getActiveLogicalInterfaces() {
      cov_2nbbz5g7i5.f[35]++;
      cov_2nbbz5g7i5.s[83]++;
      return this.callApi('GET', 200, true, ["logicalinterfaces"]);
    } // Application interface patch operation on draft version
    // Acceptable operation id - validate-configuration, activate-configuration, list-differences

  }, {
    key: "patchOperationLogicalInterface",
    value: function patchOperationLogicalInterface(logicalInterfaceId, operationId) {
      cov_2nbbz5g7i5.f[36]++;
      var body = (cov_2nbbz5g7i5.s[84]++, {
        "operation": operationId
      });
      cov_2nbbz5g7i5.s[85]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[29][0]++;
        cov_2nbbz5g7i5.s[86]++;

        switch (operationId) {
          case 'validate-configuration':
            cov_2nbbz5g7i5.b[30][0]++;
            cov_2nbbz5g7i5.s[87]++;
            return this.callApi('PATCH', 200, true, ["draft", "logicalinterfaces", logicalInterfaceId], body);
            cov_2nbbz5g7i5.s[88]++;
            break;

          case 'activate-configuration':
            cov_2nbbz5g7i5.b[30][1]++;
            cov_2nbbz5g7i5.s[89]++;
            return this.callApi('PATCH', 202, true, ["draft", "logicalinterfaces", logicalInterfaceId], body);

          case 'deactivate-configuration':
            cov_2nbbz5g7i5.b[30][2]++;
            cov_2nbbz5g7i5.s[90]++;
            return this.callApi('PATCH', 202, true, ["draft", "logicalinterfaces", logicalInterfaceId], body);

          case 'list-differences':
            cov_2nbbz5g7i5.b[30][3]++;
            cov_2nbbz5g7i5.s[91]++;
            return this.callApi('PATCH', 200, true, ["draft", "logicalinterfaces", logicalInterfaceId], body);

          default:
            cov_2nbbz5g7i5.b[30][4]++;
            cov_2nbbz5g7i5.s[92]++;
            return this.callApi('PATCH', 200, true, ["draft", "logicalinterfaces", logicalInterfaceId], body);
        }
      } else {
        cov_2nbbz5g7i5.b[29][1]++;
        cov_2nbbz5g7i5.s[93]++;
        return this.invalidOperation("PATCH operation not allowed on logical interface");
      }
    } // Application interface patch operation on active version
    // Acceptable operation id - deactivate-configuration 

  }, {
    key: "patchOperationActiveLogicalInterface",
    value: function patchOperationActiveLogicalInterface(logicalInterfaceId, operationId) {
      cov_2nbbz5g7i5.f[37]++;
      var body = (cov_2nbbz5g7i5.s[94]++, {
        "operation": operationId
      });
      cov_2nbbz5g7i5.s[95]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[31][0]++;
        cov_2nbbz5g7i5.s[96]++;
        return this.callApi('PATCH', 202, true, ["logicalinterfaces", logicalInterfaceId], body);
      } else {
        cov_2nbbz5g7i5.b[31][1]++;
        cov_2nbbz5g7i5.s[97]++;
        return this.invalidOperation("PATCH operation 'deactivate-configuration' not allowed on logical interface");
      }
    } // Create device type with physical Interface Id

  }, {
    key: "createDeviceType",
    value: function createDeviceType(typeId, description, deviceInfo, metadata, classId, physicalInterfaceId) {
      cov_2nbbz5g7i5.f[38]++;
      cov_2nbbz5g7i5.s[98]++;
      this.log.debug("[ApiClient] registerDeviceType(" + typeId + ", " + description + ", " + deviceInfo + ", " + metadata + ", " + classId + ", " + physicalInterfaceId + ")");
      cov_2nbbz5g7i5.s[99]++;
      classId = (cov_2nbbz5g7i5.b[32][0]++, classId) || (cov_2nbbz5g7i5.b[32][1]++, "Device");
      var body = (cov_2nbbz5g7i5.s[100]++, {
        id: typeId,
        classId: classId,
        deviceInfo: deviceInfo,
        description: description,
        metadata: metadata,
        physicalInterfaceId: physicalInterfaceId
      });
      cov_2nbbz5g7i5.s[101]++;
      return this.callApi('POST', 201, true, ['device', 'types'], JSON.stringify(body));
    }
  }, {
    key: "createDeviceTypePhysicalInterfaceAssociation",
    value: function createDeviceTypePhysicalInterfaceAssociation(typeId, physicalInterfaceId) {
      cov_2nbbz5g7i5.f[39]++;
      var body = (cov_2nbbz5g7i5.s[102]++, {
        id: physicalInterfaceId
      });
      cov_2nbbz5g7i5.s[103]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[33][0]++;
        cov_2nbbz5g7i5.s[104]++;
        return this.callApi('POST', 201, true, ['draft', 'device', 'types', typeId, 'physicalinterface'], JSON.stringify(body));
      } else {
        cov_2nbbz5g7i5.b[33][1]++;
        cov_2nbbz5g7i5.s[105]++;
        return this.callApi('PUT', 200, true, ['device', 'types', typeId], JSON.stringify({
          physicalInterfaceId: physicalInterfaceId
        }));
      }
    }
  }, {
    key: "getDeviceTypePhysicalInterfaces",
    value: function getDeviceTypePhysicalInterfaces(typeId) {
      cov_2nbbz5g7i5.f[40]++;
      cov_2nbbz5g7i5.s[106]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[34][0]++;
        cov_2nbbz5g7i5.s[107]++;
        return this.callApi('GET', 200, true, ['draft', 'device', 'types', typeId, 'physicalinterface']);
      } else {
        cov_2nbbz5g7i5.b[34][1]++;
        cov_2nbbz5g7i5.s[108]++;
        return this.invalidOperation("GET Device type's physical interface is not allowed");
      }
    }
  }, {
    key: "getActiveDeviceTypePhysicalInterfaces",
    value: function getActiveDeviceTypePhysicalInterfaces(typeId) {
      cov_2nbbz5g7i5.f[41]++;
      cov_2nbbz5g7i5.s[109]++;
      return this.callApi('GET', 200, true, ['device', 'types', typeId, 'physicalinterface']);
    }
  }, {
    key: "deleteDeviceTypePhysicalInterfaceAssociation",
    value: function deleteDeviceTypePhysicalInterfaceAssociation(typeId) {
      cov_2nbbz5g7i5.f[42]++;
      cov_2nbbz5g7i5.s[110]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[35][0]++;
        cov_2nbbz5g7i5.s[111]++;
        return this.callApi('DELETE', 204, false, ['draft', 'device', 'types', typeId, 'physicalinterface']);
      } else {
        cov_2nbbz5g7i5.b[35][1]++;
        cov_2nbbz5g7i5.s[112]++;
        return this.invalidOperation("DELETE Device type's physical interface is not allowed");
      }
    }
  }, {
    key: "createDeviceTypeLogicalInterfaceAssociation",
    value: function createDeviceTypeLogicalInterfaceAssociation(typeId, logicalInterfaceId) {
      cov_2nbbz5g7i5.f[43]++;
      var body = (cov_2nbbz5g7i5.s[113]++, {
        'id': logicalInterfaceId
      });
      var base = (cov_2nbbz5g7i5.s[114]++, this.draftMode ? (cov_2nbbz5g7i5.b[36][0]++, ['draft', 'device', 'types', typeId, 'logicalinterfaces']) : (cov_2nbbz5g7i5.b[36][1]++, ['device', 'types', typeId, 'applicationinterfaces']));
      cov_2nbbz5g7i5.s[115]++;
      return this.callApi('POST', 201, true, base, body);
    }
  }, {
    key: "getDeviceTypeLogicalInterfaces",
    value: function getDeviceTypeLogicalInterfaces(typeId) {
      cov_2nbbz5g7i5.f[44]++;
      var base = (cov_2nbbz5g7i5.s[116]++, this.draftMode ? (cov_2nbbz5g7i5.b[37][0]++, ['draft', 'device', 'types', typeId, 'logicalinterfaces']) : (cov_2nbbz5g7i5.b[37][1]++, ['device', 'types', typeId, 'applicationinterfaces']));
      cov_2nbbz5g7i5.s[117]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveDeviceTypeLogicalInterfaces",
    value: function getActiveDeviceTypeLogicalInterfaces(typeId) {
      cov_2nbbz5g7i5.f[45]++;
      cov_2nbbz5g7i5.s[118]++;
      return this.callApi('GET', 200, true, ['device', 'types', typeId, 'logicalinterfaces']);
    }
  }, {
    key: "createDeviceTypeLogicalInterfacePropertyMappings",
    value: function createDeviceTypeLogicalInterfacePropertyMappings(typeId, logicalInterfaceId, mappings, notificationStrategy) {
      cov_2nbbz5g7i5.f[46]++;
      var body = (cov_2nbbz5g7i5.s[119]++, null),
          base = (cov_2nbbz5g7i5.s[120]++, null);
      cov_2nbbz5g7i5.s[121]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[38][0]++;
        cov_2nbbz5g7i5.s[122]++;
        body = {
          "logicalInterfaceId": logicalInterfaceId,
          "propertyMappings": mappings,
          "notificationStrategy": "never"
        };
        cov_2nbbz5g7i5.s[123]++;

        if (notificationStrategy) {
          cov_2nbbz5g7i5.b[39][0]++;
          cov_2nbbz5g7i5.s[124]++;
          body.notificationStrategy = notificationStrategy;
        } else {
          cov_2nbbz5g7i5.b[39][1]++;
        }

        cov_2nbbz5g7i5.s[125]++;
        base = ['draft', 'device', 'types', typeId, 'mappings'];
      } else {
        cov_2nbbz5g7i5.b[38][1]++;
        cov_2nbbz5g7i5.s[126]++;
        body = {
          "applicationInterfaceId": logicalInterfaceId,
          "propertyMappings": mappings
        };
        cov_2nbbz5g7i5.s[127]++;
        base = ['device', 'types', typeId, 'mappings'];
      }

      cov_2nbbz5g7i5.s[128]++;
      return this.callApi('POST', 201, true, base, body);
    }
  }, {
    key: "getDeviceTypePropertyMappings",
    value: function getDeviceTypePropertyMappings(typeId) {
      cov_2nbbz5g7i5.f[47]++;
      var base = (cov_2nbbz5g7i5.s[129]++, this.draftMode ? (cov_2nbbz5g7i5.b[40][0]++, ['draft', 'device', 'types', typeId, 'mappings']) : (cov_2nbbz5g7i5.b[40][1]++, ['device', 'types', typeId, 'mappings']));
      cov_2nbbz5g7i5.s[130]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveDeviceTypePropertyMappings",
    value: function getActiveDeviceTypePropertyMappings(typeId) {
      cov_2nbbz5g7i5.f[48]++;
      cov_2nbbz5g7i5.s[131]++;
      return this.callApi('GET', 200, true, ['device', 'types', typeId, 'mappings']);
    }
  }, {
    key: "getDeviceTypeLogicalInterfacePropertyMappings",
    value: function getDeviceTypeLogicalInterfacePropertyMappings(typeId, logicalInterfaceId) {
      cov_2nbbz5g7i5.f[49]++;
      var base = (cov_2nbbz5g7i5.s[132]++, this.draftMode ? (cov_2nbbz5g7i5.b[41][0]++, ['draft', 'device', 'types', typeId, 'mappings', logicalInterfaceId]) : (cov_2nbbz5g7i5.b[41][1]++, ['device', 'types', typeId, 'mappings', logicalInterfaceId]));
      cov_2nbbz5g7i5.s[133]++;
      return this.callApi('GET', 200, true, base);
    }
  }, {
    key: "getActiveDeviceTypeLogicalInterfacePropertyMappings",
    value: function getActiveDeviceTypeLogicalInterfacePropertyMappings(typeId, logicalInterfaceId) {
      cov_2nbbz5g7i5.f[50]++;
      cov_2nbbz5g7i5.s[134]++;
      return this.callApi('GET', 200, true, ['device', 'types', typeId, 'mappings', logicalInterfaceId]);
    }
  }, {
    key: "updateDeviceTypeLogicalInterfacePropertyMappings",
    value: function updateDeviceTypeLogicalInterfacePropertyMappings(typeId, logicalInterfaceId, mappings, notificationStrategy) {
      cov_2nbbz5g7i5.f[51]++;
      var body = (cov_2nbbz5g7i5.s[135]++, null),
          base = (cov_2nbbz5g7i5.s[136]++, null);
      cov_2nbbz5g7i5.s[137]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[42][0]++;
        cov_2nbbz5g7i5.s[138]++;
        body = {
          "logicalInterfaceId": logicalInterfaceId,
          "propertyMappings": mappings,
          "notificationStrategy": "never"
        };
        cov_2nbbz5g7i5.s[139]++;

        if (notificationStrategy) {
          cov_2nbbz5g7i5.b[43][0]++;
          cov_2nbbz5g7i5.s[140]++;
          body.notificationStrategy = notificationStrategy;
        } else {
          cov_2nbbz5g7i5.b[43][1]++;
        }

        cov_2nbbz5g7i5.s[141]++;
        base = ['draft', 'device', 'types', typeId, 'mappings', logicalInterfaceId];
      } else {
        cov_2nbbz5g7i5.b[42][1]++;
        cov_2nbbz5g7i5.s[142]++;
        body = {
          "applicationInterfaceId": logicalInterfaceId,
          "propertyMappings": mappings
        };
        cov_2nbbz5g7i5.s[143]++;
        base = ['device', 'types', typeId, 'mappings', logicalInterfaceId];
      }

      cov_2nbbz5g7i5.s[144]++;
      return this.callApi('PUT', 200, false, base, body);
    }
  }, {
    key: "deleteDeviceTypeLogicalInterfacePropertyMappings",
    value: function deleteDeviceTypeLogicalInterfacePropertyMappings(typeId, logicalInterfaceId) {
      cov_2nbbz5g7i5.f[52]++;
      var base = (cov_2nbbz5g7i5.s[145]++, this.draftMode ? (cov_2nbbz5g7i5.b[44][0]++, ['draft', 'device', 'types', typeId, 'mappings', logicalInterfaceId]) : (cov_2nbbz5g7i5.b[44][1]++, ['device', 'types', typeId, 'mappings', logicalInterfaceId]));
      cov_2nbbz5g7i5.s[146]++;
      return this.callApi('DELETE', 204, false, base);
    }
  }, {
    key: "deleteDeviceTypeLogicalInterfaceAssociation",
    value: function deleteDeviceTypeLogicalInterfaceAssociation(typeId, logicalInterfaceId) {
      cov_2nbbz5g7i5.f[53]++;
      var base = (cov_2nbbz5g7i5.s[147]++, this.draftMode ? (cov_2nbbz5g7i5.b[45][0]++, ['draft', 'device', 'types', typeId, 'logicalinterfaces', logicalInterfaceId]) : (cov_2nbbz5g7i5.b[45][1]++, ['device', 'types', typeId, 'applicationinterfaces', logicalInterfaceId]));
      cov_2nbbz5g7i5.s[148]++;
      return this.callApi('DELETE', 204, false, base);
    } // Device Type patch operation on draft version
    // Acceptable operation id - validate-configuration, activate-configuration, list-differences 

  }, {
    key: "patchOperationDeviceType",
    value: function patchOperationDeviceType(typeId, operationId) {
      cov_2nbbz5g7i5.f[54]++;
      cov_2nbbz5g7i5.s[149]++;

      if (!operationId) {
        cov_2nbbz5g7i5.b[46][0]++;
        cov_2nbbz5g7i5.s[150]++;
        return invalidOperation("PATCH operation is not allowed. Operation id is expected");
      } else {
        cov_2nbbz5g7i5.b[46][1]++;
      }

      var body = (cov_2nbbz5g7i5.s[151]++, {
        "operation": operationId
      });
      var base = (cov_2nbbz5g7i5.s[152]++, this.draftMode ? (cov_2nbbz5g7i5.b[47][0]++, ['draft', 'device', 'types', typeId]) : (cov_2nbbz5g7i5.b[47][1]++, ['device', 'types', typeId]));
      cov_2nbbz5g7i5.s[153]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[48][0]++;
        cov_2nbbz5g7i5.s[154]++;

        switch (operationId) {
          case 'validate-configuration':
            cov_2nbbz5g7i5.b[49][0]++;
            cov_2nbbz5g7i5.s[155]++;
            return this.callApi('PATCH', 200, true, base, body);
            cov_2nbbz5g7i5.s[156]++;
            break;

          case 'activate-configuration':
            cov_2nbbz5g7i5.b[49][1]++;
            cov_2nbbz5g7i5.s[157]++;
            return this.callApi('PATCH', 202, true, base, body);
            cov_2nbbz5g7i5.s[158]++;
            break;

          case 'deactivate-configuration':
            cov_2nbbz5g7i5.b[49][2]++;
            cov_2nbbz5g7i5.s[159]++;
            return this.callApi('PATCH', 202, true, base, body);
            cov_2nbbz5g7i5.s[160]++;
            break;

          case 'list-differences':
            cov_2nbbz5g7i5.b[49][3]++;
            cov_2nbbz5g7i5.s[161]++;
            return this.callApi('PATCH', 200, true, base, body);
            cov_2nbbz5g7i5.s[162]++;
            break;

          default:
            cov_2nbbz5g7i5.b[49][4]++;
            cov_2nbbz5g7i5.s[163]++;
            return this.invalidOperation("PATCH operation is not allowed. Invalid operation id");
        }
      } else {
        cov_2nbbz5g7i5.b[48][1]++;
        cov_2nbbz5g7i5.s[164]++;

        switch (operationId) {
          case 'validate-configuration':
            cov_2nbbz5g7i5.b[50][0]++;
            cov_2nbbz5g7i5.s[165]++;
            return this.callApi('PATCH', 200, true, base, body);
            cov_2nbbz5g7i5.s[166]++;
            break;

          case 'deploy-configuration':
            cov_2nbbz5g7i5.b[50][1]++;
            cov_2nbbz5g7i5.s[167]++;
            return this.callApi('PATCH', 202, true, base, body);
            cov_2nbbz5g7i5.s[168]++;
            break;

          case 'remove-deployed-configuration':
            cov_2nbbz5g7i5.b[50][2]++;
            cov_2nbbz5g7i5.s[169]++;
            return this.callApi('PATCH', 202, true, base, body);
            cov_2nbbz5g7i5.s[170]++;
            break;

          case 'list-differences':
            cov_2nbbz5g7i5.b[50][3]++;
            cov_2nbbz5g7i5.s[171]++;
            return this.invalidOperation("PATCH operation 'list-differences' is not allowed");
            cov_2nbbz5g7i5.s[172]++;
            break;

          default:
            cov_2nbbz5g7i5.b[50][4]++;
            cov_2nbbz5g7i5.s[173]++;
            return this.invalidOperation("PATCH operation is not allowed. Invalid operation id");
        }
      }
    } // Device Type patch operation on active version
    // Acceptable operation id - deactivate-configuration 

  }, {
    key: "patchOperationActiveDeviceType",
    value: function patchOperationActiveDeviceType(typeId, operationId) {
      cov_2nbbz5g7i5.f[55]++;
      var body = (cov_2nbbz5g7i5.s[174]++, {
        "operation": operationId
      });
      cov_2nbbz5g7i5.s[175]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[51][0]++;
        cov_2nbbz5g7i5.s[176]++;
        return this.callApi('PATCH', 202, true, ['device', 'types', typeId], body);
      } else {
        cov_2nbbz5g7i5.b[51][1]++;
        cov_2nbbz5g7i5.s[177]++;
        return this.invalidOperation("PATCH operation 'deactivate-configuration' is not allowed");
      }
    }
  }, {
    key: "getDeviceTypeDeployedConfiguration",
    value: function getDeviceTypeDeployedConfiguration(typeId) {
      cov_2nbbz5g7i5.f[56]++;
      cov_2nbbz5g7i5.s[178]++;

      if (this.draftMode) {
        cov_2nbbz5g7i5.b[52][0]++;
        cov_2nbbz5g7i5.s[179]++;
        return this.invalidOperation("GET deployed configuration is not allowed");
      } else {
        cov_2nbbz5g7i5.b[52][1]++;
        cov_2nbbz5g7i5.s[180]++;
        return this.callApi('GET', 200, true, ['device', 'types', typeId, 'deployedconfiguration']);
      }
    }
  }, {
    key: "getDeviceState",
    value: function getDeviceState(typeId, deviceId, logicalInterfaceId) {
      cov_2nbbz5g7i5.f[57]++;
      cov_2nbbz5g7i5.s[181]++;
      return this.callApi('GET', 200, true, ['device', 'types', typeId, 'devices', deviceId, 'state', logicalInterfaceId]);
    }
  }, {
    key: "createSchemaAndEventType",
    value: function createSchemaAndEventType(schemaContents, schemaFileName, eventTypeName, eventDescription) {
      var _this = this;

      cov_2nbbz5g7i5.f[58]++;
      var body = (cov_2nbbz5g7i5.s[182]++, {
        'schemaFile': schemaContents,
        'schemaType': 'json-schema',
        'name': schemaFileName
      });
      var createSchema = (cov_2nbbz5g7i5.s[183]++, new Promise(function (resolve, reject) {
        cov_2nbbz5g7i5.f[59]++;
        var base = (cov_2nbbz5g7i5.s[184]++, _this.draftMode ? (cov_2nbbz5g7i5.b[53][0]++, ["draft", "schemas"]) : (cov_2nbbz5g7i5.b[53][1]++, ["schemas"]));
        cov_2nbbz5g7i5.s[185]++;

        _this.callFormDataApi('POST', 201, true, base, body, null).then(function (result) {
          cov_2nbbz5g7i5.f[60]++;
          cov_2nbbz5g7i5.s[186]++;
          resolve(result);
        }, function (error) {
          cov_2nbbz5g7i5.f[61]++;
          cov_2nbbz5g7i5.s[187]++;
          reject(error);
        });
      }));
      cov_2nbbz5g7i5.s[188]++;
      return createSchema.then(function (value) {
        cov_2nbbz5g7i5.f[62]++;
        var schemaId = (cov_2nbbz5g7i5.s[189]++, value["id"]);
        cov_2nbbz5g7i5.s[190]++;
        return _this.createEventType(eventTypeName, eventDescription, schemaId);
      });
    }
  }, {
    key: "createSchemaAndLogicalInterface",
    value: function createSchemaAndLogicalInterface(schemaContents, schemaFileName, appInterfaceName, appInterfaceDescription, appInterfaceAlias) {
      var _this2 = this;

      cov_2nbbz5g7i5.f[63]++;
      var body = (cov_2nbbz5g7i5.s[191]++, {
        'schemaFile': schemaContents,
        'schemaType': 'json-schema',
        'name': schemaFileName
      });
      var createSchema = (cov_2nbbz5g7i5.s[192]++, new Promise(function (resolve, reject) {
        cov_2nbbz5g7i5.f[64]++;
        var base = (cov_2nbbz5g7i5.s[193]++, _this2.draftMode ? (cov_2nbbz5g7i5.b[54][0]++, ["draft", "schemas"]) : (cov_2nbbz5g7i5.b[54][1]++, ["schemas"]));
        cov_2nbbz5g7i5.s[194]++;

        _this2.callFormDataApi('POST', 201, true, base, body, null).then(function (result) {
          cov_2nbbz5g7i5.f[65]++;
          cov_2nbbz5g7i5.s[195]++;
          resolve(result);
        }, function (error) {
          cov_2nbbz5g7i5.f[66]++;
          cov_2nbbz5g7i5.s[196]++;
          reject(error);
        });
      }));
      cov_2nbbz5g7i5.s[197]++;
      return createSchema.then(function (value) {
        cov_2nbbz5g7i5.f[67]++;
        var schemaId = (cov_2nbbz5g7i5.s[198]++, value.id);
        cov_2nbbz5g7i5.s[199]++;
        return _this2.createLogicalInterface(appInterfaceName, appInterfaceDescription, schemaId, appInterfaceAlias);
      });
    }
  }, {
    key: "createPhysicalInterfaceWithEventMapping",
    value: function createPhysicalInterfaceWithEventMapping(physicalInterfaceName, description, eventId, eventTypeId) {
      var _this3 = this;

      cov_2nbbz5g7i5.f[68]++;
      var createPhysicalInterface = (cov_2nbbz5g7i5.s[200]++, new Promise(function (resolve, reject) {
        cov_2nbbz5g7i5.f[69]++;
        cov_2nbbz5g7i5.s[201]++;

        _this3.createPhysicalInterface(physicalInterfaceName, description).then(function (result) {
          cov_2nbbz5g7i5.f[70]++;
          cov_2nbbz5g7i5.s[202]++;
          resolve(result);
        }, function (error) {
          cov_2nbbz5g7i5.f[71]++;
          cov_2nbbz5g7i5.s[203]++;
          reject(error);
        });
      }));
      cov_2nbbz5g7i5.s[204]++;
      return createPhysicalInterface.then(function (value) {
        cov_2nbbz5g7i5.f[72]++;
        var physicalInterface = (cov_2nbbz5g7i5.s[205]++, value);
        var PhysicalInterfaceEventMapping = (cov_2nbbz5g7i5.s[206]++, new Promise(function (resolve, reject) {
          cov_2nbbz5g7i5.f[73]++;
          cov_2nbbz5g7i5.s[207]++;

          _this3.createPhysicalInterfaceEventMapping(physicalInterface.id, eventId, eventTypeId).then(function (result) {
            cov_2nbbz5g7i5.f[74]++;
            cov_2nbbz5g7i5.s[208]++;
            resolve([physicalInterface, result]);
          }, function (error) {
            cov_2nbbz5g7i5.f[75]++;
            cov_2nbbz5g7i5.s[209]++;
            reject(error);
          });
        }));
        cov_2nbbz5g7i5.s[210]++;
        return PhysicalInterfaceEventMapping.then(function (result) {
          cov_2nbbz5g7i5.f[76]++;
          cov_2nbbz5g7i5.s[211]++;
          return result;
        });
      });
    }
  }, {
    key: "createDeviceTypeLogicalInterfaceEventMapping",
    value: function createDeviceTypeLogicalInterfaceEventMapping(deviceTypeName, description, logicalInterfaceId, eventMapping, notificationStrategy) {
      var _this4 = this;

      cov_2nbbz5g7i5.f[77]++;
      var createDeviceType = (cov_2nbbz5g7i5.s[212]++, new Promise(function (resolve, reject) {
        cov_2nbbz5g7i5.f[78]++;
        cov_2nbbz5g7i5.s[213]++;

        _this4.createDeviceType(deviceTypeName, description).then(function (result) {
          cov_2nbbz5g7i5.f[79]++;
          cov_2nbbz5g7i5.s[214]++;
          resolve(result);
        }, function (error) {
          cov_2nbbz5g7i5.f[80]++;
          cov_2nbbz5g7i5.s[215]++;
          reject(error);
        });
      }));
      cov_2nbbz5g7i5.s[216]++;
      return createDeviceType.then(function (result) {
        cov_2nbbz5g7i5.f[81]++;
        var deviceObject = (cov_2nbbz5g7i5.s[217]++, result);
        var deviceTypeLogicalInterface = (cov_2nbbz5g7i5.s[218]++, null);
        var deviceTypeLogicalInterface = (cov_2nbbz5g7i5.s[219]++, new Promise(function (resolve, reject) {
          cov_2nbbz5g7i5.f[82]++;
          cov_2nbbz5g7i5.s[220]++;

          _this4.createDeviceTypeLogicalInterfaceAssociation(deviceObject.id, logicalInterfaceId).then(function (result) {
            cov_2nbbz5g7i5.f[83]++;
            cov_2nbbz5g7i5.s[221]++;
            resolve(result);
          }, function (error) {
            cov_2nbbz5g7i5.f[84]++;
            cov_2nbbz5g7i5.s[222]++;
            reject(error);
          });
        }));
        cov_2nbbz5g7i5.s[223]++;
        return deviceTypeLogicalInterface.then(function (result) {
          cov_2nbbz5g7i5.f[85]++;
          cov_2nbbz5g7i5.s[224]++;
          deviceTypeLogicalInterface = result;
          var deviceTypeLogicalInterfacePropertyMappings = (cov_2nbbz5g7i5.s[225]++, new Promise(function (resolve, reject) {
            cov_2nbbz5g7i5.f[86]++;
            var notificationstrategy = (cov_2nbbz5g7i5.s[226]++, "never");
            cov_2nbbz5g7i5.s[227]++;

            if (notificationStrategy) {
              cov_2nbbz5g7i5.b[55][0]++;
              cov_2nbbz5g7i5.s[228]++;
              notificationstrategy = notificationStrategy;
            } else {
              cov_2nbbz5g7i5.b[55][1]++;
            }

            cov_2nbbz5g7i5.s[229]++;

            _this4.createDeviceTypeLogicalInterfacePropertyMappings(deviceObject.id, logicalInterfaceId, eventMapping, notificationstrategy).then(function (result) {
              cov_2nbbz5g7i5.f[87]++;
              var arr = (cov_2nbbz5g7i5.s[230]++, [deviceObject, deviceTypeLogicalInterface, result]);
              cov_2nbbz5g7i5.s[231]++;
              resolve(arr);
            }, function (error) {
              cov_2nbbz5g7i5.f[88]++;
              cov_2nbbz5g7i5.s[232]++;
              reject(error);
            });
          }));
          cov_2nbbz5g7i5.s[233]++;
          return deviceTypeLogicalInterfacePropertyMappings.then(function (result) {
            cov_2nbbz5g7i5.f[89]++;
            cov_2nbbz5g7i5.s[234]++;
            return result;
          });
        });
      });
    }
  }]);

  return StateClient;
}();

exports["default"] = StateClient;
;

},{"../util":163,"btoa":32,"logLevel":105}],161:[function(require,module,exports){
(function (Buffer){
"use strict";

var cov_2jqxgkyb09 = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\application\\ApplicationClient.js";
  var hash = "8a27bf67e1d1cb5bf54006bc2a60ecf0d8c4bc0b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\application\\ApplicationClient.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "1": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "2": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 83
        }
      },
      "3": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 83
        }
      },
      "4": {
        start: {
          line: 22,
          column: 30
        },
        end: {
          line: 22,
          column: 85
        }
      },
      "5": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "6": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 77
        }
      },
      "7": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 74
        }
      },
      "8": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "9": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 27,
          column: 55
        }
      },
      "10": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "11": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "12": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "15": {
        start: {
          line: 38,
          column: 10
        },
        end: {
          line: 38,
          column: 90
        }
      },
      "16": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 10
        },
        end: {
          line: 41,
          column: 87
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 54
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 26
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 37
        }
      },
      "21": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 76
        }
      },
      "23": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "24": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 58,
          column: 7
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 88
        }
      },
      "26": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "27": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "28": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 93
        }
      },
      "29": {
        start: {
          line: 64,
          column: 11
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "30": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "31": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 69
        }
      },
      "32": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 28
        }
      },
      "33": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 25
        }
      },
      "34": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "35": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "36": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 76,
          column: 77
        }
      },
      "37": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 46
        }
      },
      "38": {
        start: {
          line: 79,
          column: 11
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "39": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 82,
          column: 7
        }
      },
      "40": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 76
        }
      },
      "41": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "42": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 38
        }
      },
      "43": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "44": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 27
        }
      },
      "45": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "46": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 44
        }
      },
      "47": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 26
        }
      },
      "48": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "49": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "50": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "51": {
        start: {
          line: 100,
          column: 7
        },
        end: {
          line: 100,
          column: 41
        }
      },
      "52": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 28
        }
      },
      "53": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 131
        }
      },
      "54": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 116
        }
      },
      "55": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 19
        }
      },
      "56": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 20
        }
      },
      "57": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 136,
          column: 7
        }
      },
      "58": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 80
        }
      },
      "59": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 30
        }
      },
      "60": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "61": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "62": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 31
        }
      },
      "63": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 26
        }
      },
      "64": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 135,
          column: 7
        }
      },
      "65": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "66": {
        start: {
          line: 128,
          column: 21
        },
        end: {
          line: 128,
          column: 22
        }
      },
      "67": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 53
        }
      },
      "68": {
        start: {
          line: 129,
          column: 10
        },
        end: {
          line: 129,
          column: 77
        }
      },
      "69": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 95
        }
      },
      "70": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 195,
          column: 7
        }
      },
      "71": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 88
        }
      },
      "72": {
        start: {
          line: 144,
          column: 18
        },
        end: {
          line: 144,
          column: 43
        }
      },
      "73": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "74": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 89
        }
      },
      "75": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "76": {
        start: {
          line: 151,
          column: 18
        },
        end: {
          line: 151,
          column: 43
        }
      },
      "77": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "78": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 91
        }
      },
      "79": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "80": {
        start: {
          line: 157,
          column: 18
        },
        end: {
          line: 157,
          column: 45
        }
      },
      "81": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "82": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 79
        }
      },
      "83": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "84": {
        start: {
          line: 163,
          column: 18
        },
        end: {
          line: 163,
          column: 51
        }
      },
      "85": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "86": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 74
        }
      },
      "87": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "88": {
        start: {
          line: 169,
          column: 18
        },
        end: {
          line: 169,
          column: 45
        }
      },
      "89": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 173,
          column: 7
        }
      },
      "90": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 69
        }
      },
      "91": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "92": {
        start: {
          line: 175,
          column: 18
        },
        end: {
          line: 175,
          column: 43
        }
      },
      "93": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "94": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 67
        }
      },
      "95": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "96": {
        start: {
          line: 181,
          column: 18
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "97": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 185,
          column: 7
        }
      },
      "98": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 70
        }
      },
      "99": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "100": {
        start: {
          line: 187,
          column: 18
        },
        end: {
          line: 187,
          column: 40
        }
      },
      "101": {
        start: {
          line: 188,
          column: 6
        },
        end: {
          line: 191,
          column: 7
        }
      },
      "102": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 57
        }
      },
      "103": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "104": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 122
        }
      },
      "105": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 19
        }
      },
      "106": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "107": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 78
        }
      },
      "108": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 82
        }
      },
      "109": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 103
        }
      },
      "110": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 35
        }
      },
      "111": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 55
        }
      },
      "112": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 102
        }
      },
      "113": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "114": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 217,
          column: 80
        }
      },
      "115": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 84
        }
      },
      "116": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 76
        }
      },
      "117": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 45
        }
      },
      "118": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "119": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 226,
          column: 38
        }
      },
      "120": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 229,
          column: 33
        }
      },
      "121": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 80
        }
      },
      "122": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 19
        }
      },
      "123": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "124": {
        start: {
          line: 237,
          column: 6
        },
        end: {
          line: 237,
          column: 76
        }
      },
      "125": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 240,
          column: 80
        }
      },
      "126": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "127": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 32
        }
      },
      "128": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 100
        }
      },
      "129": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 249,
          column: 68
        }
      },
      "130": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 23
        }
      },
      "131": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 19
        }
      },
      "132": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 25
        }
      },
      "133": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 27
        }
      },
      "134": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 258,
          column: 19
        }
      },
      "135": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 87
        }
      },
      "136": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 100
        }
      },
      "137": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 31
        }
      },
      "138": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 16
        }
      },
      "139": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 267,
          column: 23
        }
      },
      "140": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 268,
          column: 19
        }
      },
      "141": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 25
        }
      },
      "142": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 27
        }
      },
      "143": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 87
        }
      },
      "144": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 28
        }
      },
      "145": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 274,
          column: 16
        }
      },
      "146": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 23
        }
      },
      "147": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 19
        }
      },
      "148": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 37
        }
      },
      "149": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 19
        }
      },
      "150": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 89
        }
      },
      "151": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 103
        }
      },
      "152": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 285,
          column: 31
        }
      },
      "153": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 286,
          column: 16
        }
      },
      "154": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 290,
          column: 23
        }
      },
      "155": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 291,
          column: 19
        }
      },
      "156": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 292,
          column: 37
        }
      },
      "157": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 89
        }
      },
      "158": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 28
        }
      },
      "159": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 16
        }
      },
      "160": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 23
        }
      },
      "161": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "162": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 302,
          column: 19
        }
      },
      "163": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 64
        }
      },
      "164": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 305,
          column: 108
        }
      },
      "165": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 31
        }
      },
      "166": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 307,
          column: 16
        }
      },
      "167": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 23
        }
      },
      "168": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 19
        }
      },
      "169": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 64
        }
      },
      "170": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 28
        }
      },
      "171": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 16
        }
      },
      "172": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 37
        }
      },
      "173": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 27
        }
      },
      "174": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 322,
          column: 19
        }
      },
      "175": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 80
        }
      },
      "176": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 103
        }
      },
      "177": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 326,
          column: 31
        }
      },
      "178": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 327,
          column: 16
        }
      },
      "179": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 331,
          column: 37
        }
      },
      "180": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 332,
          column: 27
        }
      },
      "181": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 80
        }
      },
      "182": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 28
        }
      },
      "183": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 16
        }
      },
      "184": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 340,
          column: 37
        }
      },
      "185": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 341,
          column: 27
        }
      },
      "186": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 342,
          column: 19
        }
      },
      "187": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 77
        }
      },
      "188": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 101
        }
      },
      "189": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 31
        }
      },
      "190": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 347,
          column: 16
        }
      },
      "191": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 37
        }
      },
      "192": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 352,
          column: 27
        }
      },
      "193": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 77
        }
      },
      "194": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 355,
          column: 28
        }
      },
      "195": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 16
        }
      },
      "196": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 360,
          column: 23
        }
      },
      "197": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "198": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 362,
          column: 29
        }
      },
      "199": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 363,
          column: 27
        }
      },
      "200": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 19
        }
      },
      "201": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 89
        }
      },
      "202": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 367,
          column: 102
        }
      },
      "203": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 368,
          column: 31
        }
      },
      "204": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 369,
          column: 16
        }
      },
      "205": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 373,
          column: 23
        }
      },
      "206": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 19
        }
      },
      "207": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 375,
          column: 29
        }
      },
      "208": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 27
        }
      },
      "209": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 89
        }
      },
      "210": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 379,
          column: 28
        }
      },
      "211": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 380,
          column: 16
        }
      },
      "212": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 384,
          column: 23
        }
      },
      "213": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 385,
          column: 19
        }
      },
      "214": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 386,
          column: 19
        }
      },
      "215": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 59
        }
      },
      "216": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 389,
          column: 100
        }
      },
      "217": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 31
        }
      },
      "218": {
        start: {
          line: 391,
          column: 4
        },
        end: {
          line: 391,
          column: 16
        }
      },
      "219": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 395,
          column: 19
        }
      },
      "220": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 396,
          column: 19
        }
      },
      "221": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 42
        }
      },
      "222": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 399,
          column: 97
        }
      },
      "223": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 31
        }
      },
      "224": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 401,
          column: 16
        }
      },
      "225": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 23
        }
      },
      "226": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 406,
          column: 19
        }
      },
      "227": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 408,
          column: 59
        }
      },
      "228": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 409,
          column: 28
        }
      },
      "229": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 16
        }
      },
      "230": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 414,
          column: 19
        }
      },
      "231": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 416,
          column: 42
        }
      },
      "232": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 28
        }
      },
      "233": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 419,
          column: 16
        }
      },
      "234": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 19
        }
      },
      "235": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 429,
          column: 5
        }
      },
      "236": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 425,
          column: 114
        }
      },
      "237": {
        start: {
          line: 427,
          column: 6
        },
        end: {
          line: 427,
          column: 118
        }
      },
      "238": {
        start: {
          line: 428,
          column: 6
        },
        end: {
          line: 428,
          column: 13
        }
      },
      "239": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 430,
          column: 87
        }
      },
      "240": {
        start: {
          line: 431,
          column: 4
        },
        end: {
          line: 431,
          column: 45
        }
      },
      "241": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 432,
          column: 16
        }
      },
      "242": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 436,
          column: 19
        }
      },
      "243": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 442,
          column: 5
        }
      },
      "244": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 438,
          column: 120
        }
      },
      "245": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 440,
          column: 126
        }
      },
      "246": {
        start: {
          line: 441,
          column: 6
        },
        end: {
          line: 441,
          column: 13
        }
      },
      "247": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 443,
          column: 89
        }
      },
      "248": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 45
        }
      },
      "249": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 445,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        },
        loc: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 196,
            column: 3
          }
        },
        line: 110
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 29
          }
        },
        loc: {
          start: {
            line: 114,
            column: 34
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 114
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 138,
            column: 28
          },
          end: {
            line: 138,
            column: 29
          }
        },
        loc: {
          start: {
            line: 138,
            column: 48
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 138
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 198,
            column: 2
          },
          end: {
            line: 198,
            column: 3
          }
        },
        loc: {
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 213,
            column: 3
          }
        },
        line: 198
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 215,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        loc: {
          start: {
            line: 215,
            column: 21
          },
          end: {
            line: 232,
            column: 3
          }
        },
        line: 215
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 234,
            column: 2
          },
          end: {
            line: 234,
            column: 3
          }
        },
        loc: {
          start: {
            line: 234,
            column: 37
          },
          end: {
            line: 251,
            column: 3
          }
        },
        line: 234
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 253,
            column: 3
          }
        },
        loc: {
          start: {
            line: 253,
            column: 56
          },
          end: {
            line: 264,
            column: 3
          }
        },
        line: 253
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 266,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        },
        loc: {
          start: {
            line: 266,
            column: 53
          },
          end: {
            line: 275,
            column: 3
          }
        },
        line: 266
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 277,
            column: 2
          },
          end: {
            line: 277,
            column: 3
          }
        },
        loc: {
          start: {
            line: 277,
            column: 58
          },
          end: {
            line: 287,
            column: 3
          }
        },
        line: 277
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        },
        loc: {
          start: {
            line: 289,
            column: 55
          },
          end: {
            line: 297,
            column: 3
          }
        },
        line: 289
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 299,
            column: 2
          },
          end: {
            line: 299,
            column: 3
          }
        },
        loc: {
          start: {
            line: 299,
            column: 50
          },
          end: {
            line: 308,
            column: 3
          }
        },
        line: 299
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 310,
            column: 2
          },
          end: {
            line: 310,
            column: 3
          }
        },
        loc: {
          start: {
            line: 310,
            column: 47
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 310
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 319,
            column: 2
          },
          end: {
            line: 319,
            column: 3
          }
        },
        loc: {
          start: {
            line: 319,
            column: 56
          },
          end: {
            line: 328,
            column: 3
          }
        },
        line: 319
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 330,
            column: 2
          },
          end: {
            line: 330,
            column: 3
          }
        },
        loc: {
          start: {
            line: 330,
            column: 53
          },
          end: {
            line: 337,
            column: 3
          }
        },
        line: 330
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 339,
            column: 2
          },
          end: {
            line: 339,
            column: 3
          }
        },
        loc: {
          start: {
            line: 339,
            column: 54
          },
          end: {
            line: 348,
            column: 3
          }
        },
        line: 339
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 350,
            column: 2
          },
          end: {
            line: 350,
            column: 3
          }
        },
        loc: {
          start: {
            line: 350,
            column: 51
          },
          end: {
            line: 357,
            column: 3
          }
        },
        line: 350
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 359,
            column: 2
          },
          end: {
            line: 359,
            column: 3
          }
        },
        loc: {
          start: {
            line: 359,
            column: 59
          },
          end: {
            line: 370,
            column: 3
          }
        },
        line: 359
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 372,
            column: 2
          },
          end: {
            line: 372,
            column: 3
          }
        },
        loc: {
          start: {
            line: 372,
            column: 57
          },
          end: {
            line: 381,
            column: 3
          }
        },
        line: 372
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 383,
            column: 2
          },
          end: {
            line: 383,
            column: 3
          }
        },
        loc: {
          start: {
            line: 383,
            column: 41
          },
          end: {
            line: 392,
            column: 3
          }
        },
        line: 383
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 394,
            column: 2
          },
          end: {
            line: 394,
            column: 3
          }
        },
        loc: {
          start: {
            line: 394,
            column: 32
          },
          end: {
            line: 402,
            column: 3
          }
        },
        line: 394
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 404,
            column: 2
          },
          end: {
            line: 404,
            column: 3
          }
        },
        loc: {
          start: {
            line: 404,
            column: 38
          },
          end: {
            line: 411,
            column: 3
          }
        },
        line: 404
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 413,
            column: 2
          },
          end: {
            line: 413,
            column: 3
          }
        },
        loc: {
          start: {
            line: 413,
            column: 29
          },
          end: {
            line: 420,
            column: 3
          }
        },
        line: 413
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 422,
            column: 2
          },
          end: {
            line: 422,
            column: 3
          }
        },
        loc: {
          start: {
            line: 422,
            column: 67
          },
          end: {
            line: 433,
            column: 3
          }
        },
        line: 422
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 435,
            column: 2
          },
          end: {
            line: 435,
            column: 3
          }
        },
        loc: {
          start: {
            line: 435,
            column: 71
          },
          end: {
            line: 446,
            column: 3
          }
        },
        line: 435
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 17
          }
        }, {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 29
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        }, {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 18
          },
          end: {
            line: 52,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 65
          }
        }, {
          start: {
            line: 52,
            column: 70
          },
          end: {
            line: 52,
            column: 75
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }, {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }],
        line: 62
      },
      "9": {
        loc: {
          start: {
            line: 62,
            column: 7
          },
          end: {
            line: 62,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 7
          },
          end: {
            line: 62,
            column: 18
          }
        }, {
          start: {
            line: 62,
            column: 22
          },
          end: {
            line: 62,
            column: 37
          }
        }],
        line: 62
      },
      "10": {
        loc: {
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 68,
            column: 5
          }
        }],
        line: 64
      },
      "11": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }],
        line: 73
      },
      "12": {
        loc: {
          start: {
            line: 74,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }, {
          start: {
            line: 74,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }],
        line: 74
      },
      "13": {
        loc: {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 87,
            column: 5
          }
        }],
        line: 79
      },
      "14": {
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 7
          }
        }, {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 7
          }
        }],
        line: 80
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }],
        line: 94
      },
      "17": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }],
        line: 99
      },
      "18": {
        loc: {
          start: {
            line: 111,
            column: 10
          },
          end: {
            line: 111,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 10
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 111,
            column: 17
          },
          end: {
            line: 111,
            column: 18
          }
        }],
        line: 111
      },
      "19": {
        loc: {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        }, {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        }],
        line: 118
      },
      "20": {
        loc: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 148,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 148,
            column: 7
          }
        }, {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 148,
            column: 7
          }
        }],
        line: 145
      },
      "21": {
        loc: {
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        }, {
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        }],
        line: 152
      },
      "22": {
        loc: {
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        }, {
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        }],
        line: 158
      },
      "23": {
        loc: {
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        }, {
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        }],
        line: 164
      },
      "24": {
        loc: {
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 173,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 173,
            column: 7
          }
        }, {
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 173,
            column: 7
          }
        }],
        line: 170
      },
      "25": {
        loc: {
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        }, {
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        }],
        line: 176
      },
      "26": {
        loc: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 185,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 185,
            column: 7
          }
        }, {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 185,
            column: 7
          }
        }],
        line: 182
      },
      "27": {
        loc: {
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        }, {
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        }],
        line: 188
      },
      "28": {
        loc: {
          start: {
            line: 199,
            column: 10
          },
          end: {
            line: 199,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 10
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: 199,
            column: 17
          },
          end: {
            line: 199,
            column: 18
          }
        }],
        line: 199
      },
      "29": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }],
        line: 200
      },
      "30": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }, {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }],
        line: 216
      },
      "31": {
        loc: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        }, {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        }],
        line: 225
      },
      "32": {
        loc: {
          start: {
            line: 235,
            column: 10
          },
          end: {
            line: 235,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 10
          },
          end: {
            line: 235,
            column: 13
          }
        }, {
          start: {
            line: 235,
            column: 17
          },
          end: {
            line: 235,
            column: 18
          }
        }],
        line: 235
      },
      "33": {
        loc: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }, {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }],
        line: 236
      },
      "34": {
        loc: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }],
        line: 243
      },
      "35": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 243,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 9
          },
          end: {
            line: 243,
            column: 32
          }
        }, {
          start: {
            line: 243,
            column: 36
          },
          end: {
            line: 243,
            column: 60
          }
        }, {
          start: {
            line: 243,
            column: 64
          },
          end: {
            line: 243,
            column: 87
          }
        }, {
          start: {
            line: 243,
            column: 92
          },
          end: {
            line: 243,
            column: 113
          }
        }],
        line: 243
      },
      "36": {
        loc: {
          start: {
            line: 254,
            column: 11
          },
          end: {
            line: 254,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 11
          },
          end: {
            line: 254,
            column: 15
          }
        }, {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 22
          }
        }],
        line: 254
      },
      "37": {
        loc: {
          start: {
            line: 255,
            column: 9
          },
          end: {
            line: 255,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 9
          },
          end: {
            line: 255,
            column: 11
          }
        }, {
          start: {
            line: 255,
            column: 15
          },
          end: {
            line: 255,
            column: 18
          }
        }],
        line: 255
      },
      "38": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 256,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 256,
            column: 17
          }
        }, {
          start: {
            line: 256,
            column: 21
          },
          end: {
            line: 256,
            column: 24
          }
        }],
        line: 256
      },
      "39": {
        loc: {
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 257,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 257,
            column: 19
          }
        }, {
          start: {
            line: 257,
            column: 23
          },
          end: {
            line: 257,
            column: 26
          }
        }],
        line: 257
      },
      "40": {
        loc: {
          start: {
            line: 258,
            column: 10
          },
          end: {
            line: 258,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 10
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: 258,
            column: 17
          },
          end: {
            line: 258,
            column: 18
          }
        }],
        line: 258
      },
      "41": {
        loc: {
          start: {
            line: 267,
            column: 11
          },
          end: {
            line: 267,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 11
          },
          end: {
            line: 267,
            column: 15
          }
        }, {
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 22
          }
        }],
        line: 267
      },
      "42": {
        loc: {
          start: {
            line: 268,
            column: 9
          },
          end: {
            line: 268,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 9
          },
          end: {
            line: 268,
            column: 11
          }
        }, {
          start: {
            line: 268,
            column: 15
          },
          end: {
            line: 268,
            column: 18
          }
        }],
        line: 268
      },
      "43": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 269,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 269,
            column: 17
          }
        }, {
          start: {
            line: 269,
            column: 21
          },
          end: {
            line: 269,
            column: 24
          }
        }],
        line: 269
      },
      "44": {
        loc: {
          start: {
            line: 270,
            column: 13
          },
          end: {
            line: 270,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 13
          },
          end: {
            line: 270,
            column: 19
          }
        }, {
          start: {
            line: 270,
            column: 23
          },
          end: {
            line: 270,
            column: 26
          }
        }],
        line: 270
      },
      "45": {
        loc: {
          start: {
            line: 278,
            column: 11
          },
          end: {
            line: 278,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 11
          },
          end: {
            line: 278,
            column: 15
          }
        }, {
          start: {
            line: 278,
            column: 19
          },
          end: {
            line: 278,
            column: 22
          }
        }],
        line: 278
      },
      "46": {
        loc: {
          start: {
            line: 279,
            column: 9
          },
          end: {
            line: 279,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 9
          },
          end: {
            line: 279,
            column: 11
          }
        }, {
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 18
          }
        }],
        line: 279
      },
      "47": {
        loc: {
          start: {
            line: 280,
            column: 18
          },
          end: {
            line: 280,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 18
          },
          end: {
            line: 280,
            column: 29
          }
        }, {
          start: {
            line: 280,
            column: 33
          },
          end: {
            line: 280,
            column: 36
          }
        }],
        line: 280
      },
      "48": {
        loc: {
          start: {
            line: 281,
            column: 10
          },
          end: {
            line: 281,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 10
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: 281,
            column: 17
          },
          end: {
            line: 281,
            column: 18
          }
        }],
        line: 281
      },
      "49": {
        loc: {
          start: {
            line: 290,
            column: 11
          },
          end: {
            line: 290,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 11
          },
          end: {
            line: 290,
            column: 15
          }
        }, {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 22
          }
        }],
        line: 290
      },
      "50": {
        loc: {
          start: {
            line: 291,
            column: 9
          },
          end: {
            line: 291,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 9
          },
          end: {
            line: 291,
            column: 11
          }
        }, {
          start: {
            line: 291,
            column: 15
          },
          end: {
            line: 291,
            column: 18
          }
        }],
        line: 291
      },
      "51": {
        loc: {
          start: {
            line: 292,
            column: 18
          },
          end: {
            line: 292,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 18
          },
          end: {
            line: 292,
            column: 29
          }
        }, {
          start: {
            line: 292,
            column: 33
          },
          end: {
            line: 292,
            column: 36
          }
        }],
        line: 292
      },
      "52": {
        loc: {
          start: {
            line: 300,
            column: 11
          },
          end: {
            line: 300,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 11
          },
          end: {
            line: 300,
            column: 15
          }
        }, {
          start: {
            line: 300,
            column: 19
          },
          end: {
            line: 300,
            column: 22
          }
        }],
        line: 300
      },
      "53": {
        loc: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 11
          }
        }, {
          start: {
            line: 301,
            column: 15
          },
          end: {
            line: 301,
            column: 18
          }
        }],
        line: 301
      },
      "54": {
        loc: {
          start: {
            line: 302,
            column: 10
          },
          end: {
            line: 302,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 10
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: 302,
            column: 17
          },
          end: {
            line: 302,
            column: 18
          }
        }],
        line: 302
      },
      "55": {
        loc: {
          start: {
            line: 311,
            column: 11
          },
          end: {
            line: 311,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 11
          },
          end: {
            line: 311,
            column: 15
          }
        }, {
          start: {
            line: 311,
            column: 19
          },
          end: {
            line: 311,
            column: 22
          }
        }],
        line: 311
      },
      "56": {
        loc: {
          start: {
            line: 312,
            column: 9
          },
          end: {
            line: 312,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 9
          },
          end: {
            line: 312,
            column: 11
          }
        }, {
          start: {
            line: 312,
            column: 15
          },
          end: {
            line: 312,
            column: 18
          }
        }],
        line: 312
      },
      "57": {
        loc: {
          start: {
            line: 320,
            column: 18
          },
          end: {
            line: 320,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 18
          },
          end: {
            line: 320,
            column: 29
          }
        }, {
          start: {
            line: 320,
            column: 33
          },
          end: {
            line: 320,
            column: 36
          }
        }],
        line: 320
      },
      "58": {
        loc: {
          start: {
            line: 321,
            column: 13
          },
          end: {
            line: 321,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 13
          },
          end: {
            line: 321,
            column: 19
          }
        }, {
          start: {
            line: 321,
            column: 23
          },
          end: {
            line: 321,
            column: 26
          }
        }],
        line: 321
      },
      "59": {
        loc: {
          start: {
            line: 322,
            column: 10
          },
          end: {
            line: 322,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 10
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: 322,
            column: 17
          },
          end: {
            line: 322,
            column: 18
          }
        }],
        line: 322
      },
      "60": {
        loc: {
          start: {
            line: 331,
            column: 18
          },
          end: {
            line: 331,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 18
          },
          end: {
            line: 331,
            column: 29
          }
        }, {
          start: {
            line: 331,
            column: 33
          },
          end: {
            line: 331,
            column: 36
          }
        }],
        line: 331
      },
      "61": {
        loc: {
          start: {
            line: 332,
            column: 13
          },
          end: {
            line: 332,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 13
          },
          end: {
            line: 332,
            column: 19
          }
        }, {
          start: {
            line: 332,
            column: 23
          },
          end: {
            line: 332,
            column: 26
          }
        }],
        line: 332
      },
      "62": {
        loc: {
          start: {
            line: 340,
            column: 18
          },
          end: {
            line: 340,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 18
          },
          end: {
            line: 340,
            column: 29
          }
        }, {
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 36
          }
        }],
        line: 340
      },
      "63": {
        loc: {
          start: {
            line: 341,
            column: 13
          },
          end: {
            line: 341,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 13
          },
          end: {
            line: 341,
            column: 19
          }
        }, {
          start: {
            line: 341,
            column: 23
          },
          end: {
            line: 341,
            column: 26
          }
        }],
        line: 341
      },
      "64": {
        loc: {
          start: {
            line: 342,
            column: 10
          },
          end: {
            line: 342,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 10
          },
          end: {
            line: 342,
            column: 13
          }
        }, {
          start: {
            line: 342,
            column: 17
          },
          end: {
            line: 342,
            column: 18
          }
        }],
        line: 342
      },
      "65": {
        loc: {
          start: {
            line: 351,
            column: 18
          },
          end: {
            line: 351,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 18
          },
          end: {
            line: 351,
            column: 29
          }
        }, {
          start: {
            line: 351,
            column: 33
          },
          end: {
            line: 351,
            column: 36
          }
        }],
        line: 351
      },
      "66": {
        loc: {
          start: {
            line: 352,
            column: 13
          },
          end: {
            line: 352,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 13
          },
          end: {
            line: 352,
            column: 19
          }
        }, {
          start: {
            line: 352,
            column: 23
          },
          end: {
            line: 352,
            column: 26
          }
        }],
        line: 352
      },
      "67": {
        loc: {
          start: {
            line: 360,
            column: 11
          },
          end: {
            line: 360,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 11
          },
          end: {
            line: 360,
            column: 15
          }
        }, {
          start: {
            line: 360,
            column: 19
          },
          end: {
            line: 360,
            column: 22
          }
        }],
        line: 360
      },
      "68": {
        loc: {
          start: {
            line: 361,
            column: 9
          },
          end: {
            line: 361,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 9
          },
          end: {
            line: 361,
            column: 11
          }
        }, {
          start: {
            line: 361,
            column: 15
          },
          end: {
            line: 361,
            column: 18
          }
        }],
        line: 361
      },
      "69": {
        loc: {
          start: {
            line: 362,
            column: 14
          },
          end: {
            line: 362,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 14
          },
          end: {
            line: 362,
            column: 21
          }
        }, {
          start: {
            line: 362,
            column: 25
          },
          end: {
            line: 362,
            column: 28
          }
        }],
        line: 362
      },
      "70": {
        loc: {
          start: {
            line: 363,
            column: 13
          },
          end: {
            line: 363,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 13
          },
          end: {
            line: 363,
            column: 19
          }
        }, {
          start: {
            line: 363,
            column: 23
          },
          end: {
            line: 363,
            column: 26
          }
        }],
        line: 363
      },
      "71": {
        loc: {
          start: {
            line: 364,
            column: 10
          },
          end: {
            line: 364,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 10
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: 364,
            column: 17
          },
          end: {
            line: 364,
            column: 18
          }
        }],
        line: 364
      },
      "72": {
        loc: {
          start: {
            line: 373,
            column: 11
          },
          end: {
            line: 373,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 11
          },
          end: {
            line: 373,
            column: 15
          }
        }, {
          start: {
            line: 373,
            column: 19
          },
          end: {
            line: 373,
            column: 22
          }
        }],
        line: 373
      },
      "73": {
        loc: {
          start: {
            line: 374,
            column: 9
          },
          end: {
            line: 374,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 9
          },
          end: {
            line: 374,
            column: 11
          }
        }, {
          start: {
            line: 374,
            column: 15
          },
          end: {
            line: 374,
            column: 18
          }
        }],
        line: 374
      },
      "74": {
        loc: {
          start: {
            line: 375,
            column: 14
          },
          end: {
            line: 375,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 14
          },
          end: {
            line: 375,
            column: 21
          }
        }, {
          start: {
            line: 375,
            column: 25
          },
          end: {
            line: 375,
            column: 28
          }
        }],
        line: 375
      },
      "75": {
        loc: {
          start: {
            line: 376,
            column: 13
          },
          end: {
            line: 376,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 13
          },
          end: {
            line: 376,
            column: 19
          }
        }, {
          start: {
            line: 376,
            column: 23
          },
          end: {
            line: 376,
            column: 26
          }
        }],
        line: 376
      },
      "76": {
        loc: {
          start: {
            line: 384,
            column: 11
          },
          end: {
            line: 384,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 11
          },
          end: {
            line: 384,
            column: 15
          }
        }, {
          start: {
            line: 384,
            column: 19
          },
          end: {
            line: 384,
            column: 22
          }
        }],
        line: 384
      },
      "77": {
        loc: {
          start: {
            line: 385,
            column: 9
          },
          end: {
            line: 385,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 9
          },
          end: {
            line: 385,
            column: 11
          }
        }, {
          start: {
            line: 385,
            column: 15
          },
          end: {
            line: 385,
            column: 18
          }
        }],
        line: 385
      },
      "78": {
        loc: {
          start: {
            line: 386,
            column: 10
          },
          end: {
            line: 386,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 10
          },
          end: {
            line: 386,
            column: 13
          }
        }, {
          start: {
            line: 386,
            column: 17
          },
          end: {
            line: 386,
            column: 18
          }
        }],
        line: 386
      },
      "79": {
        loc: {
          start: {
            line: 395,
            column: 9
          },
          end: {
            line: 395,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 9
          },
          end: {
            line: 395,
            column: 11
          }
        }, {
          start: {
            line: 395,
            column: 15
          },
          end: {
            line: 395,
            column: 18
          }
        }],
        line: 395
      },
      "80": {
        loc: {
          start: {
            line: 396,
            column: 10
          },
          end: {
            line: 396,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 10
          },
          end: {
            line: 396,
            column: 13
          }
        }, {
          start: {
            line: 396,
            column: 17
          },
          end: {
            line: 396,
            column: 18
          }
        }],
        line: 396
      },
      "81": {
        loc: {
          start: {
            line: 405,
            column: 11
          },
          end: {
            line: 405,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 11
          },
          end: {
            line: 405,
            column: 15
          }
        }, {
          start: {
            line: 405,
            column: 19
          },
          end: {
            line: 405,
            column: 22
          }
        }],
        line: 405
      },
      "82": {
        loc: {
          start: {
            line: 406,
            column: 9
          },
          end: {
            line: 406,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 9
          },
          end: {
            line: 406,
            column: 11
          }
        }, {
          start: {
            line: 406,
            column: 15
          },
          end: {
            line: 406,
            column: 18
          }
        }],
        line: 406
      },
      "83": {
        loc: {
          start: {
            line: 414,
            column: 9
          },
          end: {
            line: 414,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 9
          },
          end: {
            line: 414,
            column: 11
          }
        }, {
          start: {
            line: 414,
            column: 15
          },
          end: {
            line: 414,
            column: 18
          }
        }],
        line: 414
      },
      "84": {
        loc: {
          start: {
            line: 423,
            column: 10
          },
          end: {
            line: 423,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 10
          },
          end: {
            line: 423,
            column: 13
          }
        }, {
          start: {
            line: 423,
            column: 17
          },
          end: {
            line: 423,
            column: 18
          }
        }],
        line: 423
      },
      "85": {
        loc: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        }, {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        }],
        line: 424
      },
      "86": {
        loc: {
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 424,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 424,
            column: 24
          }
        }, {
          start: {
            line: 424,
            column: 28
          },
          end: {
            line: 424,
            column: 42
          }
        }, {
          start: {
            line: 424,
            column: 46
          },
          end: {
            line: 424,
            column: 63
          }
        }, {
          start: {
            line: 424,
            column: 67
          },
          end: {
            line: 424,
            column: 85
          }
        }],
        line: 424
      },
      "87": {
        loc: {
          start: {
            line: 436,
            column: 10
          },
          end: {
            line: 436,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 436,
            column: 10
          },
          end: {
            line: 436,
            column: 13
          }
        }, {
          start: {
            line: 436,
            column: 17
          },
          end: {
            line: 436,
            column: 18
          }
        }],
        line: 436
      },
      "88": {
        loc: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        }, {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        }],
        line: 437
      },
      "89": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 437,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 437,
            column: 24
          }
        }, {
          start: {
            line: 437,
            column: 28
          },
          end: {
            line: 437,
            column: 42
          }
        }, {
          start: {
            line: 437,
            column: 46
          },
          end: {
            line: 437,
            column: 65
          }
        }, {
          start: {
            line: 437,
            column: 69
          },
          end: {
            line: 437,
            column: 87
          }
        }],
        line: 437
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0, 0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "8a27bf67e1d1cb5bf54006bc2a60ecf0d8c4bc0b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _btoa = _interopRequireDefault(require("btoa"));

var _util = require("../util");

var _BaseClient2 = _interopRequireDefault(require("../BaseClient"));

var _ApiClient = _interopRequireDefault(require("../api/ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var btoa = (cov_2jqxgkyb09.s[0]++, (cov_2jqxgkyb09.b[0][0]++, btoa) || (cov_2jqxgkyb09.b[0][1]++, _btoa["default"])); // if browser btoa is available use it otherwise use node module

var QUICKSTART_ORG_ID = (cov_2jqxgkyb09.s[1]++, "quickstart");
var DEVICE_EVT_RE = (cov_2jqxgkyb09.s[2]++, /^iot-2\/type\/(.+)\/id\/(.+)\/evt\/(.+)\/fmt\/(.+)$/);
var DEVICE_CMD_RE = (cov_2jqxgkyb09.s[3]++, /^iot-2\/type\/(.+)\/id\/(.+)\/cmd\/(.+)\/fmt\/(.+)$/);
var DEVICE_STATE_RE = (cov_2jqxgkyb09.s[4]++, /^iot-2\/type\/(.+)\/id\/(.+)\/intf\/(.+)\/evt\/state$/);
var DEVICE_STATE_ERROR_RE = (cov_2jqxgkyb09.s[5]++, /^iot-2\/type\/(.+)\/id\/(.+)\/err\/data$/);
var RULE_TRIGGER_RE = (cov_2jqxgkyb09.s[6]++, /^iot-2\/intf\/(.+)\/rule\/(.+)\/evt\/trigger$/);
var RULE_ERROR_RE = (cov_2jqxgkyb09.s[7]++, /^iot-2\/intf\/(.+)\/rule\/(.+)\/err\/data$/);
var DEVICE_MON_RE = (cov_2jqxgkyb09.s[8]++, /^iot-2\/type\/(.+)\/id\/(.+)\/mon$/);
var APP_MON_RE = (cov_2jqxgkyb09.s[9]++, /^iot-2\/app\/(.+)\/mon$/);

var ApplicationClient =
/*#__PURE__*/
function (_BaseClient) {
  _inherits(ApplicationClient, _BaseClient);

  function ApplicationClient(config) {
    var _this;

    _classCallCheck(this, ApplicationClient);

    cov_2jqxgkyb09.f[0]++;
    cov_2jqxgkyb09.s[10]++;
    _this = _possibleConstructorReturn(this, _getPrototypeOf(ApplicationClient).call(this, config));
    cov_2jqxgkyb09.s[11]++;

    if (config.org !== QUICKSTART_ORG_ID) {
      cov_2jqxgkyb09.b[1][0]++;
      cov_2jqxgkyb09.s[12]++;

      if (config.useLtpa) {
        cov_2jqxgkyb09.b[2][0]++;
        cov_2jqxgkyb09.s[13]++;
        _this.useLtpa = true;
      } else {
        cov_2jqxgkyb09.b[2][1]++;
        cov_2jqxgkyb09.s[14]++;

        if (!(0, _util.isDefined)(config['auth-key'])) {
          cov_2jqxgkyb09.b[3][0]++;
          cov_2jqxgkyb09.s[15]++;
          throw new Error('[ApplicationClient:constructor] config must contain auth-key');
        } else {
          cov_2jqxgkyb09.b[3][1]++;
          cov_2jqxgkyb09.s[16]++;

          if (!(0, _util.isString)(config['auth-key'])) {
            cov_2jqxgkyb09.b[4][0]++;
            cov_2jqxgkyb09.s[17]++;
            throw new Error('[ApplicationClient:constructor] auth-key must be a string');
          } else {
            cov_2jqxgkyb09.b[4][1]++;
          }
        }

        cov_2jqxgkyb09.s[18]++;
        _this.mqttConfig.username = config['auth-key'];
      }
    } else {
      cov_2jqxgkyb09.b[1][1]++;
    }

    cov_2jqxgkyb09.s[19]++;
    _this.org = config.org;
    cov_2jqxgkyb09.s[20]++;
    _this.apiKey = config['auth-key'];
    cov_2jqxgkyb09.s[21]++;
    _this.apiToken = config['auth-token']; //support for shared subscription

    cov_2jqxgkyb09.s[22]++;
    _this.shared = (cov_2jqxgkyb09.b[5][0]++, (config['type'] + '').toLowerCase() === "shared") || (cov_2jqxgkyb09.b[5][1]++, false); //Support for mixed durable subscription

    cov_2jqxgkyb09.s[23]++;

    if ((0, _util.isDefined)(config['instance-id'])) {
      cov_2jqxgkyb09.b[6][0]++;
      cov_2jqxgkyb09.s[24]++;

      if (!(0, _util.isString)(config['instance-id'])) {
        cov_2jqxgkyb09.b[7][0]++;
        cov_2jqxgkyb09.s[25]++;
        throw new Error('[ApplicationClient:constructor] instance-id must be a string');
      } else {
        cov_2jqxgkyb09.b[7][1]++;
      }

      cov_2jqxgkyb09.s[26]++;
      _this.instanceId = config['instance-id'];
    } else {
      cov_2jqxgkyb09.b[6][1]++;
    }

    cov_2jqxgkyb09.s[27]++;

    if ((cov_2jqxgkyb09.b[9][0]++, _this.shared) && (cov_2jqxgkyb09.b[9][1]++, _this.instanceId)) {
      cov_2jqxgkyb09.b[8][0]++;
      cov_2jqxgkyb09.s[28]++;
      _this.mqttConfig.clientId = "A:" + config.org + ":" + config.id + ":" + _this.instanceId;
    } else {
      cov_2jqxgkyb09.b[8][1]++;
      cov_2jqxgkyb09.s[29]++;

      if (_this.shared) {
        cov_2jqxgkyb09.b[10][0]++;
        cov_2jqxgkyb09.s[30]++;
        _this.mqttConfig.clientId = "A:" + config.org + ":" + config.id;
      } else {
        cov_2jqxgkyb09.b[10][1]++;
        cov_2jqxgkyb09.s[31]++;
        _this.mqttConfig.clientId = "a:" + config.org + ":" + config.id;
      }
    }

    cov_2jqxgkyb09.s[32]++;
    _this.subscriptions = [];
    cov_2jqxgkyb09.s[33]++;
    _this.httpServer = ""; // Parse http-server & domain property. http-server takes precedence over domain

    cov_2jqxgkyb09.s[34]++;

    if ((0, _util.isDefined)(config['http-server'])) {
      cov_2jqxgkyb09.b[11][0]++;
      cov_2jqxgkyb09.s[35]++;

      if (!(0, _util.isString)(config['http-server'])) {
        cov_2jqxgkyb09.b[12][0]++;
        cov_2jqxgkyb09.s[36]++;
        throw new Error('[BaseClient:constructor] http-server must be a string, ' + 'see Bluemix Watson IoT service credentials for more information');
      } else {
        cov_2jqxgkyb09.b[12][1]++;
      }

      cov_2jqxgkyb09.s[37]++;
      _this.httpServer = config['http-server'];
    } else {
      cov_2jqxgkyb09.b[11][1]++;
      cov_2jqxgkyb09.s[38]++;

      if ((0, _util.isDefined)(config.domain)) {
        cov_2jqxgkyb09.b[13][0]++;
        cov_2jqxgkyb09.s[39]++;

        if (!(0, _util.isString)(config.domain)) {
          cov_2jqxgkyb09.b[14][0]++;
          cov_2jqxgkyb09.s[40]++;
          throw new Error('[BaseClient:constructor] domain must be a string');
        } else {
          cov_2jqxgkyb09.b[14][1]++;
        }

        cov_2jqxgkyb09.s[41]++;
        _this.httpServer = config.org + "." + config.domain;
        cov_2jqxgkyb09.s[42]++;
        _this.domainName = config.domain;
      } else {
        cov_2jqxgkyb09.b[13][1]++;
        cov_2jqxgkyb09.s[43]++;
        _this.httpServer = config.org + ".internetofthings.ibmcloud.com";
      }
    }

    cov_2jqxgkyb09.s[44]++;
    _this.withProxy = false;
    cov_2jqxgkyb09.s[45]++;

    if ((0, _util.isDefined)(config['with-proxy'])) {
      cov_2jqxgkyb09.b[15][0]++;
      cov_2jqxgkyb09.s[46]++;
      _this.withProxy = config['with-proxy'];
    } else {
      cov_2jqxgkyb09.b[15][1]++;
    }

    cov_2jqxgkyb09.s[47]++;
    _this.withHttps = true;
    cov_2jqxgkyb09.s[48]++;

    if ((0, _util.isDefined)(config['with-https'])) {
      cov_2jqxgkyb09.b[16][0]++;
      cov_2jqxgkyb09.s[49]++;
      _this.withHttps = config['with-https'];
    } else {
      cov_2jqxgkyb09.b[16][1]++;
    } // draft setting for IM device state


    cov_2jqxgkyb09.s[50]++;

    if ((0, _util.isDefined)(config['draftMode'])) {
      cov_2jqxgkyb09.b[17][0]++;
      cov_2jqxgkyb09.s[51]++;
      _this.draftMode = config.draftMode;
    } else {
      cov_2jqxgkyb09.b[17][1]++;
      cov_2jqxgkyb09.s[52]++;
      _this.draftMode = false;
    }

    cov_2jqxgkyb09.s[53]++;
    _this.apiClient = new _ApiClient["default"](_this.org, _this.domain, _this.apiKey, _this.apiToken, _this.withProxy, _this.useLtpa, _this.draftMode);
    cov_2jqxgkyb09.s[54]++;

    _this.log.info("[ApplicationClient:constructor] ApplicationClient initialized for organization : " + config.org);

    return _this;
  }

  _createClass(ApplicationClient, [{
    key: "connect",
    value: function connect(QoS) {
      var _this2 = this;

      cov_2jqxgkyb09.f[1]++;
      cov_2jqxgkyb09.s[55]++;
      QoS = (cov_2jqxgkyb09.b[18][0]++, QoS) || (cov_2jqxgkyb09.b[18][1]++, 0);
      cov_2jqxgkyb09.s[56]++;

      _get(_getPrototypeOf(ApplicationClient.prototype), "connect", this).call(this);

      cov_2jqxgkyb09.s[57]++;
      this.mqtt.on('connect', function () {
        cov_2jqxgkyb09.f[2]++;
        cov_2jqxgkyb09.s[58]++;

        _this2.log.info("[ApplicationClient:connnect] ApplicationClient Connected");

        cov_2jqxgkyb09.s[59]++;
        _this2.isConnected = true;
        cov_2jqxgkyb09.s[60]++;

        if (_this2.retryCount === 0) {
          cov_2jqxgkyb09.b[19][0]++;
          cov_2jqxgkyb09.s[61]++;

          _this2.emit('connect');
        } else {
          cov_2jqxgkyb09.b[19][1]++;
          cov_2jqxgkyb09.s[62]++;

          _this2.emit('reconnect');
        } //reset the counter to 0 incase of reconnection


        cov_2jqxgkyb09.s[63]++;
        _this2.retryCount = 0;
        cov_2jqxgkyb09.s[64]++;

        try {
          cov_2jqxgkyb09.s[65]++;

          for (var i = (cov_2jqxgkyb09.s[66]++, 0), l = (cov_2jqxgkyb09.s[67]++, _this2.subscriptions.length); i < l; i++) {
            cov_2jqxgkyb09.s[68]++;

            _this2.mqtt.subscribe(_this2.subscriptions[i], {
              qos: parseInt(QoS)
            });
          }
        } catch (err) {
          cov_2jqxgkyb09.s[69]++;

          _this2.log.error("[ApplicationClient:connect] Error while trying to subscribe : " + err);
        }
      });
      cov_2jqxgkyb09.s[70]++;
      this.mqtt.on('message', function (topic, payload) {
        cov_2jqxgkyb09.f[3]++;
        cov_2jqxgkyb09.s[71]++;

        _this2.log.trace("[ApplicationClient:onMessage] mqtt: ", topic, payload.toString()); // For each type of registered callback, check the incoming topic against a Regexp.
        // If matches, forward the payload and various fields from the topic (extracted using groups in the regexp)


        var match = (cov_2jqxgkyb09.s[72]++, DEVICE_EVT_RE.exec(topic));
        cov_2jqxgkyb09.s[73]++;

        if (match) {
          cov_2jqxgkyb09.b[20][0]++;
          cov_2jqxgkyb09.s[74]++;

          _this2.emit('deviceEvent', match[1], match[2], match[3], match[4], payload, topic);

          cov_2jqxgkyb09.s[75]++;
          return;
        } else {
          cov_2jqxgkyb09.b[20][1]++;
        }

        var match = (cov_2jqxgkyb09.s[76]++, DEVICE_CMD_RE.exec(topic));
        cov_2jqxgkyb09.s[77]++;

        if (match) {
          cov_2jqxgkyb09.b[21][0]++;
          cov_2jqxgkyb09.s[78]++;

          _this2.emit('deviceCommand', match[1], match[2], match[3], match[4], payload, topic);

          cov_2jqxgkyb09.s[79]++;
          return;
        } else {
          cov_2jqxgkyb09.b[21][1]++;
        }

        var match = (cov_2jqxgkyb09.s[80]++, DEVICE_STATE_RE.exec(topic));
        cov_2jqxgkyb09.s[81]++;

        if (match) {
          cov_2jqxgkyb09.b[22][0]++;
          cov_2jqxgkyb09.s[82]++;

          _this2.emit('deviceState', match[1], match[2], match[3], payload, topic);

          cov_2jqxgkyb09.s[83]++;
          return;
        } else {
          cov_2jqxgkyb09.b[22][1]++;
        }

        var match = (cov_2jqxgkyb09.s[84]++, DEVICE_STATE_ERROR_RE.exec(topic));
        cov_2jqxgkyb09.s[85]++;

        if (match) {
          cov_2jqxgkyb09.b[23][0]++;
          cov_2jqxgkyb09.s[86]++;

          _this2.emit('deviceStateError', match[1], match[2], payload, topic);

          cov_2jqxgkyb09.s[87]++;
          return;
        } else {
          cov_2jqxgkyb09.b[23][1]++;
        }

        var match = (cov_2jqxgkyb09.s[88]++, RULE_TRIGGER_RE.exec(topic));
        cov_2jqxgkyb09.s[89]++;

        if (match) {
          cov_2jqxgkyb09.b[24][0]++;
          cov_2jqxgkyb09.s[90]++;

          _this2.emit('ruleTrigger', match[1], match[2], payload, topic);

          cov_2jqxgkyb09.s[91]++;
          return;
        } else {
          cov_2jqxgkyb09.b[24][1]++;
        }

        var match = (cov_2jqxgkyb09.s[92]++, RULE_ERROR_RE.exec(topic));
        cov_2jqxgkyb09.s[93]++;

        if (match) {
          cov_2jqxgkyb09.b[25][0]++;
          cov_2jqxgkyb09.s[94]++;

          _this2.emit('ruleError', match[1], match[2], payload, topic);

          cov_2jqxgkyb09.s[95]++;
          return;
        } else {
          cov_2jqxgkyb09.b[25][1]++;
        }

        var match = (cov_2jqxgkyb09.s[96]++, DEVICE_MON_RE.exec(topic));
        cov_2jqxgkyb09.s[97]++;

        if (match) {
          cov_2jqxgkyb09.b[26][0]++;
          cov_2jqxgkyb09.s[98]++;

          _this2.emit('deviceStatus', match[1], match[2], payload, topic);

          cov_2jqxgkyb09.s[99]++;
          return;
        } else {
          cov_2jqxgkyb09.b[26][1]++;
        }

        var match = (cov_2jqxgkyb09.s[100]++, APP_MON_RE.exec(topic));
        cov_2jqxgkyb09.s[101]++;

        if (match) {
          cov_2jqxgkyb09.b[27][0]++;
          cov_2jqxgkyb09.s[102]++;

          _this2.emit('appStatus', match[1], payload, topic);

          cov_2jqxgkyb09.s[103]++;
          return;
        } else {
          cov_2jqxgkyb09.b[27][1]++;
        } // catch all which logs the receipt of an unexpected message


        cov_2jqxgkyb09.s[104]++;

        _this2.log.warn("[ApplicationClient:onMessage] Message received on unexpected topic" + ", " + topic + ", " + payload);
      });
    }
  }, {
    key: "subscribe",
    value: function subscribe(topic, QoS) {
      cov_2jqxgkyb09.f[4]++;
      cov_2jqxgkyb09.s[105]++;
      QoS = (cov_2jqxgkyb09.b[28][0]++, QoS) || (cov_2jqxgkyb09.b[28][1]++, 0);
      cov_2jqxgkyb09.s[106]++;

      if (!this.isConnected) {
        cov_2jqxgkyb09.b[29][0]++;
        cov_2jqxgkyb09.s[107]++;
        this.log.error("[ApplicationClient:subscribe] Client is not connected"); //throw new Error("Client is not connected");
        //instead of throwing error, will emit 'error' event.

        cov_2jqxgkyb09.s[108]++;
        this.emit('error', "[ApplicationClient:subscribe] Client is not connected");
      } else {
        cov_2jqxgkyb09.b[29][1]++;
      }

      cov_2jqxgkyb09.s[109]++;
      this.log.debug("[ApplicationClient:subscribe] Subscribing to topic " + topic + " with QoS " + QoS);
      cov_2jqxgkyb09.s[110]++;
      this.subscriptions.push(topic);
      cov_2jqxgkyb09.s[111]++;
      this.mqtt.subscribe(topic, {
        qos: parseInt(QoS)
      });
      cov_2jqxgkyb09.s[112]++;
      this.log.debug("[ApplicationClient:subscribe] Subscribed to topic " + topic + " with QoS " + QoS);
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe(topic) {
      cov_2jqxgkyb09.f[5]++;
      cov_2jqxgkyb09.s[113]++;

      if (!this.isConnected) {
        cov_2jqxgkyb09.b[30][0]++;
        cov_2jqxgkyb09.s[114]++;
        this.log.error("[ApplicationClient:unsubscribe] Client is not connected"); // throw new Error("Client is not connected");
        //instead of throwing error, will emit 'error' event.

        cov_2jqxgkyb09.s[115]++;
        this.emit('error', "[ApplicationClient:unsubscribe] Client is not connected");
      } else {
        cov_2jqxgkyb09.b[30][1]++;
      }

      cov_2jqxgkyb09.s[116]++;
      this.log.debug("[ApplicationClient:unsubscribe] Unsubscribe: " + topic);
      var i = (cov_2jqxgkyb09.s[117]++, this.subscriptions.indexOf(topic));
      cov_2jqxgkyb09.s[118]++;

      if (i != -1) {
        cov_2jqxgkyb09.b[31][0]++;
        cov_2jqxgkyb09.s[119]++;
        this.subscriptions.splice(i, 1);
      } else {
        cov_2jqxgkyb09.b[31][1]++;
      }

      cov_2jqxgkyb09.s[120]++;
      this.mqtt.unsubscribe(topic);
      cov_2jqxgkyb09.s[121]++;
      this.log.debug("[ApplicationClient:unsubscribe] Unsubscribed to: " + topic);
    }
  }, {
    key: "publish",
    value: function publish(topic, msg, QoS, callback) {
      cov_2jqxgkyb09.f[6]++;
      cov_2jqxgkyb09.s[122]++;
      QoS = (cov_2jqxgkyb09.b[32][0]++, QoS) || (cov_2jqxgkyb09.b[32][1]++, 0);
      cov_2jqxgkyb09.s[123]++;

      if (!this.isConnected) {
        cov_2jqxgkyb09.b[33][0]++;
        cov_2jqxgkyb09.s[124]++;
        this.log.error("[ApplicationClient:publish] Client is not connected"); // throw new Error("Client is not connected");
        //instead of throwing error, will emit 'error' event.

        cov_2jqxgkyb09.s[125]++;
        this.emit('error', "[ApplicationClient:publish] Client is not connected");
      } else {
        cov_2jqxgkyb09.b[33][1]++;
      }

      cov_2jqxgkyb09.s[126]++;

      if (((cov_2jqxgkyb09.b[35][0]++, _typeof(msg) === 'object') || (cov_2jqxgkyb09.b[35][1]++, typeof msg === 'boolean') || (cov_2jqxgkyb09.b[35][2]++, typeof msg === 'number')) && (cov_2jqxgkyb09.b[35][3]++, !Buffer.isBuffer(msg))) {
        cov_2jqxgkyb09.b[34][0]++;
        cov_2jqxgkyb09.s[127]++;
        // mqtt library does not support sending JSON/Boolean/Number data. So stringifying it.
        // All JSON object, array will be encoded.
        msg = JSON.stringify(msg);
      } else {
        cov_2jqxgkyb09.b[34][1]++;
      }

      cov_2jqxgkyb09.s[128]++;
      this.log.debug("[ApplicationClient:publish] Publish: " + topic + ", " + msg + ", QoS : " + QoS);
      cov_2jqxgkyb09.s[129]++;
      this.mqtt.publish(topic, msg, {
        qos: parseInt(QoS)
      }, callback);
    }
  }, {
    key: "subscribeToDeviceEvents",
    value: function subscribeToDeviceEvents(type, id, event, format, qos) {
      cov_2jqxgkyb09.f[7]++;
      cov_2jqxgkyb09.s[130]++;
      type = (cov_2jqxgkyb09.b[36][0]++, type) || (cov_2jqxgkyb09.b[36][1]++, '+');
      cov_2jqxgkyb09.s[131]++;
      id = (cov_2jqxgkyb09.b[37][0]++, id) || (cov_2jqxgkyb09.b[37][1]++, '+');
      cov_2jqxgkyb09.s[132]++;
      event = (cov_2jqxgkyb09.b[38][0]++, event) || (cov_2jqxgkyb09.b[38][1]++, '+');
      cov_2jqxgkyb09.s[133]++;
      format = (cov_2jqxgkyb09.b[39][0]++, format) || (cov_2jqxgkyb09.b[39][1]++, '+');
      cov_2jqxgkyb09.s[134]++;
      qos = (cov_2jqxgkyb09.b[40][0]++, qos) || (cov_2jqxgkyb09.b[40][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[135]++, "iot-2/type/" + type + "/id/" + id + "/evt/" + event + "/fmt/" + format);
      cov_2jqxgkyb09.s[136]++;
      this.log.debug("[ApplicationClient:subscribeToDeviceEvents] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[137]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[138]++;
      return this;
    }
  }, {
    key: "unsubscribeToDeviceEvents",
    value: function unsubscribeToDeviceEvents(type, id, event, format) {
      cov_2jqxgkyb09.f[8]++;
      cov_2jqxgkyb09.s[139]++;
      type = (cov_2jqxgkyb09.b[41][0]++, type) || (cov_2jqxgkyb09.b[41][1]++, '+');
      cov_2jqxgkyb09.s[140]++;
      id = (cov_2jqxgkyb09.b[42][0]++, id) || (cov_2jqxgkyb09.b[42][1]++, '+');
      cov_2jqxgkyb09.s[141]++;
      event = (cov_2jqxgkyb09.b[43][0]++, event) || (cov_2jqxgkyb09.b[43][1]++, '+');
      cov_2jqxgkyb09.s[142]++;
      format = (cov_2jqxgkyb09.b[44][0]++, format) || (cov_2jqxgkyb09.b[44][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[143]++, "iot-2/type/" + type + "/id/" + id + "/evt/" + event + "/fmt/" + format);
      cov_2jqxgkyb09.s[144]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[145]++;
      return this;
    }
  }, {
    key: "subscribeToDeviceStateEvents",
    value: function subscribeToDeviceStateEvents(type, id, interfaceId, qos) {
      cov_2jqxgkyb09.f[9]++;
      cov_2jqxgkyb09.s[146]++;
      type = (cov_2jqxgkyb09.b[45][0]++, type) || (cov_2jqxgkyb09.b[45][1]++, '+');
      cov_2jqxgkyb09.s[147]++;
      id = (cov_2jqxgkyb09.b[46][0]++, id) || (cov_2jqxgkyb09.b[46][1]++, '+');
      cov_2jqxgkyb09.s[148]++;
      interfaceId = (cov_2jqxgkyb09.b[47][0]++, interfaceId) || (cov_2jqxgkyb09.b[47][1]++, '+');
      cov_2jqxgkyb09.s[149]++;
      qos = (cov_2jqxgkyb09.b[48][0]++, qos) || (cov_2jqxgkyb09.b[48][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[150]++, "iot-2/type/" + type + "/id/" + id + "/intf/" + interfaceId + "/evt/state");
      cov_2jqxgkyb09.s[151]++;
      this.log.debug("[ApplicationClient:subscribeToDeviceStateEvents] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[152]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[153]++;
      return this;
    }
  }, {
    key: "unsubscribeToDeviceStateEvents",
    value: function unsubscribeToDeviceStateEvents(type, id, interfaceId) {
      cov_2jqxgkyb09.f[10]++;
      cov_2jqxgkyb09.s[154]++;
      type = (cov_2jqxgkyb09.b[49][0]++, type) || (cov_2jqxgkyb09.b[49][1]++, '+');
      cov_2jqxgkyb09.s[155]++;
      id = (cov_2jqxgkyb09.b[50][0]++, id) || (cov_2jqxgkyb09.b[50][1]++, '+');
      cov_2jqxgkyb09.s[156]++;
      interfaceId = (cov_2jqxgkyb09.b[51][0]++, interfaceId) || (cov_2jqxgkyb09.b[51][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[157]++, "iot-2/type/" + type + "/id/" + id + "/intf/" + interfaceId + "/evt/state");
      cov_2jqxgkyb09.s[158]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[159]++;
      return this;
    }
  }, {
    key: "subscribeToDeviceStateErrorEvents",
    value: function subscribeToDeviceStateErrorEvents(type, id, qos) {
      cov_2jqxgkyb09.f[11]++;
      cov_2jqxgkyb09.s[160]++;
      type = (cov_2jqxgkyb09.b[52][0]++, type) || (cov_2jqxgkyb09.b[52][1]++, '+');
      cov_2jqxgkyb09.s[161]++;
      id = (cov_2jqxgkyb09.b[53][0]++, id) || (cov_2jqxgkyb09.b[53][1]++, '+');
      cov_2jqxgkyb09.s[162]++;
      qos = (cov_2jqxgkyb09.b[54][0]++, qos) || (cov_2jqxgkyb09.b[54][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[163]++, "iot-2/type/" + type + "/id/" + id + "/err/data");
      cov_2jqxgkyb09.s[164]++;
      this.log.debug("[ApplicationClient:subscribeToDeviceStateErrorEvents] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[165]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[166]++;
      return this;
    }
  }, {
    key: "unsubscribeToDeviceStateErrorEvents",
    value: function unsubscribeToDeviceStateErrorEvents(type, id) {
      cov_2jqxgkyb09.f[12]++;
      cov_2jqxgkyb09.s[167]++;
      type = (cov_2jqxgkyb09.b[55][0]++, type) || (cov_2jqxgkyb09.b[55][1]++, '+');
      cov_2jqxgkyb09.s[168]++;
      id = (cov_2jqxgkyb09.b[56][0]++, id) || (cov_2jqxgkyb09.b[56][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[169]++, "iot-2/type/" + type + "/id/" + id + "/err/data");
      cov_2jqxgkyb09.s[170]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[171]++;
      return this;
    }
  }, {
    key: "subscribeToRuleTriggerEvents",
    value: function subscribeToRuleTriggerEvents(interfaceId, ruleId, qos) {
      cov_2jqxgkyb09.f[13]++;
      cov_2jqxgkyb09.s[172]++;
      interfaceId = (cov_2jqxgkyb09.b[57][0]++, interfaceId) || (cov_2jqxgkyb09.b[57][1]++, '+');
      cov_2jqxgkyb09.s[173]++;
      ruleId = (cov_2jqxgkyb09.b[58][0]++, ruleId) || (cov_2jqxgkyb09.b[58][1]++, '+');
      cov_2jqxgkyb09.s[174]++;
      qos = (cov_2jqxgkyb09.b[59][0]++, qos) || (cov_2jqxgkyb09.b[59][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[175]++, "iot-2/intf/" + interfaceId + "/rule/" + ruleId + "/evt/trigger");
      cov_2jqxgkyb09.s[176]++;
      this.log.debug("[ApplicationClient:subscribeToRuleTriggerEvents] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[177]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[178]++;
      return this;
    }
  }, {
    key: "unsubscribeToRuleTriggerEvents",
    value: function unsubscribeToRuleTriggerEvents(interfaceId, ruleId) {
      cov_2jqxgkyb09.f[14]++;
      cov_2jqxgkyb09.s[179]++;
      interfaceId = (cov_2jqxgkyb09.b[60][0]++, interfaceId) || (cov_2jqxgkyb09.b[60][1]++, '+');
      cov_2jqxgkyb09.s[180]++;
      ruleId = (cov_2jqxgkyb09.b[61][0]++, ruleId) || (cov_2jqxgkyb09.b[61][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[181]++, "iot-2/intf/" + interfaceId + "/rule/" + ruleId + "/evt/trigger");
      cov_2jqxgkyb09.s[182]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[183]++;
      return this;
    }
  }, {
    key: "subscribeToRuleErrorEvents",
    value: function subscribeToRuleErrorEvents(interfaceId, ruleId, qos) {
      cov_2jqxgkyb09.f[15]++;
      cov_2jqxgkyb09.s[184]++;
      interfaceId = (cov_2jqxgkyb09.b[62][0]++, interfaceId) || (cov_2jqxgkyb09.b[62][1]++, '+');
      cov_2jqxgkyb09.s[185]++;
      ruleId = (cov_2jqxgkyb09.b[63][0]++, ruleId) || (cov_2jqxgkyb09.b[63][1]++, '+');
      cov_2jqxgkyb09.s[186]++;
      qos = (cov_2jqxgkyb09.b[64][0]++, qos) || (cov_2jqxgkyb09.b[64][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[187]++, "iot-2/intf/" + interfaceId + "/rule/" + ruleId + "/err/data");
      cov_2jqxgkyb09.s[188]++;
      this.log.debug("[ApplicationClient:subscribeToRuleErrorEvents] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[189]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[190]++;
      return this;
    }
  }, {
    key: "unsubscribeToRuleErrorEvents",
    value: function unsubscribeToRuleErrorEvents(interfaceId, ruleId) {
      cov_2jqxgkyb09.f[16]++;
      cov_2jqxgkyb09.s[191]++;
      interfaceId = (cov_2jqxgkyb09.b[65][0]++, interfaceId) || (cov_2jqxgkyb09.b[65][1]++, '+');
      cov_2jqxgkyb09.s[192]++;
      ruleId = (cov_2jqxgkyb09.b[66][0]++, ruleId) || (cov_2jqxgkyb09.b[66][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[193]++, "iot-2/intf/" + interfaceId + "/rule/" + ruleId + "/err/data");
      cov_2jqxgkyb09.s[194]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[195]++;
      return this;
    }
  }, {
    key: "subscribeToDeviceCommands",
    value: function subscribeToDeviceCommands(type, id, command, format, qos) {
      cov_2jqxgkyb09.f[17]++;
      cov_2jqxgkyb09.s[196]++;
      type = (cov_2jqxgkyb09.b[67][0]++, type) || (cov_2jqxgkyb09.b[67][1]++, '+');
      cov_2jqxgkyb09.s[197]++;
      id = (cov_2jqxgkyb09.b[68][0]++, id) || (cov_2jqxgkyb09.b[68][1]++, '+');
      cov_2jqxgkyb09.s[198]++;
      command = (cov_2jqxgkyb09.b[69][0]++, command) || (cov_2jqxgkyb09.b[69][1]++, '+');
      cov_2jqxgkyb09.s[199]++;
      format = (cov_2jqxgkyb09.b[70][0]++, format) || (cov_2jqxgkyb09.b[70][1]++, '+');
      cov_2jqxgkyb09.s[200]++;
      qos = (cov_2jqxgkyb09.b[71][0]++, qos) || (cov_2jqxgkyb09.b[71][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[201]++, "iot-2/type/" + type + "/id/" + id + "/cmd/" + command + "/fmt/" + format);
      cov_2jqxgkyb09.s[202]++;
      this.log.debug("[ApplicationClient:subscribeToDeviceCommands] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[203]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[204]++;
      return this;
    }
  }, {
    key: "unsubscribeToDeviceCommands",
    value: function unsubscribeToDeviceCommands(type, id, command, format) {
      cov_2jqxgkyb09.f[18]++;
      cov_2jqxgkyb09.s[205]++;
      type = (cov_2jqxgkyb09.b[72][0]++, type) || (cov_2jqxgkyb09.b[72][1]++, '+');
      cov_2jqxgkyb09.s[206]++;
      id = (cov_2jqxgkyb09.b[73][0]++, id) || (cov_2jqxgkyb09.b[73][1]++, '+');
      cov_2jqxgkyb09.s[207]++;
      command = (cov_2jqxgkyb09.b[74][0]++, command) || (cov_2jqxgkyb09.b[74][1]++, '+');
      cov_2jqxgkyb09.s[208]++;
      format = (cov_2jqxgkyb09.b[75][0]++, format) || (cov_2jqxgkyb09.b[75][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[209]++, "iot-2/type/" + type + "/id/" + id + "/cmd/" + command + "/fmt/" + format);
      cov_2jqxgkyb09.s[210]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[211]++;
      return this;
    }
  }, {
    key: "subscribeToDeviceStatus",
    value: function subscribeToDeviceStatus(type, id, qos) {
      cov_2jqxgkyb09.f[19]++;
      cov_2jqxgkyb09.s[212]++;
      type = (cov_2jqxgkyb09.b[76][0]++, type) || (cov_2jqxgkyb09.b[76][1]++, '+');
      cov_2jqxgkyb09.s[213]++;
      id = (cov_2jqxgkyb09.b[77][0]++, id) || (cov_2jqxgkyb09.b[77][1]++, '+');
      cov_2jqxgkyb09.s[214]++;
      qos = (cov_2jqxgkyb09.b[78][0]++, qos) || (cov_2jqxgkyb09.b[78][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[215]++, "iot-2/type/" + type + "/id/" + id + "/mon");
      cov_2jqxgkyb09.s[216]++;
      this.log.debug("[ApplicationClient:subscribeToDeviceStatus] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[217]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[218]++;
      return this;
    }
  }, {
    key: "subscribeToAppStatus",
    value: function subscribeToAppStatus(id, qos) {
      cov_2jqxgkyb09.f[20]++;
      cov_2jqxgkyb09.s[219]++;
      id = (cov_2jqxgkyb09.b[79][0]++, id) || (cov_2jqxgkyb09.b[79][1]++, '+');
      cov_2jqxgkyb09.s[220]++;
      qos = (cov_2jqxgkyb09.b[80][0]++, qos) || (cov_2jqxgkyb09.b[80][1]++, 0);
      var topic = (cov_2jqxgkyb09.s[221]++, "iot-2/app/" + id + "/mon");
      cov_2jqxgkyb09.s[222]++;
      this.log.debug("[ApplicationClient:subscribeToAppStatus] Calling subscribe with QoS " + qos);
      cov_2jqxgkyb09.s[223]++;
      this.subscribe(topic, qos);
      cov_2jqxgkyb09.s[224]++;
      return this;
    }
  }, {
    key: "unsubscribeToDeviceStatus",
    value: function unsubscribeToDeviceStatus(type, id) {
      cov_2jqxgkyb09.f[21]++;
      cov_2jqxgkyb09.s[225]++;
      type = (cov_2jqxgkyb09.b[81][0]++, type) || (cov_2jqxgkyb09.b[81][1]++, '+');
      cov_2jqxgkyb09.s[226]++;
      id = (cov_2jqxgkyb09.b[82][0]++, id) || (cov_2jqxgkyb09.b[82][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[227]++, "iot-2/type/" + type + "/id/" + id + "/mon");
      cov_2jqxgkyb09.s[228]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[229]++;
      return this;
    }
  }, {
    key: "unsubscribeToAppStatus",
    value: function unsubscribeToAppStatus(id) {
      cov_2jqxgkyb09.f[22]++;
      cov_2jqxgkyb09.s[230]++;
      id = (cov_2jqxgkyb09.b[83][0]++, id) || (cov_2jqxgkyb09.b[83][1]++, '+');
      var topic = (cov_2jqxgkyb09.s[231]++, "iot-2/app/" + id + "/mon");
      cov_2jqxgkyb09.s[232]++;
      this.unsubscribe(topic);
      cov_2jqxgkyb09.s[233]++;
      return this;
    }
  }, {
    key: "publishDeviceEvent",
    value: function publishDeviceEvent(type, id, event, format, data, qos, callback) {
      cov_2jqxgkyb09.f[23]++;
      cov_2jqxgkyb09.s[234]++;
      qos = (cov_2jqxgkyb09.b[84][0]++, qos) || (cov_2jqxgkyb09.b[84][1]++, 0);
      cov_2jqxgkyb09.s[235]++;

      if ((cov_2jqxgkyb09.b[86][0]++, !(0, _util.isDefined)(type)) || (cov_2jqxgkyb09.b[86][1]++, !(0, _util.isDefined)(id)) || (cov_2jqxgkyb09.b[86][2]++, !(0, _util.isDefined)(event)) || (cov_2jqxgkyb09.b[86][3]++, !(0, _util.isDefined)(format))) {
        cov_2jqxgkyb09.b[85][0]++;
        cov_2jqxgkyb09.s[236]++;
        this.log.error("[ApplicationClient:publishDeviceEvent] Required params for publishDeviceEvent not present"); //instead of throwing error, will emit 'error' event.

        cov_2jqxgkyb09.s[237]++;
        this.emit('error', "[ApplicationClient:publishDeviceEvent] Required params for publishDeviceEvent not present");
        cov_2jqxgkyb09.s[238]++;
        return;
      } else {
        cov_2jqxgkyb09.b[85][1]++;
      }

      var topic = (cov_2jqxgkyb09.s[239]++, "iot-2/type/" + type + "/id/" + id + "/evt/" + event + "/fmt/" + format);
      cov_2jqxgkyb09.s[240]++;
      this.publish(topic, data, qos, callback);
      cov_2jqxgkyb09.s[241]++;
      return this;
    }
  }, {
    key: "publishDeviceCommand",
    value: function publishDeviceCommand(type, id, command, format, data, qos, callback) {
      cov_2jqxgkyb09.f[24]++;
      cov_2jqxgkyb09.s[242]++;
      qos = (cov_2jqxgkyb09.b[87][0]++, qos) || (cov_2jqxgkyb09.b[87][1]++, 0);
      cov_2jqxgkyb09.s[243]++;

      if ((cov_2jqxgkyb09.b[89][0]++, !(0, _util.isDefined)(type)) || (cov_2jqxgkyb09.b[89][1]++, !(0, _util.isDefined)(id)) || (cov_2jqxgkyb09.b[89][2]++, !(0, _util.isDefined)(command)) || (cov_2jqxgkyb09.b[89][3]++, !(0, _util.isDefined)(format))) {
        cov_2jqxgkyb09.b[88][0]++;
        cov_2jqxgkyb09.s[244]++;
        this.log.error("[ApplicationClient:publishToDeviceCommand] Required params for publishDeviceCommand not present"); //instead of throwing error, will emit 'error' event.

        cov_2jqxgkyb09.s[245]++;
        this.emit('error', "[ApplicationClient:subscribeToDeviceCommand] Required params for publishDeviceCommand not present");
        cov_2jqxgkyb09.s[246]++;
        return;
      } else {
        cov_2jqxgkyb09.b[88][1]++;
      }

      var topic = (cov_2jqxgkyb09.s[247]++, "iot-2/type/" + type + "/id/" + id + "/cmd/" + command + "/fmt/" + format);
      cov_2jqxgkyb09.s[248]++;
      this.publish(topic, data, qos, callback);
      cov_2jqxgkyb09.s[249]++;
      return this;
    }
  }]);

  return ApplicationClient;
}(_BaseClient2["default"]);

exports["default"] = ApplicationClient;
;

}).call(this,{"isBuffer":require("../../../../node_modules/is-buffer/index.js")})
},{"../../../../node_modules/is-buffer/index.js":103,"../BaseClient":153,"../api/ApiClient":154,"../util":163,"btoa":32}],162:[function(require,module,exports){
"use strict";

var cov_rm019nk7p = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\application\\index.js";
  var hash = "7753a5b893956da5038e559e5e2cce94c74c06dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\application\\index.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "7753a5b893956da5038e559e5e2cce94c74c06dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ApplicationClient", {
  enumerable: true,
  get: function get() {
    return _ApplicationClient["default"];
  }
});

var _ApplicationClient = _interopRequireDefault(require("./ApplicationClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

},{"./ApplicationClient":161}],163:[function(require,module,exports){
(function (__dirname){
"use strict";

var cov_1y8flk8jco = function () {
  var path = "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\util.js";
  var hash = "163dcf687d2d2ece77753371a8026675d85ea7b3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\DaveParker\\Documents\\GitHub\\ibm-watson-iot\\iot-nodejs\\src\\wiotp\\sdk\\util.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "1": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "2": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "3": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "4": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 92
        }
      },
      "5": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 88
        }
      },
      "6": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "7": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "8": {
        start: {
          line: 35,
          column: 36
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "9": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "10": {
        start: {
          line: 41,
          column: 19
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "11": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "12": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "13": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "14": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 55
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 46
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 8
        }
      },
      "18": {
        start: {
          line: 52,
          column: 10
        },
        end: {
          line: 52,
          column: 66
        }
      },
      "19": {
        start: {
          line: 56,
          column: 7
        },
        end: {
          line: 58,
          column: 8
        }
      },
      "20": {
        start: {
          line: 57,
          column: 10
        },
        end: {
          line: 57,
          column: 58
        }
      },
      "21": {
        start: {
          line: 59,
          column: 7
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "22": {
        start: {
          line: 60,
          column: 10
        },
        end: {
          line: 60,
          column: 74
        }
      },
      "23": {
        start: {
          line: 63,
          column: 10
        },
        end: {
          line: 63,
          column: 107
        }
      },
      "24": {
        start: {
          line: 65,
          column: 7
        },
        end: {
          line: 70,
          column: 8
        }
      },
      "25": {
        start: {
          line: 66,
          column: 10
        },
        end: {
          line: 66,
          column: 67
        }
      },
      "26": {
        start: {
          line: 69,
          column: 10
        },
        end: {
          line: 69,
          column: 111
        }
      },
      "27": {
        start: {
          line: 71,
          column: 7
        },
        end: {
          line: 76,
          column: 8
        }
      },
      "28": {
        start: {
          line: 72,
          column: 10
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "29": {
        start: {
          line: 75,
          column: 10
        },
        end: {
          line: 75,
          column: 91
        }
      },
      "30": {
        start: {
          line: 77,
          column: 7
        },
        end: {
          line: 79,
          column: 8
        }
      },
      "31": {
        start: {
          line: 78,
          column: 10
        },
        end: {
          line: 78,
          column: 66
        }
      },
      "32": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 50
        }
      },
      "33": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 33
        }
      },
      "34": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 84,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "isString",
        decl: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 24
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "isNumber",
        decl: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 24
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "isBoolean",
        decl: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 25
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "isDefined",
        decl: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "generateUUID",
        decl: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 33,
            column: 28
          }
        },
        loc: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 65
          },
          end: {
            line: 34,
            column: 66
          }
        },
        loc: {
          start: {
            line: 34,
            column: 77
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 34
      },
      "6": {
        name: "initializeMqttConfig",
        decl: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 36
          }
        },
        loc: {
          start: {
            line: 40,
            column: 44
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 28
          }
        }, {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 46
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 36
          },
          end: {
            line: 35,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 35,
            column: 48
          }
        }, {
          start: {
            line: 35,
            column: 52
          },
          end: {
            line: 35,
            column: 61
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 59
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        }, {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 5
          },
          end: {
            line: 45,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 5
          },
          end: {
            line: 45,
            column: 39
          }
        }, {
          start: {
            line: 45,
            column: 43
          },
          end: {
            line: 45,
            column: 79
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 8
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 8
          }
        }, {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 8
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 7
          },
          end: {
            line: 58,
            column: 8
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 7
          },
          end: {
            line: 58,
            column: 8
          }
        }, {
          start: {
            line: 56,
            column: 7
          },
          end: {
            line: 58,
            column: 8
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 7
          },
          end: {
            line: 64,
            column: 8
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 7
          },
          end: {
            line: 64,
            column: 8
          }
        }, {
          start: {
            line: 59,
            column: 7
          },
          end: {
            line: 64,
            column: 8
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 7
          },
          end: {
            line: 70,
            column: 8
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 7
          },
          end: {
            line: 70,
            column: 8
          }
        }, {
          start: {
            line: 65,
            column: 7
          },
          end: {
            line: 70,
            column: 8
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 7
          },
          end: {
            line: 76,
            column: 8
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 7
          },
          end: {
            line: 76,
            column: 8
          }
        }, {
          start: {
            line: 71,
            column: 7
          },
          end: {
            line: 76,
            column: 8
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 77,
            column: 7
          },
          end: {
            line: 79,
            column: 8
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 7
          },
          end: {
            line: 79,
            column: 8
          }
        }, {
          start: {
            line: 77,
            column: 7
          },
          end: {
            line: 79,
            column: 8
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "163dcf687d2d2ece77753371a8026675d85ea7b3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isString = isString;
exports.isNumber = isNumber;
exports.isBoolean = isBoolean;
exports.isDefined = isDefined;
exports.generateUUID = generateUUID;
exports.initializeMqttConfig = initializeMqttConfig;
exports.isNode = exports.isBrowser = void 0;

var _fs = _interopRequireDefault(require("fs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function isString(value) {
  cov_1y8flk8jco.f[0]++;
  cov_1y8flk8jco.s[0]++;
  return typeof value === 'string';
}

function isNumber(value) {
  cov_1y8flk8jco.f[1]++;
  cov_1y8flk8jco.s[1]++;
  return typeof value === 'number';
}

function isBoolean(value) {
  cov_1y8flk8jco.f[2]++;
  cov_1y8flk8jco.s[2]++;
  return typeof value === 'boolean';
}

function isDefined(value) {
  cov_1y8flk8jco.f[3]++;
  cov_1y8flk8jco.s[3]++;
  return (cov_1y8flk8jco.b[0][0]++, value !== undefined) && (cov_1y8flk8jco.b[0][1]++, value !== null);
}

var isBrowser = (cov_1y8flk8jco.s[4]++, new Function("try {return this===window;}catch(e){ return false;}"));
exports.isBrowser = isBrowser;
var isNode = (cov_1y8flk8jco.s[5]++, new Function("try {return this===global;}catch(e){return false;}"));
exports.isNode = isNode;

function generateUUID() {
  cov_1y8flk8jco.f[4]++;
  cov_1y8flk8jco.s[6]++;
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    cov_1y8flk8jco.f[5]++;
    var r = (cov_1y8flk8jco.s[7]++, Math.random() * 16 | 0),
        v = (cov_1y8flk8jco.s[8]++, c == 'x' ? (cov_1y8flk8jco.b[1][0]++, r) : (cov_1y8flk8jco.b[1][1]++, r & 0x3 | 0x8));
    cov_1y8flk8jco.s[9]++;
    return v.toString(16);
  });
}

function initializeMqttConfig(config) {
  cov_1y8flk8jco.f[6]++;
  var mqttConfig = (cov_1y8flk8jco.s[10]++, {
    password: config['auth-token'],
    rejectUnauthorized: config['reject-unauthorized'] ? (cov_1y8flk8jco.b[2][0]++, config['reject-unauthorized']) : (cov_1y8flk8jco.b[2][1]++, true)
  });
  cov_1y8flk8jco.s[11]++;

  if ((cov_1y8flk8jco.b[4][0]++, config['use-client-certs'] == true) || (cov_1y8flk8jco.b[4][1]++, config['use-client-certs'] == "true")) {
    cov_1y8flk8jco.b[3][0]++;
    var serverCA = (cov_1y8flk8jco.s[12]++, _fs["default"].readFileSync(__dirname + '/IoTFoundation.pem'));
    cov_1y8flk8jco.s[13]++;

    if (config['read-certs'] == true) {
      cov_1y8flk8jco.b[5][0]++;
      cov_1y8flk8jco.s[14]++;
      mqttConfig.ca = [config['client-ca'], serverCA];
      cov_1y8flk8jco.s[15]++;
      mqttConfig.cert = config['client-cert'];
      cov_1y8flk8jco.s[16]++;
      mqttConfig.key = config['client-key'];
      cov_1y8flk8jco.s[17]++;

      if (isDefined(config['client-key-passphrase'])) {
        cov_1y8flk8jco.b[6][0]++;
        cov_1y8flk8jco.s[18]++;
        mqttConfig.passphrase = config['client-key-passphrase'];
      } else {
        cov_1y8flk8jco.b[6][1]++;
      }
    } else {
      cov_1y8flk8jco.b[5][1]++;
      cov_1y8flk8jco.s[19]++;

      if (isDefined(config['server-ca'])) {
        cov_1y8flk8jco.b[7][0]++;
        cov_1y8flk8jco.s[20]++;
        serverCA = _fs["default"].readFileSync(config['server-ca']);
      } else {
        cov_1y8flk8jco.b[7][1]++;
      }

      cov_1y8flk8jco.s[21]++;

      if (isDefined(config['client-ca'])) {
        cov_1y8flk8jco.b[8][0]++;
        cov_1y8flk8jco.s[22]++;
        mqttConfig.ca = [_fs["default"].readFileSync(config['client-ca']), serverCA];
      } else {
        cov_1y8flk8jco.b[8][1]++;
        cov_1y8flk8jco.s[23]++;
        throw new Error('[initializeMqttConfig] config must specify path to self-signed CA certificate');
      }

      cov_1y8flk8jco.s[24]++;

      if (isDefined(config['client-cert'])) {
        cov_1y8flk8jco.b[9][0]++;
        cov_1y8flk8jco.s[25]++;
        mqttConfig.cert = _fs["default"].readFileSync(config['client-cert']);
      } else {
        cov_1y8flk8jco.b[9][1]++;
        cov_1y8flk8jco.s[26]++;
        throw new Error('[initializeMqttConfig] config must specify path to self-signed client certificate');
      }

      cov_1y8flk8jco.s[27]++;

      if (isDefined(config['client-key'])) {
        cov_1y8flk8jco.b[10][0]++;
        cov_1y8flk8jco.s[28]++;
        mqttConfig.key = _fs["default"].readFileSync(config['client-key']);
      } else {
        cov_1y8flk8jco.b[10][1]++;
        cov_1y8flk8jco.s[29]++;
        throw new Error('[initializeMqttConfig] config must specify path to client key');
      }

      cov_1y8flk8jco.s[30]++;

      if (isDefined(config['client-key-passphrase'])) {
        cov_1y8flk8jco.b[11][0]++;
        cov_1y8flk8jco.s[31]++;
        mqttConfig.passphrase = config['client-key-passphrase'];
      } else {
        cov_1y8flk8jco.b[11][1]++;
      }
    }

    cov_1y8flk8jco.s[32]++;
    mqttConfig.servername = config['mqtt-server'];
    cov_1y8flk8jco.s[33]++;
    mqttConfig.protocol = "mqtt";
  } else {
    cov_1y8flk8jco.b[3][1]++;
  }

  cov_1y8flk8jco.s[34]++;
  return mqttConfig;
}

}).call(this,"/src/wiotp/sdk")
},{"fs":30}]},{},[162])(162)
});
